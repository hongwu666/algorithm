/*
SQLyog Ultimate v12.09 (64 bit)
MySQL - 5.6.21-log : Database - istms
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`istms` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `istms`;

/*Table structure for table `abnormal_audit_infor` */

DROP TABLE IF EXISTS `abnormal_audit_infor`;

CREATE TABLE `abnormal_audit_infor` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `abnormal_number` varchar(50) DEFAULT NULL COMMENT '异常工单号',
  `applicat_person` varchar(50) DEFAULT NULL COMMENT '申请人',
  `applicat_time` datetime DEFAULT NULL COMMENT '申请时间',
  `auditor` varchar(50) DEFAULT NULL COMMENT '审核人',
  `audit_result` varchar(100) DEFAULT NULL COMMENT '审核结果',
  `audit_opinion` varchar(100) DEFAULT NULL COMMENT '审核意见',
  `audit_time` datetime DEFAULT NULL COMMENT '审核时间',
  `insert_time` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`id`),
  KEY `key_abnor` (`abnormal_number`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=133 DEFAULT CHARSET=utf8 COMMENT='异常审核信息';

/*Table structure for table `abnormal_duty_office` */

DROP TABLE IF EXISTS `abnormal_duty_office`;

CREATE TABLE `abnormal_duty_office` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `duty_office_cnname` varchar(100) DEFAULT NULL COMMENT '处室名称（中文）',
  `duty_office_enname` varchar(255) DEFAULT NULL COMMENT '处室名称（英文）',
  `remark` varchar(500) DEFAULT NULL COMMENT '备注',
  `is_valid` int(5) DEFAULT NULL COMMENT '是否有效 0：是，1：否''',
  `update_time` datetime DEFAULT NULL COMMENT '修改时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_cnname_key` (`duty_office_cnname`) USING BTREE,
  KEY `nor_enname_key` (`duty_office_enname`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 COMMENT='异常责任处室';

/*Table structure for table `abnormal_handling` */

DROP TABLE IF EXISTS `abnormal_handling`;

CREATE TABLE `abnormal_handling` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `abnormal_number` varchar(50) DEFAULT NULL COMMENT '异常工单号',
  `processing_time` datetime DEFAULT NULL COMMENT '处理时间',
  `processing_person` varchar(50) DEFAULT NULL COMMENT '处理人',
  `processing_department` varchar(50) DEFAULT NULL COMMENT '处理部门',
  `processing_department_phone` varchar(50) DEFAULT NULL COMMENT '处理部门联系方式',
  `assistant_person` varchar(50) DEFAULT NULL COMMENT '协助人',
  `assistant_department` varchar(50) DEFAULT NULL COMMENT '协助部门',
  `actual_recovery_time` datetime DEFAULT NULL COMMENT '实际恢复时间',
  `progress_description` varchar(500) DEFAULT NULL COMMENT '进展描述',
  `follow_up_measures` varchar(500) DEFAULT NULL COMMENT '跟进措施',
  `insert_time` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`id`),
  KEY `key_abnelnum` (`abnormal_number`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=630 DEFAULT CHARSET=utf8 COMMENT='异常处理表';

/*Table structure for table `abnormal_handling_copy` */

DROP TABLE IF EXISTS `abnormal_handling_copy`;

CREATE TABLE `abnormal_handling_copy` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `abnormal_number` varchar(50) DEFAULT NULL COMMENT '异常工单号',
  `processing_time` datetime DEFAULT NULL COMMENT '处理时间',
  `processing_person` varchar(50) DEFAULT NULL COMMENT '处理人',
  `processing_department` varchar(50) DEFAULT NULL COMMENT '处理部门',
  `processing_department_phone` varchar(50) DEFAULT NULL COMMENT '处理部门联系方式',
  `assistant_person` varchar(50) DEFAULT NULL COMMENT '协助人',
  `assistant_department` varchar(50) DEFAULT NULL COMMENT '协助部门',
  `actual_recovery_time` datetime DEFAULT NULL COMMENT '实际恢复时间',
  `progress_description` varchar(500) DEFAULT NULL COMMENT '进展描述',
  `follow_up_measures` varchar(500) DEFAULT NULL COMMENT '跟进措施',
  `insert_time` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`id`),
  KEY `key_abnelnum` (`abnormal_number`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=466 DEFAULT CHARSET=utf8 COMMENT='异常处理表';

/*Table structure for table `abnormal_management_report` */

DROP TABLE IF EXISTS `abnormal_management_report`;

CREATE TABLE `abnormal_management_report` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `abnormal_number` varchar(30) DEFAULT NULL COMMENT '异常工单号',
  `happen_time` datetime DEFAULT NULL COMMENT '发生时间',
  `find_time` datetime DEFAULT NULL COMMENT '发现时间',
  `report_network` varchar(50) DEFAULT NULL COMMENT '上报网点',
  `report_person` varchar(50) DEFAULT NULL COMMENT '上报人',
  `report_phone` varchar(50) DEFAULT NULL COMMENT '上报人联系方式',
  `report_area` varchar(50) DEFAULT NULL COMMENT '上报地区',
  `report_prescription` varchar(50) DEFAULT NULL COMMENT '上报时效',
  `abnormal_category` varchar(30) DEFAULT NULL COMMENT '异常类别',
  `abnormal_type` varchar(30) DEFAULT NULL COMMENT '异常类型',
  `abnormal_result` varchar(30) DEFAULT NULL COMMENT '异常结果',
  `end_processing_person` varchar(200) DEFAULT NULL COMMENT '完结处理人(审核人)',
  `subject` varchar(200) DEFAULT NULL COMMENT '主题',
  `event_description` varchar(500) DEFAULT NULL COMMENT '事件描述',
  `follow_up_measures` varchar(500) DEFAULT NULL COMMENT '跟进措施',
  `scope_of_influence` varchar(50) DEFAULT NULL COMMENT '影响范围',
  `influence_cargo_count` int(50) DEFAULT NULL COMMENT '影响快件票数',
  `cargo_detail` varchar(5000) DEFAULT NULL COMMENT '快件明细',
  `expected_recovery_time` datetime DEFAULT NULL COMMENT '预计恢复时间',
  `actual_recovery_time` datetime DEFAULT NULL COMMENT '实际恢复时间',
  `report_time` datetime DEFAULT NULL COMMENT '上报时间',
  `influence_network` varchar(50) DEFAULT NULL COMMENT '影响网点',
  `main_lift_number` varchar(50) DEFAULT NULL COMMENT '主提单号',
  `happen_place` varchar(50) DEFAULT NULL COMMENT '发生地点',
  `email_synchronization` varchar(2000) DEFAULT NULL COMMENT '邮件同步',
  `original_attachment` varchar(50) DEFAULT NULL COMMENT '原附件名',
  `update_attachment` varchar(50) DEFAULT NULL COMMENT '修改后的附件名',
  `abnormal_status` int(10) DEFAULT NULL COMMENT '0:草稿，1:已上报，2:已处理，3:待审核，4:已完结；异常状态',
  `actual_auditor` varchar(50) DEFAULT NULL COMMENT '实际审核人',
  `actual_audit_time` datetime DEFAULT NULL COMMENT '实际审核时间',
  `applicant_for_auditor` varchar(50) DEFAULT NULL COMMENT '申请审核人',
  `application_for_audit_time` datetime DEFAULT NULL COMMENT '申请审核时间',
  `data_sources` varchar(50) DEFAULT NULL COMMENT '数据来源',
  `abnormal_reminding` varchar(50) DEFAULT NULL COMMENT '异常提醒',
  `current_processing_person` varchar(50) DEFAULT NULL COMMENT '当前处理人',
  `current_processing_department` varchar(50) DEFAULT NULL COMMENT '当前处理部门',
  `current_processing_time` datetime DEFAULT NULL COMMENT '当前处理时间',
  `progress_description` varchar(100) DEFAULT NULL COMMENT '进展描述',
  `reminding_count` int(50) DEFAULT NULL COMMENT '提醒次数',
  `insert_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_key` (`abnormal_number`) USING BTREE,
  KEY `idx_report_time` (`report_time`) USING HASH,
  KEY `idx_abnormal_category` (`abnormal_category`) USING BTREE,
  KEY `idx_abnormal_type` (`abnormal_type`) USING BTREE,
  KEY `idx_abnormal_result` (`abnormal_result`) USING BTREE,
  KEY `idx_report_network` (`report_network`) USING BTREE,
  KEY `idx_abnormal_status` (`abnormal_status`) USING BTREE,
  KEY `idx_abnormal_number` (`abnormal_number`) USING BTREE,
  KEY `idx_influence_cargo_count` (`influence_cargo_count`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1007 DEFAULT CHARSET=utf8 COMMENT='异常管理上报';

/*Table structure for table `abnormal_remind_infor` */

DROP TABLE IF EXISTS `abnormal_remind_infor`;

CREATE TABLE `abnormal_remind_infor` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `abnormal_number` varchar(50) DEFAULT NULL COMMENT '异常工单号',
  `remind_time` datetime DEFAULT NULL COMMENT '提醒日期',
  `urgency_degree` varchar(50) DEFAULT NULL COMMENT '紧急程度',
  `subject` varchar(50) DEFAULT NULL COMMENT '主题',
  `addressee_person` varchar(500) DEFAULT NULL COMMENT '收件人',
  `copy_person` varchar(500) DEFAULT NULL COMMENT '抄送人',
  `content_description` varchar(1000) DEFAULT NULL COMMENT '内容描述',
  `insert_time` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`id`),
  KEY `key_abnornum` (`abnormal_number`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=81 DEFAULT CHARSET=utf8 COMMENT='异常提醒信息';

/*Table structure for table `aging_help_assign_detailed` */

DROP TABLE IF EXISTS `aging_help_assign_detailed`;

CREATE TABLE `aging_help_assign_detailed` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `aging_help_detailed_id` bigint(11) NOT NULL COMMENT '时效挽救id',
  `assign_assist_network_code` varchar(50) DEFAULT NULL COMMENT '被分派将要协查的网点代码（分派给谁）',
  `assign_account` varchar(50) DEFAULT NULL COMMENT '分派人账号',
  `assign_detailed` varchar(500) DEFAULT NULL COMMENT '分派内容详情',
  `assign_time` datetime DEFAULT NULL COMMENT '分派时间（当地时间）',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  PRIMARY KEY (`id`),
  KEY `aging_help_detailed_id` (`aging_help_detailed_id`),
  KEY `insert_time` (`insert_time`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8mb4 COMMENT='时效挽救分派明细表';

/*Table structure for table `aging_help_check_detailed` */

DROP TABLE IF EXISTS `aging_help_check_detailed`;

CREATE TABLE `aging_help_check_detailed` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `aging_help_detailed_id` bigint(11) NOT NULL COMMENT '时效挽救id',
  `aging_help_handle_detailed_id` bigint(11) DEFAULT NULL COMMENT '时效挽救处理/协查明细id',
  `check_status` int(1) DEFAULT NULL COMMENT '审核状态：是否通过：0：否，1：是，2：待审核',
  `check_account` varchar(50) DEFAULT NULL COMMENT '审核人账号',
  `check_result` varchar(50) DEFAULT NULL COMMENT '审核结果',
  `check_detailed` varchar(500) DEFAULT NULL COMMENT '审核详情',
  `check_time` datetime DEFAULT NULL COMMENT '审核时间（当地时间）',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8mb4 COMMENT='时效挽救审核明细表';

/*Table structure for table `aging_help_detailed` */

DROP TABLE IF EXISTS `aging_help_detailed`;

CREATE TABLE `aging_help_detailed` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `aging_help_code` varchar(100) DEFAULT NULL COMMENT '时效挽救代码',
  `aging_help_status` int(1) DEFAULT NULL COMMENT '时效挽救状态（0未处理、1处理中、2审核中、3已完结）',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `track_link` varchar(50) DEFAULT NULL COMMENT '产生记录时最后的路由环节（中文）',
  `track_link_en` varchar(50) DEFAULT NULL COMMENT '产生记录时最后的路由环节（英文）',
  `abnormal_link` varchar(50) DEFAULT NULL COMMENT '产生记录时最后的异常环节',
  `op_code` varchar(50) DEFAULT NULL COMMENT '产生记录时最后的巴枪操作码',
  `op_name` varchar(50) DEFAULT NULL COMMENT '产生记录时最后的巴枪操作（中文）',
  `op_name_en` varchar(50) DEFAULT NULL COMMENT '产生记录时最后的巴枪操作（英文）',
  `op_network_code` varchar(50) DEFAULT NULL COMMENT '产生记录时最后的操作网点代码',
  `op_area_code` varchar(50) DEFAULT NULL COMMENT '产生记录时最后的操作网点所在地区代码',
  `op_hq_code` varchar(50) DEFAULT NULL COMMENT '产生记录时最后的操作网点所在经营本部代码',
  `op_city_code` varchar(255) DEFAULT NULL COMMENT '产生记录时最后的操作网点所在城市代码',
  `op_time` datetime DEFAULT NULL COMMENT '产生记录时最后的巴枪时间',
  `last_op_network_code` varchar(50) DEFAULT NULL COMMENT '最新操作网点代码',
  `last_op_code_and_name` varchar(50) DEFAULT NULL COMMENT '最新操作码和操作名称',
  `warning_type_code` int(2) DEFAULT NULL COMMENT '预警类型代码（0时效投诉，1超出N天标准，2超出国内时效，3提发货异常）',
  `warning_type_cn` varchar(150) DEFAULT NULL COMMENT '预警类型（中文）',
  `warning_type_en` varchar(150) DEFAULT NULL COMMENT '预警类型（英文）',
  `warning_insert_time` datetime NOT NULL COMMENT '预警记录产生时间（当地时间）',
  `warning_minute` bigint(11) DEFAULT NULL COMMENT '预警分钟数（当前时间 - 预警记录产生时间）',
  `warning_count` bigint(11) DEFAULT NULL COMMENT '预警总次数',
  `latest_handle_time` datetime DEFAULT NULL COMMENT '最晚处理时间（产生时间 + 6小时）',
  `actual_handle_time` datetime DEFAULT NULL COMMENT '实际处理时间',
  `handle_minutes` bigint(11) DEFAULT NULL COMMENT '处理时长（处理时间 - 产生时间）',
  `handle_ontime_status` int(1) DEFAULT NULL COMMENT '处理是否及时（0：是，1：否）',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `product_type` varchar(50) DEFAULT NULL COMMENT '产品类型（SE、EE）',
  `consign_content` text COMMENT '托寄物内容',
  `customer_name` varchar(100) DEFAULT NULL COMMENT '客户名称',
  `customer_card_no` varchar(50) DEFAULT NULL COMMENT '客户付款卡号',
  `consign_time` datetime DEFAULT NULL COMMENT '收件时间',
  `consign_date` date DEFAULT NULL COMMENT '收件日期',
  `express_transit_days` bigint(11) DEFAULT NULL COMMENT '快件流转天数',
  `domestic_standard` bigint(11) DEFAULT NULL COMMENT '国内时效标准',
  `aging_promise` datetime DEFAULT NULL COMMENT '承诺时效',
  `actual_delivery_time` datetime DEFAULT NULL COMMENT '实际派送时间',
  `handle_measure_cn` varchar(50) DEFAULT NULL COMMENT '处理措施（中文）',
  `handle_measure_en` varchar(50) DEFAULT NULL COMMENT '处理措施（英文）',
  `handle_detailed` varchar(500) DEFAULT NULL COMMENT '处理详情',
  `handle_time` datetime DEFAULT NULL COMMENT '处理时间',
  `handle_count` bigint(11) DEFAULT NULL COMMENT '处理次数',
  `handle_network_code` varchar(50) DEFAULT NULL COMMENT '处理人所在网点代码',
  `handle_account` varchar(50) DEFAULT NULL COMMENT '处理人账号',
  `handle_assist_network_code` varchar(50) DEFAULT NULL COMMENT '处理/协查网点代码（只有这个有权限,每次分派改变）',
  `assist_measure_cn` varchar(50) DEFAULT NULL COMMENT '协查措施（中文）',
  `assist_measure_en` varchar(50) DEFAULT NULL COMMENT '协查措施（英文）',
  `assist_detailed` varchar(500) DEFAULT NULL COMMENT '协查详情',
  `assist_time` datetime DEFAULT NULL COMMENT '协查时间',
  `assist_count` bigint(11) DEFAULT NULL COMMENT '协查次数',
  `assist_network_code` varchar(50) DEFAULT NULL COMMENT '协查人所在网点代码',
  `assist_acount` varchar(50) DEFAULT NULL COMMENT '协查人账号',
  `over_check_time` datetime DEFAULT NULL COMMENT '完结审核时间',
  `over_check_account` varchar(50) DEFAULT NULL COMMENT '完结审核人账号',
  `ex1` varchar(50) DEFAULT NULL COMMENT '扩展1',
  `ex2` varchar(50) DEFAULT NULL COMMENT '扩展2',
  `ex3` varchar(50) DEFAULT NULL COMMENT '扩展3',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_waybill_no_warning_type` (`waybill_no`,`warning_type_cn`) USING BTREE,
  UNIQUE KEY `unique_aging_help_code` (`aging_help_code`) USING BTREE,
  KEY `insert_time` (`insert_time`) USING BTREE,
  KEY `update_time` (`update_time`),
  KEY `waybill_no` (`waybill_no`),
  KEY `waybill_no_warning_type_cn` (`waybill_no`,`warning_type_cn`) USING BTREE,
  KEY `aging_help_status` (`aging_help_status`)
) ENGINE=InnoDB AUTO_INCREMENT=1158 DEFAULT CHARSET=utf8mb4 COMMENT='时效挽救明细';

/*Table structure for table `aging_help_handle_detailed` */

DROP TABLE IF EXISTS `aging_help_handle_detailed`;

CREATE TABLE `aging_help_handle_detailed` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `aging_help_detailed_id` bigint(11) NOT NULL COMMENT '时效挽救id',
  `type` int(1) DEFAULT NULL COMMENT '0：处理、1：协查',
  `handle_measure_cn` varchar(50) DEFAULT NULL COMMENT '处理措施',
  `handle_network_code` varchar(50) DEFAULT NULL COMMENT '处理网点代码',
  `handle_account` varchar(50) DEFAULT NULL COMMENT '处理人账号',
  `handle_detailed` varchar(500) DEFAULT NULL COMMENT '处理详情',
  `handle_time` datetime DEFAULT NULL COMMENT '处理时间（当地时间）',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  PRIMARY KEY (`id`),
  KEY `aging_help_detailed_id` (`aging_help_detailed_id`),
  KEY `insert_time` (`insert_time`)
) ENGINE=InnoDB AUTO_INCREMENT=102 DEFAULT CHARSET=utf8mb4 COMMENT='时效挽救处理/协查明细表';

/*Table structure for table `aging_help_handle_measure` */

DROP TABLE IF EXISTS `aging_help_handle_measure`;

CREATE TABLE `aging_help_handle_measure` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `handle_measure_cn` varchar(100) DEFAULT NULL COMMENT '处理措施（中文）',
  `handle_measure_en` varchar(200) DEFAULT NULL COMMENT '处理措施（英文）',
  `remark` varchar(500) DEFAULT NULL COMMENT '备注',
  `is_valid` int(1) DEFAULT NULL COMMENT '是否有效。0：是，1：否',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  PRIMARY KEY (`id`,`update_time`),
  UNIQUE KEY `unique_cn_key` (`handle_measure_cn`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8 COMMENT='时效挽救处理措施';

/*Table structure for table `aging_help_standard` */

DROP TABLE IF EXISTS `aging_help_standard`;

CREATE TABLE `aging_help_standard` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `product_type` varchar(50) DEFAULT NULL COMMENT '产品类型',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `several_days_standard` bigint(11) DEFAULT NULL COMMENT 'N天标准',
  `domestic_standard` bigint(11) DEFAULT NULL COMMENT '国内标准',
  `remark` varchar(500) DEFAULT NULL COMMENT '备注',
  `is_valid` int(1) DEFAULT NULL COMMENT '是否有效。0：是，1：否',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  PRIMARY KEY (`id`),
  UNIQUE KEY `union_index` (`product_type`,`source_country_code`,`dest_country_code`) USING BTREE,
  KEY `idx_is_valid` (`is_valid`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8mb4 COMMENT='时效挽救时效标准';

/*Table structure for table `aging_help_warning_type` */

DROP TABLE IF EXISTS `aging_help_warning_type`;

CREATE TABLE `aging_help_warning_type` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `warning_module` varchar(50) DEFAULT NULL COMMENT '预警模块',
  `warning_type_code` int(2) DEFAULT NULL COMMENT '预警类型代码（0时效投诉，1超出N天标准，2超出国内时效，3提发货异常）',
  `warning_type_cn` varchar(100) DEFAULT NULL COMMENT '预警类型（中文）',
  `warning_type_en` varchar(150) DEFAULT NULL COMMENT '预警类型（英文）',
  `warning_reason_cn` varchar(100) DEFAULT NULL COMMENT '预警原因（中文）',
  `warning_reason_en` varchar(150) DEFAULT NULL COMMENT '预警原因（英文）',
  `over_check_account` varchar(50) DEFAULT NULL COMMENT '完结审核人账号',
  `remark` varchar(500) DEFAULT NULL COMMENT '备注',
  `is_valid` int(1) DEFAULT NULL COMMENT '是否有效。0：是，1：否',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  PRIMARY KEY (`id`),
  KEY `idx_warning_type_cn` (`warning_type_cn`) USING BTREE,
  KEY `idx_warning_type_en` (`warning_type_en`) USING BTREE,
  KEY `idx_is_valid` (`is_valid`) USING BTREE,
  KEY `warning_type_code` (`warning_type_code`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='时效挽救预警类型';

/*Table structure for table `ams_send_and_get_abnormal_config` */

DROP TABLE IF EXISTS `ams_send_and_get_abnormal_config`;

CREATE TABLE `ams_send_and_get_abnormal_config` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `origin_country` varchar(50) DEFAULT NULL COMMENT '原寄地国家',
  `origin_airport_code` varchar(50) DEFAULT NULL COMMENT '始发地机场代码',
  `destination_country` varchar(50) DEFAULT NULL COMMENT '目的地国家',
  `destination_airport_code` varchar(50) DEFAULT NULL COMMENT '目的地机场代码',
  `delivery_entry_time` int(5) DEFAULT NULL COMMENT '发货录入时长( 小时 ）',
  `taking_entry_time` int(5) DEFAULT NULL COMMENT '提货录入时长（小时）',
  `send_get_between_time` int(5) DEFAULT NULL COMMENT '发提货间隔时长( 小时 )',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  KEY `index_origin_country` (`origin_country`) USING HASH,
  KEY `index_destination_country` (`destination_country`) USING HASH,
  KEY `index_origin_airport_code` (`origin_airport_code`) USING HASH,
  KEY `index_destination_airport_code` (`destination_airport_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=720 DEFAULT CHARSET=utf8 COMMENT='发提货异常配置';

/*Table structure for table `ams_send_and_get_abnormal_detailed` */

DROP TABLE IF EXISTS `ams_send_and_get_abnormal_detailed`;

CREATE TABLE `ams_send_and_get_abnormal_detailed` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `mention_delivery_exception_mics_id` bigint(11) DEFAULT NULL COMMENT 'mention_delivery_exception_mics 主键ID',
  `abnormal_type` smallint(5) DEFAULT NULL COMMENT '异常类型(1 发货异常 2 提货异常)',
  `abnormal_reason` varchar(100) DEFAULT NULL COMMENT '异常原因',
  `abnormal_happen_net` varchar(100) DEFAULT NULL COMMENT '异常发生网点',
  `actual_process_net` varchar(100) DEFAULT NULL COMMENT '实际处理网点',
  `processor` varchar(100) DEFAULT NULL COMMENT '处理人',
  `process_datetime` datetime DEFAULT NULL COMMENT '处理时间',
  `check_result` varchar(100) DEFAULT NULL COMMENT '核查结果',
  `process_status` smallint(50) DEFAULT NULL COMMENT '处理状态(1 已发货 2 未发货 3 已提货 4 未提货)',
  `process_detail` varchar(500) DEFAULT NULL COMMENT '处理详情',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  KEY `index_mention_delivery_exception_mics_id` (`mention_delivery_exception_mics_id`) USING HASH,
  KEY `index_abnormal_type` (`abnormal_type`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='发提货处理详情';

/*Table structure for table `ams_send_and_get_suspected_result` */

DROP TABLE IF EXISTS `ams_send_and_get_suspected_result`;

CREATE TABLE `ams_send_and_get_suspected_result` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `abnormal_link` varchar(100) DEFAULT NULL COMMENT '异常环节',
  `check_result` varchar(100) DEFAULT NULL COMMENT '核查结果（中文）',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `index_check_result` (`check_result`) USING HASH,
  KEY `index_abnormal_link` (`abnormal_link`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COMMENT='发提货核查结果';

/*Table structure for table `backlog_homepage` */

DROP TABLE IF EXISTS `backlog_homepage`;

CREATE TABLE `backlog_homepage` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `classify` varchar(50) DEFAULT NULL COMMENT '分类\r\n',
  `classify_model` varchar(50) DEFAULT NULL COMMENT '模块名字',
  `backlog_num` int(11) DEFAULT '0' COMMENT '待办理数',
  `is_status` int(5) DEFAULT '0' COMMENT '0是未忽略,1是已忽略',
  `user_name` varchar(50) DEFAULT NULL COMMENT '用户的id',
  `update_time` datetime DEFAULT NULL COMMENT '修改时间',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_classify_user` (`classify`,`user_name`) USING HASH,
  KEY `key_classify` (`classify`) USING BTREE,
  KEY `key_username` (`user_name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=96 DEFAULT CHARSET=utf8 COMMENT='待办首页';

/*Table structure for table `batch_full_flow` */

DROP TABLE IF EXISTS `batch_full_flow`;

CREATE TABLE `batch_full_flow` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `start_place` varchar(50) NOT NULL COMMENT '始发地网点',
  `start_batch` varchar(50) NOT NULL COMMENT '始发地班次',
  `end_place` varchar(50) DEFAULT NULL COMMENT '目的地网点',
  `end_batch` varchar(50) DEFAULT NULL COMMENT '目的地班次',
  `work_day` int(11) DEFAULT NULL COMMENT '工作日',
  `product_type` varchar(10) NOT NULL COMMENT '产品类型',
  `import_port` varchar(30) DEFAULT NULL COMMENT '进口口岸',
  `is_break` bit(1) NOT NULL COMMENT '是否中断',
  `is_electric` bit(1) DEFAULT NULL COMMENT '是否带电',
  `node_size` tinyint(4) NOT NULL COMMENT '经节点数',
  `total_time` int(11) NOT NULL COMMENT '总耗时',
  `batch_chain` text NOT NULL COMMENT '班次链路',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  PRIMARY KEY (`id`),
  KEY `in_start_place` (`start_place`),
  KEY `in_end_place` (`end_place`),
  KEY `start_batch` (`start_batch`,`work_day`,`product_type`,`is_electric`,`node_size`),
  KEY `product_type` (`product_type`),
  KEY `in_import_port` (`import_port`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COMMENT='班次路由表';

/*Table structure for table `bd_abnormal_category_config` */

DROP TABLE IF EXISTS `bd_abnormal_category_config`;

CREATE TABLE `bd_abnormal_category_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `abnormal_category_cn` varchar(50) DEFAULT NULL COMMENT '异常类别（中文）',
  `abnormal_category_en` varchar(50) DEFAULT NULL COMMENT '异常类别（英文）',
  `remark` varchar(200) DEFAULT NULL COMMENT '备注',
  `is_available` int(1) DEFAULT '1' COMMENT '是否有效(0:否，1;是)',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `abnormal_category_cn_key` (`abnormal_category_cn`) USING HASH,
  KEY `update_time_key` (`update_time`) USING BTREE,
  KEY `abnormal_category_en_key` (`abnormal_category_en`) USING HASH,
  KEY `is_available_key` (`is_available`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4 COMMENT='异常类别配置表';

/*Table structure for table `bd_abnormal_email_config` */

DROP TABLE IF EXISTS `bd_abnormal_email_config`;

CREATE TABLE `bd_abnormal_email_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `abnormal_category` bigint(11) DEFAULT NULL COMMENT '异常类别（中文）',
  `abnormal_type` bigint(11) DEFAULT NULL COMMENT '异常类型（中文）',
  `country_abb` varchar(10) DEFAULT NULL COMMENT '国家',
  `email` varchar(1000) DEFAULT NULL COMMENT '邮箱',
  `is_available` int(1) DEFAULT '1' COMMENT '是否有效(0:否，1;是)',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `abnormal_category_type_country_key` (`abnormal_category`,`abnormal_type`,`country_abb`) USING BTREE,
  KEY `update_time_key` (`update_time`) USING BTREE,
  KEY `abnormal_type_key` (`abnormal_type`) USING HASH,
  KEY `country_abb_key` (`country_abb`) USING HASH,
  KEY `is_available_key` (`is_available`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=184 DEFAULT CHARSET=utf8mb4 COMMENT='异常邮件配置表';

/*Table structure for table `bd_abnormal_result_config` */

DROP TABLE IF EXISTS `bd_abnormal_result_config`;

CREATE TABLE `bd_abnormal_result_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `abnormal_category` bigint(11) DEFAULT NULL COMMENT '异常类别（中文）',
  `abnormal_type` bigint(11) DEFAULT NULL COMMENT '异常类型（中文）',
  `abnormal_result_cn` varchar(50) DEFAULT NULL COMMENT '异常结果（中文）',
  `abnormal_result_en` varchar(50) DEFAULT NULL COMMENT '异常结果（英文）',
  `remark` varchar(200) DEFAULT NULL COMMENT '备注',
  `is_available` int(1) DEFAULT '1' COMMENT '是否有效(0:否，1;是)',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `abnormal_category_type_result_key` (`abnormal_category`,`abnormal_type`,`abnormal_result_cn`) USING BTREE,
  KEY `update_time_key` (`update_time`) USING BTREE,
  KEY `abnormal_type_key` (`abnormal_type`) USING BTREE,
  KEY `abnormal_result_cn_key` (`abnormal_result_cn`) USING BTREE,
  KEY `abnormal_result_en_key` (`abnormal_result_en`) USING BTREE,
  KEY `is_available_key` (`is_available`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=80 DEFAULT CHARSET=utf8mb4 COMMENT='异常结果配置表';

/*Table structure for table `bd_abnormal_type_config` */

DROP TABLE IF EXISTS `bd_abnormal_type_config`;

CREATE TABLE `bd_abnormal_type_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `abnormal_category` bigint(11) DEFAULT NULL COMMENT '异常类别（中文）',
  `abnormal_type_cn` varchar(50) DEFAULT NULL COMMENT '异常类型（中文）',
  `abnormal_type_en` varchar(50) DEFAULT NULL COMMENT '异常类型（英文）',
  `end_processing_person` varchar(200) DEFAULT NULL COMMENT '完结处理人',
  `remark` varchar(200) DEFAULT NULL COMMENT '备注',
  `is_available` int(1) DEFAULT '1' COMMENT '是否有效(0:否，1;是)',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `abnormal_category_type_key` (`abnormal_category`,`abnormal_type_cn`) USING BTREE,
  KEY `update_time_key` (`update_time`) USING BTREE,
  KEY `abnormal_type_cn_key` (`abnormal_type_cn`) USING HASH,
  KEY `abnormal_type_en_key` (`abnormal_type_en`) USING HASH,
  KEY `is_available_key` (`is_available`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=37 DEFAULT CHARSET=utf8mb4 COMMENT='异常类型配置表';

/*Table structure for table `bd_area_maintain` */

DROP TABLE IF EXISTS `bd_area_maintain`;

CREATE TABLE `bd_area_maintain` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `area_cn` varchar(50) DEFAULT NULL COMMENT '片区中文',
  `area_en` varchar(50) DEFAULT NULL COMMENT '片区英文',
  `city_code` varchar(50) DEFAULT NULL COMMENT '城市代码',
  `operator` varchar(50) DEFAULT NULL COMMENT '操作人',
  `operation_time` datetime DEFAULT NULL COMMENT '操作时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `city_code_key` (`city_code`) USING HASH,
  KEY `area_en_key` (`area_en`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=1847 DEFAULT CHARSET=utf8 COMMENT='片区维护表';

/*Table structure for table `bd_city` */

DROP TABLE IF EXISTS `bd_city`;

CREATE TABLE `bd_city` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `continent_code` varchar(255) NOT NULL,
  `country_code` varchar(255) NOT NULL,
  `province_code` varchar(255) NOT NULL,
  `city_code` varchar(255) NOT NULL,
  `city_name` varchar(255) NOT NULL,
  `sf_code` varchar(255) DEFAULT NULL,
  `insert_user` varchar(255) NOT NULL,
  `insert_time` datetime NOT NULL,
  `update_time` datetime NOT NULL,
  `update_user` varchar(255) NOT NULL COMMENT 'utf8',
  PRIMARY KEY (`id`),
  KEY `idx_continent_code` (`continent_code`),
  KEY `idx_country_code` (`country_code`),
  KEY `idx_province_code` (`province_code`),
  KEY `idx_city_code` (`city_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `bd_citymanagerment` */

DROP TABLE IF EXISTS `bd_citymanagerment`;

CREATE TABLE `bd_citymanagerment` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `country` varchar(50) DEFAULT NULL COMMENT '国家',
  `country_abb` varchar(50) DEFAULT NULL COMMENT '国家的简写',
  `country_en` varchar(50) DEFAULT NULL COMMENT '国家的英文',
  `state_name` varchar(50) DEFAULT NULL COMMENT '州或市的名字',
  `state_nename` varchar(50) DEFAULT NULL COMMENT '州或市的英文',
  `city_name` varchar(50) DEFAULT NULL COMMENT '城市的名字',
  `city_nename` varchar(50) DEFAULT NULL COMMENT '城市的英文',
  `city_code` varchar(50) DEFAULT NULL COMMENT '城市的代码',
  `time_zone` int(11) DEFAULT NULL COMMENT '时区',
  `insert_time` datetime DEFAULT NULL,
  `operator` varchar(50) DEFAULT NULL COMMENT '操作人',
  PRIMARY KEY (`id`),
  KEY `country_key` (`country`) USING BTREE,
  KEY `country_abb_key` (`country_abb`) USING BTREE,
  KEY `state_name_key` (`state_name`) USING BTREE,
  KEY `city_name_key` (`city_name`) USING BTREE,
  KEY `city_code_key` (`city_code`) USING BTREE,
  KEY `state_enname_key` (`state_nename`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4335 DEFAULT CHARSET=utf8 COMMENT='城市管理表';

/*Table structure for table `bd_continent` */

DROP TABLE IF EXISTS `bd_continent`;

CREATE TABLE `bd_continent` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `continent_name` varchar(200) NOT NULL COMMENT '洲名',
  `create_time` datetime NOT NULL,
  `create_user` varchar(50) NOT NULL,
  `update_time` datetime NOT NULL,
  `update_user` varchar(50) NOT NULL,
  `continent_code` varchar(255) DEFAULT NULL COMMENT '代码',
  PRIMARY KEY (`id`),
  KEY `idx_continent` (`continent_name`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

/*Table structure for table `bd_country` */

DROP TABLE IF EXISTS `bd_country`;

CREATE TABLE `bd_country` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `country_code` varchar(255) NOT NULL COMMENT '国家二字码',
  `country_name` varchar(255) NOT NULL COMMENT '国家名称',
  `continent_code` varchar(255) DEFAULT NULL COMMENT '所属大洲',
  `sf_code` varchar(255) DEFAULT NULL COMMENT 'sf内部代码_来自现有数据',
  `insert_time` datetime NOT NULL,
  `insert_user` varchar(255) NOT NULL,
  `update_time` datetime NOT NULL,
  `update_user` varchar(255) NOT NULL,
  `currency_code` varchar(10) DEFAULT NULL COMMENT '币种',
  `weight_unit` varchar(10) DEFAULT NULL COMMENT '重量单位',
  `country_phone_code` varchar(10) DEFAULT NULL COMMENT '国家电话区号',
  `time_zone` char(5) DEFAULT NULL COMMENT '时区',
  PRIMARY KEY (`id`),
  KEY `idx_country_code` (`country_code`),
  KEY `idx_continent_code` (`continent_code`)
) ENGINE=InnoDB AUTO_INCREMENT=258 DEFAULT CHARSET=utf8;

/*Table structure for table `bd_country_area` */

DROP TABLE IF EXISTS `bd_country_area`;

CREATE TABLE `bd_country_area` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `area_cn` varchar(50) DEFAULT NULL COMMENT '片区中文',
  `area_en` varchar(50) DEFAULT NULL COMMENT '片区英文',
  `country_cn` varchar(50) DEFAULT NULL COMMENT '国家中文',
  `country_en` varchar(50) DEFAULT NULL COMMENT '国家英文',
  `country_code` varchar(50) DEFAULT NULL COMMENT '国家代码',
  `country_abb` varchar(50) DEFAULT NULL COMMENT '国家缩写',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  KEY `area_cn_key` (`area_cn`) USING HASH,
  KEY `area_en_key` (`area_en`) USING HASH,
  KEY `country_cn_key` (`country_cn`) USING HASH,
  KEY `country_code_key` (`country_code`) USING HASH,
  KEY `country_abb_key` (`country_abb`) USING HASH,
  KEY `country_en_key` (`country_en`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=107 DEFAULT CHARSET=utf8 COMMENT='国家片区维护表';

/*Table structure for table `bd_country_maintain` */

DROP TABLE IF EXISTS `bd_country_maintain`;

CREATE TABLE `bd_country_maintain` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `country_cn` varchar(50) NOT NULL COMMENT '国家中文',
  `country_en` varchar(50) NOT NULL COMMENT '国家英文',
  `country_abb` varchar(50) NOT NULL COMMENT '国家简写',
  `time_zone` varchar(5) DEFAULT NULL COMMENT '时区',
  `operator` varchar(50) DEFAULT NULL COMMENT '操作人',
  `operation_time` datetime DEFAULT NULL COMMENT '操作时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `country_abb_uk` (`country_abb`) USING HASH,
  UNIQUE KEY `country_cn_uk` (`country_cn`) USING HASH,
  UNIQUE KEY `country_en_uk` (`country_en`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=4305 DEFAULT CHARSET=utf8 COMMENT='国家维护表';

/*Table structure for table `bd_customs_flight_info` */

DROP TABLE IF EXISTS `bd_customs_flight_info`;

CREATE TABLE `bd_customs_flight_info` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `destination_country_code` varchar(25) NOT NULL COMMENT '目的地国家代码',
  `net_code` varchar(25) NOT NULL COMMENT '装车网点代码',
  `download_net_code` varchar(25) DEFAULT NULL COMMENT '目标网点代码',
  `flight` varchar(25) NOT NULL COMMENT '班次名称',
  `days` varchar(5) NOT NULL COMMENT '第几天',
  `latest_handover_time` time NOT NULL COMMENT '最晚交接时间',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL,
  `modified_emp_code` varchar(25) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_destination_country_code` (`destination_country_code`) USING HASH,
  KEY `idx_flight` (`flight`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=585 DEFAULT CHARSET=utf8 COMMENT='关务班次信息';

/*Table structure for table `bd_customs_monitor` */

DROP TABLE IF EXISTS `bd_customs_monitor`;

CREATE TABLE `bd_customs_monitor` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `original_destination_country` varchar(50) DEFAULT NULL COMMENT '原寄地国家',
  `destination_country` varchar(50) DEFAULT NULL COMMENT '目的地国家',
  `flight_arrival_start` time DEFAULT NULL COMMENT '航班抵达开始时间',
  `flight_arrival_end` time DEFAULT NULL COMMENT '航班抵达结束时间',
  `customs_type` varchar(50) DEFAULT NULL COMMENT '报关 0:正式报关 1：非正式报关',
  `customs_clearance_pattern` varchar(50) DEFAULT NULL COMMENT '清关模式 0:ECCF 1:CFS',
  `product_type` varchar(50) DEFAULT NULL COMMENT '产品类型',
  `last_loading_days` varchar(50) DEFAULT NULL COMMENT '最晚装车天数 1:第一天 2:第二天 3:第三天 以此类推',
  `statement_time` time DEFAULT NULL COMMENT '最晚装车时间',
  `schedule` varchar(50) DEFAULT NULL COMMENT '班次',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_customs_combination` (`original_destination_country`,`destination_country`,`flight_arrival_start`,`flight_arrival_end`,`customs_type`,`product_type`) USING BTREE,
  KEY `idx_original_destination_country` (`original_destination_country`) USING HASH,
  KEY `idx_destination_country` (`destination_country`) USING HASH,
  KEY `idx_product_type` (`product_type`) USING HASH,
  KEY `idx_customs` (`customs_type`) USING HASH,
  KEY `idx_customs_clearance_pattern` (`customs_clearance_pattern`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=888 DEFAULT CHARSET=utf8 COMMENT='关务环节监控标准';

/*Table structure for table `bd_customs_rules` */

DROP TABLE IF EXISTS `bd_customs_rules`;

CREATE TABLE `bd_customs_rules` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `destination_country` varchar(50) DEFAULT NULL COMMENT '目的地国家',
  `statement_value_condition` varchar(1) DEFAULT NULL COMMENT '声明价值条件 0:大于,1:小于,2:等于,3:大于等于,4:小于等于,5:不等于',
  `statement_value` double(50,2) DEFAULT NULL COMMENT '声明价值',
  `is_customs` varchar(1) DEFAULT NULL COMMENT '是否正式报关 0:正式报关 1：非正式报关',
  `insert_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `destination_country` (`destination_country`) USING BTREE,
  KEY `idx_destination_country` (`destination_country`) USING BTREE,
  KEY `idx_statement_value_condition` (`statement_value_condition`) USING BTREE,
  KEY `idx_statement_value` (`statement_value`) USING BTREE,
  KEY `idx_is_customs` (`is_customs`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=530 DEFAULT CHARSET=utf8 COMMENT='报关规则表';

/*Table structure for table `bd_data_dictionary` */

DROP TABLE IF EXISTS `bd_data_dictionary`;

CREATE TABLE `bd_data_dictionary` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `code_value` varchar(50) NOT NULL COMMENT '值',
  `code_name` varchar(100) DEFAULT NULL COMMENT '名称',
  `code_name_en` varchar(100) DEFAULT NULL,
  `type` varchar(50) DEFAULT NULL COMMENT '类型',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8 COMMENT='数据字典表 此表已经没用了';

/*Table structure for table `bd_deliver_handover_shift_maintenance` */

DROP TABLE IF EXISTS `bd_deliver_handover_shift_maintenance`;

CREATE TABLE `bd_deliver_handover_shift_maintenance` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `shift_code` varchar(50) DEFAULT NULL COMMENT '卸车班次',
  `opt_network` varchar(50) DEFAULT NULL COMMENT '卸车网点',
  `deliver_network` varchar(50) DEFAULT NULL COMMENT '派送网点',
  `deliver_shift` varchar(50) DEFAULT NULL COMMENT '派送班次',
  `deliver_network_type` varchar(5) DEFAULT NULL COMMENT '派件网点类型 0是自营；1是代理',
  `shift_start_time` time DEFAULT NULL COMMENT '班次开始时间',
  `latest_car_time` time DEFAULT NULL COMMENT '最晚到车时间',
  `shift_end_time` time DEFAULT NULL COMMENT '班次结束时间',
  `hand_over_time` varchar(50) DEFAULT NULL COMMENT '交接时长',
  `hand_over_end_time` time DEFAULT NULL COMMENT '交接结束时间',
  `agent_network_overTime_hours` varchar(50) DEFAULT NULL COMMENT '代理网点加时时长',
  `work_day` varchar(20) DEFAULT NULL COMMENT '适用工作日',
  `country_abb` varchar(50) DEFAULT NULL COMMENT '国家简写',
  `insert_time` datetime DEFAULT NULL COMMENT '人库时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_comb` (`shift_code`,`deliver_shift`,`work_day`) USING BTREE,
  KEY `inx_opt_network` (`opt_network`) USING HASH,
  KEY `idx_dispach_code` (`shift_code`) USING HASH,
  KEY `idx_work_day` (`work_day`) USING HASH,
  KEY `idx_deliver_network` (`deliver_network`) USING BTREE,
  KEY `idx_deliver_network_type` (`deliver_network_type`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=370 DEFAULT CHARSET=utf8 COMMENT='出仓交接班次维护';

/*Table structure for table `bd_delivery_monitor` */

DROP TABLE IF EXISTS `bd_delivery_monitor`;

CREATE TABLE `bd_delivery_monitor` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `destination_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `destination_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `province` varchar(50) DEFAULT NULL COMMENT '省',
  `city` varchar(50) DEFAULT NULL COMMENT '市',
  `district` varchar(50) DEFAULT NULL COMMENT '县/区',
  `start_post` varchar(50) DEFAULT NULL COMMENT '起始邮编',
  `end_post` varchar(50) DEFAULT NULL COMMENT '结束邮编',
  `receive_range` varchar(50) DEFAULT NULL COMMENT '收送范围',
  `required_days` varchar(50) DEFAULT NULL COMMENT '需加工作日',
  `deliverer` varchar(50) DEFAULT NULL COMMENT '派送方 0:自营  1：代理',
  `delivery_net_code` varchar(50) DEFAULT NULL COMMENT '派送网点代码',
  `product_type` varchar(50) DEFAULT NULL COMMENT '产品类型',
  `remote_surcharge` double(8,2) DEFAULT NULL COMMENT '偏远附加费',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_combination_field` (`destination_country_code`,`start_post`,`end_post`) USING BTREE,
  KEY `idx_destination_country_code` (`destination_country_code`) USING BTREE,
  KEY `idx_destination_city_code` (`destination_city_code`) USING BTREE,
  KEY `idx_province` (`province`) USING BTREE,
  KEY `idx_city` (`city`) USING BTREE,
  KEY `idx_deliverer` (`deliverer`) USING BTREE,
  KEY `idx_district` (`district`) USING BTREE,
  KEY `idx_required_days` (`required_days`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=413730 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='邮编规则';

/*Table structure for table `bd_department` */

DROP TABLE IF EXISTS `bd_department`;

CREATE TABLE `bd_department` (
  `dept_id` decimal(20,0) NOT NULL COMMENT '机构ID',
  `division_code` varchar(30) DEFAULT NULL COMMENT '所属分部编码',
  `area_code` varchar(30) DEFAULT NULL COMMENT '所属区部编码',
  `hq_code` varchar(30) DEFAULT NULL COMMENT '所属经营本部编码',
  `type_code` varchar(30) DEFAULT NULL COMMENT '机构类型ID',
  `dept_name` varchar(100) DEFAULT NULL COMMENT '机构名称',
  `dept_code` varchar(30) DEFAULT NULL COMMENT '机构编码-网络网点编号，例如：755A',
  `dept_desc` varchar(600) DEFAULT NULL COMMENT '描述',
  `created_emp_code` varchar(30) DEFAULT NULL COMMENT '创建人',
  `created_tm` date DEFAULT NULL COMMENT '创建时间',
  `modified_emp_code` varchar(30) DEFAULT NULL COMMENT '修改人',
  `modified_tm` date DEFAULT NULL COMMENT '修改时间',
  `valid_dt` date DEFAULT NULL COMMENT '启用日期',
  `currency_code` varchar(30) DEFAULT NULL COMMENT '币别编码',
  `dist_code` varchar(30) DEFAULT NULL COMMENT '行政区部编码',
  `phone_no` varchar(30) DEFAULT NULL COMMENT '电话',
  `fax_no` varchar(30) DEFAULT NULL COMMENT '传真',
  `contactor_name` varchar(100) DEFAULT NULL COMMENT '联系人名称',
  `delete_flg` decimal(1,0) DEFAULT '0' COMMENT '是否已删除',
  `invalid_tm` date DEFAULT NULL COMMENT '失效日期',
  `server_flg` decimal(1,0) DEFAULT '0' COMMENT '是否配置服务器',
  `parent_dept_code` varchar(30) DEFAULT NULL COMMENT '上级部门编码',
  `type_level` decimal(4,0) DEFAULT NULL COMMENT '类型层次',
  `account_code` varchar(30) DEFAULT NULL COMMENT '所属账套编号',
  `outside_name` varchar(200) DEFAULT NULL COMMENT '官网名称（对外名称）',
  `deldate` date DEFAULT NULL COMMENT '删除日期',
  `city_code` varchar(30) DEFAULT NULL COMMENT '城市代码',
  `dept_addr` varchar(300) DEFAULT NULL COMMENT '机构地址',
  `postal_code` varchar(30) DEFAULT NULL COMMENT '邮编',
  `outside_name_en` varchar(200) DEFAULT NULL COMMENT '对外英文名称',
  `email_addr` varchar(200) DEFAULT NULL COMMENT '对账邮箱地址',
  `belong_county` varchar(1000) DEFAULT NULL COMMENT '所属区/县/镇',
  `belong_village` varchar(1000) DEFAULT NULL COMMENT '所属乡/镇',
  `dept_gmt` decimal(2,0) DEFAULT NULL COMMENT '时区:GMT+-12',
  `shop_code` varchar(6) DEFAULT NULL COMMENT '顺丰店序列号',
  PRIMARY KEY (`dept_id`),
  KEY `parent_dept_code` (`parent_dept_code`),
  KEY `dept_code` (`dept_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='从大网同步回来的网点表';

/*Table structure for table `bd_department_test` */

DROP TABLE IF EXISTS `bd_department_test`;

CREATE TABLE `bd_department_test` (
  `dept_id` decimal(20,0) NOT NULL COMMENT '机构ID',
  `division_code` varchar(30) DEFAULT NULL COMMENT '所属分部编码',
  `area_code` varchar(30) DEFAULT NULL COMMENT '所属区部编码',
  `hq_code` varchar(30) DEFAULT NULL COMMENT '所属经营本部编码',
  `type_code` varchar(30) DEFAULT NULL COMMENT '机构类型ID',
  `dept_name` varchar(100) DEFAULT NULL COMMENT '机构名称',
  `dept_code` varchar(30) DEFAULT NULL COMMENT '机构编码-网络网点编号，例如：755A',
  `dept_desc` varchar(600) DEFAULT NULL COMMENT '描述',
  `created_emp_code` varchar(30) DEFAULT NULL COMMENT '创建人',
  `created_tm` date DEFAULT NULL COMMENT '创建时间',
  `modified_emp_code` varchar(30) DEFAULT NULL COMMENT '修改人',
  `modified_tm` date DEFAULT NULL COMMENT '修改时间',
  `valid_dt` date DEFAULT NULL COMMENT '启用日期',
  `currency_code` varchar(30) DEFAULT NULL COMMENT '币别编码',
  `dist_code` varchar(30) DEFAULT NULL COMMENT '行政区部编码',
  `phone_no` varchar(30) DEFAULT NULL COMMENT '电话',
  `fax_no` varchar(30) DEFAULT NULL COMMENT '传真',
  `contactor_name` varchar(100) DEFAULT NULL COMMENT '联系人名称',
  `delete_flg` decimal(1,0) DEFAULT '0' COMMENT '是否已删除',
  `invalid_tm` date DEFAULT NULL COMMENT '失效日期',
  `server_flg` decimal(1,0) DEFAULT '0' COMMENT '是否配置服务器',
  `parent_dept_code` varchar(30) DEFAULT NULL COMMENT '上级部门编码',
  `type_level` decimal(4,0) DEFAULT NULL COMMENT '类型层次',
  `account_code` varchar(30) DEFAULT NULL COMMENT '所属账套编号',
  `outside_name` varchar(200) DEFAULT NULL COMMENT '官网名称（对外名称）',
  `deldate` date DEFAULT NULL COMMENT '删除日期',
  `city_code` varchar(30) DEFAULT NULL COMMENT '城市代码',
  `dept_addr` varchar(300) DEFAULT NULL COMMENT '机构地址',
  `postal_code` varchar(30) DEFAULT NULL COMMENT '邮编',
  `outside_name_en` varchar(200) DEFAULT NULL COMMENT '对外英文名称',
  `email_addr` varchar(200) DEFAULT NULL COMMENT '对账邮箱地址',
  `belong_county` varchar(1000) DEFAULT NULL COMMENT '所属区/县/镇',
  `belong_village` varchar(1000) DEFAULT NULL COMMENT '所属乡/镇',
  `dept_gmt` decimal(2,0) DEFAULT NULL COMMENT '时区:GMT+-12',
  `shop_code` varchar(6) DEFAULT NULL COMMENT '顺丰店序列号',
  PRIMARY KEY (`dept_id`),
  KEY `parent_dept_code` (`parent_dept_code`),
  KEY `dept_code` (`dept_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='从大网同步回来的网点表';

/*Table structure for table `bd_district` */

DROP TABLE IF EXISTS `bd_district`;

CREATE TABLE `bd_district` (
  `dist_id` bigint(20) NOT NULL COMMENT '区域ID',
  `county_code` varchar(30) DEFAULT NULL COMMENT '所属县级市编码',
  `city_code` varchar(30) DEFAULT NULL COMMENT '所属地级市编码',
  `province_code` varchar(30) DEFAULT NULL COMMENT '所属州或省份编码',
  `country_code` varchar(30) DEFAULT NULL COMMENT '所属国家编码',
  `type_code` varchar(30) DEFAULT NULL COMMENT '区域类型编码',
  `dist_name` varchar(100) DEFAULT NULL COMMENT '区域名称',
  `created_emp_code` varchar(30) DEFAULT NULL COMMENT '创建人员工号',
  `created_tm` date DEFAULT NULL COMMENT '创建时间',
  `modified_emp_code` varchar(30) DEFAULT NULL COMMENT '修改人员工号',
  `modified_tm` date DEFAULT NULL COMMENT '修改时间',
  `dist_code` varchar(30) DEFAULT NULL COMMENT '区域编码',
  `parent_dist_code` varchar(30) DEFAULT NULL COMMENT '上级区域编码',
  `currency_code` varchar(30) DEFAULT NULL,
  `valid_flg` int(1) DEFAULT '1' COMMENT '是否有效',
  `weight_unit` varchar(10) DEFAULT NULL COMMENT 'kg,lbs',
  PRIMARY KEY (`dist_id`),
  KEY `tm_district_key` (`dist_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='从大网同步回来的行政区域表';

/*Table structure for table `bd_doubt_loss_standard` */

DROP TABLE IF EXISTS `bd_doubt_loss_standard`;

CREATE TABLE `bd_doubt_loss_standard` (
  `id` int(15) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `original_country_abb` varchar(50) DEFAULT NULL COMMENT '原寄地国家简写',
  `destination_country_abb` varchar(50) DEFAULT NULL COMMENT '目的地国家简写',
  `product_code` varchar(50) DEFAULT NULL COMMENT '产品类型代码',
  `blue_warn_time_long` double(10,2) DEFAULT NULL COMMENT '蓝色预警时长',
  `yellow_warn_time_long` double(10,2) DEFAULT NULL COMMENT '黄色预警时长',
  `red_warn_time_long` double(10,2) DEFAULT NULL COMMENT '红色预警时长',
  `email_notice` varchar(200) DEFAULT NULL COMMENT '邮件知会人员',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `cb_or_country_abb_de_country_abb_product_code_key` (`original_country_abb`,`destination_country_abb`,`product_code`) USING HASH,
  KEY `original_country_abb_key` (`original_country_abb`) USING HASH,
  KEY `destination_country_abb_key` (`destination_country_abb`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=71 DEFAULT CHARSET=utf8 COMMENT='疑似遗失判定标准表';

/*Table structure for table `bd_export_port_rules` */

DROP TABLE IF EXISTS `bd_export_port_rules`;

CREATE TABLE `bd_export_port_rules` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id主键',
  `product_code` varchar(10) NOT NULL COMMENT '产品类型',
  `source_country_code` varchar(10) NOT NULL COMMENT '原寄地国家代码',
  `source_dept_code` varchar(10) NOT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(20) NOT NULL COMMENT '原寄地业务区代码',
  `source_city_code` varchar(30) NOT NULL COMMENT '原寄地城市代码',
  `dest_country_code` varchar(20) NOT NULL COMMENT '目的地国家代码',
  `dest_dept_code` varchar(20) NOT NULL COMMENT '目的地本部代码',
  `dest_area_code` varchar(20) NOT NULL COMMENT '目的地业务区代码',
  `dest_city_code` varchar(30) NOT NULL COMMENT '目的地城市代码',
  `export_port` varchar(20) DEFAULT NULL COMMENT '出口口岸',
  `import_port` varchar(20) DEFAULT NULL COMMENT '进口口岸',
  `work_day` varchar(10) DEFAULT NULL COMMENT '适用工作日:1表示周一,2表示周二...',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_product_city_export_import_work_day` (`product_code`,`source_country_code`,`source_dept_code`,`source_area_code`,`source_city_code`,`dest_country_code`,`dest_dept_code`,`dest_area_code`,`dest_city_code`,`export_port`,`import_port`,`work_day`) USING BTREE,
  KEY `idx_product_city` (`product_code`,`source_city_code`,`dest_city_code`)
) ENGINE=InnoDB AUTO_INCREMENT=34231 DEFAULT CHARSET=utf8mb4 COMMENT='出口口岸规则';

/*Table structure for table `bd_festival_holiday` */

DROP TABLE IF EXISTS `bd_festival_holiday`;

CREATE TABLE `bd_festival_holiday` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `country_abb` varchar(50) DEFAULT NULL COMMENT '国家简写',
  `city_code` varchar(50) DEFAULT NULL COMMENT '城市代码',
  `feedback` varchar(50) DEFAULT NULL COMMENT '反馈人',
  `date` date DEFAULT NULL COMMENT '日期',
  `holiday_cn` varchar(100) DEFAULT NULL COMMENT '假期中文',
  `holiday_en` varchar(100) DEFAULT NULL COMMENT '假期英文',
  `is_workDay` varchar(10) DEFAULT NULL COMMENT '是否工作日，0：是，1：否',
  `is_entry_clear` varchar(10) DEFAULT NULL COMMENT '能否入口清关，0：能，1：否',
  `is_exit_clear` varchar(10) DEFAULT NULL COMMENT '能否出口清关，0：能，1：否',
  `is_pickup` varchar(10) DEFAULT NULL COMMENT '能否收件服务，0：能，1：否',
  `is_delivery` varchar(10) DEFAULT NULL COMMENT '能否派件服务，0：能，1：否',
  `is_customer_service` varchar(10) DEFAULT NULL COMMENT '能否客户服务，0：能，1：否',
  `is_branch_spot` varchar(10) DEFAULT NULL COMMENT '能否点部，0：能，1：否',
  `holiday_remarks` varchar(200) DEFAULT NULL COMMENT '节假日备注',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `cb_country_city_date_key` (`country_abb`,`city_code`,`date`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=11673 DEFAULT CHARSET=utf8 COMMENT='节假日表';

/*Table structure for table `bd_handover_monitor` */

DROP TABLE IF EXISTS `bd_handover_monitor`;

CREATE TABLE `bd_handover_monitor` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `destination_country_name` varchar(50) NOT NULL COMMENT '目的地国家名称',
  `upload_network_code` varchar(50) NOT NULL COMMENT '分点部卸车网点',
  `deliver_way` varchar(4) DEFAULT NULL COMMENT '派送方式 0是自营；1是代理',
  `upload_begin_time` time DEFAULT NULL COMMENT '卸车开始时间',
  `upload_end_time` time DEFAULT NULL COMMENT '卸车结束时间',
  `flight` varchar(50) DEFAULT NULL COMMENT '班次',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `d_u_b_e_key` (`destination_country_name`,`upload_network_code`,`upload_begin_time`,`upload_end_time`,`deliver_way`) USING BTREE,
  KEY `destination_country_name_key` (`destination_country_name`) USING HASH,
  KEY `upload_network_code_key` (`upload_network_code`) USING HASH,
  KEY `fight_key` (`flight`) USING HASH,
  KEY `deliver_way_key` (`deliver_way`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8 COMMENT='海外交接监控标准表';

/*Table structure for table `bd_network_data` */

DROP TABLE IF EXISTS `bd_network_data`;

CREATE TABLE `bd_network_data` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '网点ID',
  `network_code` varchar(30) DEFAULT NULL COMMENT '网点代码',
  `network_name` varchar(100) DEFAULT NULL COMMENT '网点名称',
  `network_type` varchar(30) DEFAULT NULL COMMENT '网点类型',
  `parent_network_code` varchar(30) DEFAULT NULL COMMENT '上级网点代码',
  `parent_network_name` varchar(100) DEFAULT NULL COMMENT '上级网点名称',
  `area_code` varchar(30) DEFAULT NULL COMMENT '区部代码',
  `area_name` varchar(100) DEFAULT NULL COMMENT '区部名称',
  `hq_dept_code` varchar(30) DEFAULT NULL COMMENT '经营本部代码',
  `hq_dept_name` varchar(30) DEFAULT NULL COMMENT '经营本部名称',
  `country_abb` varchar(30) DEFAULT NULL COMMENT '国家代码',
  `city_code` varchar(30) DEFAULT NULL COMMENT '城市编码',
  `state_name` varchar(30) DEFAULT NULL COMMENT '省',
  `created_tm` date DEFAULT NULL COMMENT '创建时间',
  `modified_tm` date DEFAULT NULL COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  KEY `idx_hq_code` (`hq_dept_code`) USING HASH,
  KEY `idx_hq_dept_name` (`hq_dept_name`) USING HASH,
  KEY `idx_area_code` (`area_code`) USING HASH,
  KEY `idx_are_dept_name` (`area_name`) USING HASH,
  KEY `idx_parent_network_code` (`parent_network_code`) USING HASH,
  KEY `idx_parent_network_name` (`parent_network_name`) USING HASH,
  KEY `idx_city_code` (`city_code`) USING HASH,
  KEY `idx_network_code` (`network_code`) USING HASH,
  KEY `idx_network_name` (`network_name`) USING HASH,
  KEY `idx_network_type` (`network_type`) USING HASH,
  KEY `idx_created_tm` (`created_tm`) USING HASH,
  KEY `idx_modified_tm` (`modified_tm`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=144963 DEFAULT CHARSET=utf8 COMMENT='网点维护表';

/*Table structure for table `bd_network_data_copy` */

DROP TABLE IF EXISTS `bd_network_data_copy`;

CREATE TABLE `bd_network_data_copy` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '网点ID',
  `network_code` varchar(30) DEFAULT NULL COMMENT '网点代码',
  `network_name` varchar(100) DEFAULT NULL COMMENT '网点名称',
  `network_type` varchar(30) DEFAULT NULL COMMENT '网点类型',
  `parent_network_code` varchar(30) DEFAULT NULL COMMENT '上级网点代码',
  `parent_network_name` varchar(100) DEFAULT NULL COMMENT '上级网点名称',
  `area_code` varchar(30) DEFAULT NULL COMMENT '区部代码',
  `area_name` varchar(100) DEFAULT NULL COMMENT '区部名称',
  `hq_dept_code` varchar(30) DEFAULT NULL COMMENT '经营本部代码',
  `hq_dept_name` varchar(30) DEFAULT NULL COMMENT '经营本部名称',
  `country_abb` varchar(30) DEFAULT NULL COMMENT '国家代码',
  `city_code` varchar(30) DEFAULT NULL COMMENT '城市编码',
  `state_name` varchar(30) DEFAULT NULL COMMENT '省',
  `created_tm` date DEFAULT NULL COMMENT '创建时间',
  `modified_tm` date DEFAULT NULL COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  KEY `idx_hq_code` (`hq_dept_code`) USING HASH,
  KEY `idx_hq_dept_name` (`hq_dept_name`) USING HASH,
  KEY `idx_area_code` (`area_code`) USING HASH,
  KEY `idx_are_dept_name` (`area_name`) USING HASH,
  KEY `idx_parent_network_code` (`parent_network_code`) USING HASH,
  KEY `idx_parent_network_name` (`parent_network_name`) USING HASH,
  KEY `idx_city_code` (`city_code`) USING HASH,
  KEY `idx_network_code` (`network_code`) USING HASH,
  KEY `idx_network_name` (`network_name`) USING HASH,
  KEY `idx_network_type` (`network_type`) USING HASH,
  KEY `idx_created_tm` (`created_tm`) USING HASH,
  KEY `idx_modified_tm` (`modified_tm`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=34385 DEFAULT CHARSET=utf8 COMMENT='网点维护表';

/*Table structure for table `bd_network_data_copy1` */

DROP TABLE IF EXISTS `bd_network_data_copy1`;

CREATE TABLE `bd_network_data_copy1` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '网点ID',
  `network_code` varchar(30) DEFAULT NULL COMMENT '网点代码',
  `network_name` varchar(100) DEFAULT NULL COMMENT '网点名称',
  `network_type` varchar(30) DEFAULT NULL COMMENT '网点类型',
  `parent_network_code` varchar(30) DEFAULT NULL COMMENT '上级网点代码',
  `parent_network_name` varchar(100) DEFAULT NULL COMMENT '上级网点名称',
  `area_code` varchar(30) DEFAULT NULL COMMENT '区部代码',
  `area_name` varchar(100) DEFAULT NULL COMMENT '区部名称',
  `hq_dept_code` varchar(30) DEFAULT NULL COMMENT '经营本部代码',
  `hq_dept_name` varchar(30) DEFAULT NULL COMMENT '经营本部名称',
  `country_abb` varchar(30) DEFAULT NULL COMMENT '国家代码',
  `city_code` varchar(30) DEFAULT NULL COMMENT '城市编码',
  `state_name` varchar(30) DEFAULT NULL COMMENT '省',
  `created_tm` date DEFAULT NULL COMMENT '创建时间',
  `modified_tm` date DEFAULT NULL COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  KEY `idx_hq_code` (`hq_dept_code`) USING HASH,
  KEY `idx_hq_dept_name` (`hq_dept_name`) USING HASH,
  KEY `idx_area_code` (`area_code`) USING HASH,
  KEY `idx_are_dept_name` (`area_name`) USING HASH,
  KEY `idx_parent_network_code` (`parent_network_code`) USING HASH,
  KEY `idx_parent_network_name` (`parent_network_name`) USING HASH,
  KEY `idx_city_code` (`city_code`) USING HASH,
  KEY `idx_network_code` (`network_code`) USING HASH,
  KEY `idx_network_name` (`network_name`) USING HASH,
  KEY `idx_network_type` (`network_type`) USING HASH,
  KEY `idx_created_tm` (`created_tm`) USING HASH,
  KEY `idx_modified_tm` (`modified_tm`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=189400 DEFAULT CHARSET=utf8 COMMENT='网点维护表';

/*Table structure for table `bd_operation_log_records` */

DROP TABLE IF EXISTS `bd_operation_log_records`;

CREATE TABLE `bd_operation_log_records` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `record_key_word` varchar(50) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '操作记录关键词,表基础数据唯一标识，用于页面模糊查询操作记录',
  `record_before_operation` varchar(1000) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '操作之前数据记录',
  `record_after_operation` varchar(1000) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '操作之后记录',
  `operation_user` varchar(50) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '操作人',
  `operation_type` enum('Add','Delete','Update') DEFAULT NULL COMMENT '操作类型:增加:1,删除:2，修改:3',
  `operation_module` bigint(18) DEFAULT NULL COMMENT '操作模块,1,2...对应ts_module的基础数据MODULE_ID尾号',
  `operation_time` datetime DEFAULT NULL COMMENT '操作日期时间',
  PRIMARY KEY (`id`),
  KEY `index_operation_user` (`operation_user`) USING HASH,
  KEY `index_operation_type` (`operation_type`) USING HASH,
  KEY `index_operation_module` (`operation_module`) USING HASH,
  KEY `index_operation_time` (`operation_time`) USING BTREE,
  KEY `index_record_key_word` (`record_key_word`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=156 DEFAULT CHARSET=utf8 COMMENT='基础数据记录执行CUD操作日志表';

/*Table structure for table `bd_os_gateway_shuttle_management` */

DROP TABLE IF EXISTS `bd_os_gateway_shuttle_management`;

CREATE TABLE `bd_os_gateway_shuttle_management` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `shuttle_code` varchar(30) DEFAULT NULL COMMENT '班次编码',
  `shuttle_name` varchar(100) DEFAULT NULL COMMENT '班次名称',
  `operate_network_code` varchar(30) DEFAULT NULL COMMENT '操作网点',
  `shuttle_grade` int(4) DEFAULT NULL COMMENT '班次等级 1：一级中转，2：二级中转，3：三级中转...',
  `discrete_type` int(4) unsigned DEFAULT NULL COMMENT '集散类型 : 1:集货，2:散货,3:集散货',
  `collect_goods_label` varchar(30) DEFAULT NULL COMMENT '集货标签',
  `bulk_cargo_lable` varchar(30) DEFAULT NULL COMMENT '散货标签',
  `flight_landing_start_time` varchar(30) DEFAULT NULL COMMENT '航班落地开始时间:2200',
  `flight_landing_end_time` varchar(30) DEFAULT NULL COMMENT '航班落地结束时间:2300',
  `regulation_start_time` varchar(30) DEFAULT NULL COMMENT '规定开始时间:0130',
  `latest_arrival_time` varchar(30) DEFAULT NULL COMMENT '最晚到达时间:0130',
  `regulation_end_time` varchar(30) DEFAULT NULL COMMENT '规定结束时间:0130',
  `customs_mode_end_time` varchar(100) DEFAULT NULL COMMENT '报关模式结束时间:0:7D2359,1:2D1230(报关 0:正式报关 1：非正式报关)',
  `clearance_mode_end_time` varchar(100) DEFAULT NULL COMMENT '清关模式结束时间:CFS:1D1800(''清关模式 0:ECCF 1:CFS)',
  `product_regulation_end_time` varchar(100) DEFAULT NULL COMMENT '产品规定结束时间:EE:1D1800,SE:1D2100',
  `working_day` varchar(10) DEFAULT NULL COMMENT '适用工作日:1234567',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  KEY `index_operate_network_code` (`operate_network_code`) USING HASH,
  KEY `index_shuttle_code` (`shuttle_code`) USING HASH,
  KEY `index_working_day` (`working_day`) USING BTREE,
  KEY `index_flight_landing_start_time` (`flight_landing_start_time`) USING BTREE,
  KEY `index_flight_landing_end_time` (`flight_landing_end_time`) USING BTREE,
  KEY `index_regulation_end_time` (`regulation_end_time`) USING BTREE,
  KEY `index_customs_mode_end_time` (`customs_mode_end_time`) USING BTREE,
  KEY `index_clearance_mode_end_time` (`clearance_mode_end_time`) USING BTREE,
  KEY `index_product_regulation_end_time` (`product_regulation_end_time`) USING BTREE,
  KEY `index_shuttle_grade` (`shuttle_grade`) USING BTREE,
  KEY `index_discrete_type` (`discrete_type`) USING BTREE,
  KEY `regulation_start_time` (`regulation_start_time`),
  KEY `latest_arrival_time` (`latest_arrival_time`)
) ENGINE=InnoDB AUTO_INCREMENT=211 DEFAULT CHARSET=utf8mb4 COMMENT='海外口岸班次维护表';

/*Table structure for table `bd_oversea_flight_maintenance` */

DROP TABLE IF EXISTS `bd_oversea_flight_maintenance`;

CREATE TABLE `bd_oversea_flight_maintenance` (
  `id` int(12) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `destination_country` varchar(50) DEFAULT NULL COMMENT '目的地国家',
  `upload_network_code` varchar(30) DEFAULT NULL COMMENT '卸车网点代码',
  `flight` varchar(50) DEFAULT NULL COMMENT '班次',
  `last_handover_day` varchar(5) DEFAULT NULL COMMENT '最晚交接日1:第一天 2:第二天 3:第三天 以此类推',
  `last_handover_time` time DEFAULT NULL COMMENT '最晚交接时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `d_u_f_key` (`destination_country`,`upload_network_code`,`flight`) USING HASH,
  KEY `destination_country_key` (`destination_country`) USING HASH,
  KEY `flight_key` (`flight`) USING HASH,
  KEY `upload_network_code_key` (`upload_network_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=utf8 COMMENT='分点部班次维护表';

/*Table structure for table `bd_port_maintenance` */

DROP TABLE IF EXISTS `bd_port_maintenance`;

CREATE TABLE `bd_port_maintenance` (
  `id` int(12) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `network_code` varchar(30) CHARACTER SET utf8 NOT NULL COMMENT '网点代码',
  `network_type` varchar(30) DEFAULT NULL COMMENT '网点类型',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `network_code` (`network_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=235 DEFAULT CHARSET=utf8mb4 COMMENT='口岸维护表';

/*Table structure for table `bd_port_threeword` */

DROP TABLE IF EXISTS `bd_port_threeword`;

CREATE TABLE `bd_port_threeword` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `country_name` varchar(50) DEFAULT NULL COMMENT '国家名称',
  `country_abb` varchar(50) DEFAULT NULL COMMENT '国家简写',
  `country_en` varchar(50) DEFAULT NULL COMMENT '国家英文',
  `city_name` varchar(50) DEFAULT NULL COMMENT '城市名称',
  `city_en` varchar(50) DEFAULT NULL COMMENT '城市英文',
  `city_code` varchar(50) DEFAULT NULL COMMENT '城市代码',
  `airport_name` varchar(50) DEFAULT NULL COMMENT '机场名称',
  `airport_en` varchar(100) DEFAULT NULL COMMENT '机场英文',
  `port_threeword` varchar(50) DEFAULT NULL COMMENT '口岸三字代码',
  `port_divisioncode` varchar(30) DEFAULT NULL COMMENT '对应口岸网点代码',
  `get_send_network_code` varchar(30) DEFAULT NULL COMMENT '提发货网点代码',
  `insert_time` datetime DEFAULT NULL COMMENT '创建的时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `port_div_key` (`city_code`,`get_send_network_code`) USING BTREE,
  KEY `country_abb_key` (`country_abb`) USING HASH,
  KEY `key_citycode` (`city_code`) USING BTREE,
  KEY `key_seg_code` (`get_send_network_code`) USING BTREE,
  KEY `key_port_code` (`port_threeword`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=145 DEFAULT CHARSET=utf8 COMMENT='口岸三字码维护';

/*Table structure for table `bd_province` */

DROP TABLE IF EXISTS `bd_province`;

CREATE TABLE `bd_province` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `continent_code` varchar(255) NOT NULL,
  `country_code` varchar(255) NOT NULL,
  `province_code` varchar(255) NOT NULL,
  `province_name` varchar(255) NOT NULL,
  `sf_code` varchar(255) DEFAULT NULL,
  `insert_user` varchar(255) NOT NULL,
  `insert_time` datetime NOT NULL,
  `update_time` datetime NOT NULL,
  `update_user` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_continent_code` (`continent_code`),
  KEY `idx_country_code` (`country_code`),
  KEY `idx_province_code` (`province_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `bd_rules_of_export_port` */

DROP TABLE IF EXISTS `bd_rules_of_export_port`;

CREATE TABLE `bd_rules_of_export_port` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_code` varchar(20) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_region_code` varchar(20) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(20) DEFAULT NULL COMMENT '原寄地业务区代码',
  `dest_country_code` varchar(20) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_region_code` varchar(20) DEFAULT NULL COMMENT '目的地本部代码',
  `dest_area_code` varchar(20) DEFAULT NULL COMMENT '目的地业务区代码',
  `export_port` varchar(20) DEFAULT NULL COMMENT '出口口岸',
  `import_port` varchar(20) DEFAULT NULL COMMENT '进口口岸',
  `work_day` varchar(10) DEFAULT NULL COMMENT '适用工作日:1表示周一,2表示周二...',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `update_man` varchar(20) DEFAULT NULL COMMENT '更新人',
  PRIMARY KEY (`id`),
  KEY `idx_dest_country` (`dest_country_code`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_src_area` (`source_area_code`) USING HASH,
  KEY `idx_comb` (`product_code`,`source_area_code`,`dest_country_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=23439 DEFAULT CHARSET=utf8 COMMENT='出口口岸规则';

/*Table structure for table `bd_second_province` */

DROP TABLE IF EXISTS `bd_second_province`;

CREATE TABLE `bd_second_province` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `province_code` varchar(255) NOT NULL COMMENT '国家一级行政区划代码（洲，省，都，道，市之类）',
  `province_name` varchar(255) NOT NULL COMMENT '国家一级行政区划名称',
  `country_code` varchar(255) NOT NULL COMMENT '国家代码，对应bd_country中',
  `continent_code` varchar(255) NOT NULL COMMENT '大洲代码，对应bd_continent中',
  `time_zone` varchar(255) DEFAULT NULL COMMENT '时区',
  `weight_unit` varchar(255) DEFAULT NULL COMMENT '重量单位',
  `currency_code` varchar(255) DEFAULT NULL COMMENT '币种',
  `phone_code` varchar(255) DEFAULT NULL COMMENT '电话区号',
  `insert_user` varchar(255) DEFAULT NULL COMMENT '记录创建人',
  `update_user` varchar(255) DEFAULT NULL COMMENT '记录更新人',
  `insert_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `sf_code` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=201 DEFAULT CHARSET=utf8;

/*Table structure for table `bd_statepromanager` */

DROP TABLE IF EXISTS `bd_statepromanager`;

CREATE TABLE `bd_statepromanager` (
  `id` bigint(10) NOT NULL AUTO_INCREMENT,
  `country` varchar(50) DEFAULT NULL COMMENT '国家的名字',
  `country_en` varchar(50) DEFAULT NULL COMMENT '国家的英文',
  `country_abb` varchar(50) DEFAULT NULL COMMENT '国家的简写',
  `state` varchar(50) DEFAULT NULL COMMENT '州或省的名字',
  `state_en` varchar(50) DEFAULT NULL COMMENT '州或省英文',
  `time_zone` int(10) DEFAULT NULL COMMENT '时区',
  `insert_time` datetime DEFAULT NULL,
  `operator` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `state_qurkey` (`state_en`) USING BTREE,
  UNIQUE KEY `state_que` (`state`) USING HASH,
  KEY `country_key` (`country`) USING HASH,
  KEY `country_abbkey` (`country_abb`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=329 DEFAULT CHARSET=utf8 COMMENT='州省府维护';

/*Table structure for table `bd_third_city` */

DROP TABLE IF EXISTS `bd_third_city`;

CREATE TABLE `bd_third_city` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `city_code` varchar(255) NOT NULL,
  `city_name` varchar(255) NOT NULL,
  `province_code` varchar(255) NOT NULL,
  `country_code` varchar(255) NOT NULL,
  `continent_code` varchar(255) NOT NULL,
  `sf_code` varchar(255) DEFAULT NULL,
  `time_zone` varchar(255) DEFAULT NULL,
  `weight_unit` varchar(255) DEFAULT NULL,
  `currency_code` varchar(255) DEFAULT NULL,
  `phone_code` varchar(255) DEFAULT NULL,
  `insert_user` varchar(255) DEFAULT NULL,
  `update_user` varchar(255) DEFAULT NULL,
  `insert_time` varchar(255) DEFAULT NULL,
  `update_time` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6235 DEFAULT CHARSET=utf8mb4;

/*Table structure for table `bd_timezonemanagerment` */

DROP TABLE IF EXISTS `bd_timezonemanagerment`;

CREATE TABLE `bd_timezonemanagerment` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `country` varchar(50) DEFAULT NULL COMMENT '国家',
  `country_abb` varchar(50) DEFAULT NULL COMMENT '国家的简写',
  `country_en` varchar(50) DEFAULT NULL COMMENT '国家英文',
  `city` varchar(50) DEFAULT NULL COMMENT '城市',
  `city_nename` varchar(50) DEFAULT NULL COMMENT '城市英文',
  `city_code` varchar(50) DEFAULT NULL COMMENT '城市代码',
  `time_zone` int(11) DEFAULT NULL COMMENT '时区',
  `insert_time` datetime DEFAULT NULL COMMENT '创建的时间',
  PRIMARY KEY (`id`),
  KEY `country_key` (`country`) USING HASH,
  KEY `country_abb_key` (`country_abb`) USING HASH,
  KEY `city_key` (`city`) USING HASH,
  KEY `city_code_key` (`city_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COMMENT='时区管理表（没卵用）';

/*Table structure for table `bd_type_maintenance` */

DROP TABLE IF EXISTS `bd_type_maintenance`;

CREATE TABLE `bd_type_maintenance` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `type` char(4) NOT NULL DEFAULT '' COMMENT '具体维护类型 0：产品类型，1：检查结果类型，2:网点类型',
  `product_code` varchar(50) DEFAULT NULL COMMENT '产品类型代码',
  `product_name` varchar(50) DEFAULT NULL COMMENT '产品类型名称',
  `product_en_name` varchar(50) DEFAULT NULL COMMENT '产品名称英文',
  `check_result_type` varchar(50) DEFAULT NULL COMMENT '检查结果类型',
  `check_result_type_en` varchar(50) DEFAULT NULL COMMENT '检查结果英文',
  `network_type` varchar(50) DEFAULT NULL COMMENT '网点类型',
  `type_note` varchar(100) DEFAULT NULL COMMENT '备注',
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `product_code_unique` (`product_code`) USING BTREE,
  UNIQUE KEY `check_result_type_unique` (`check_result_type`) USING BTREE,
  UNIQUE KEY `network_type_unique` (`network_type`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8 COMMENT='类型维护表';

/*Table structure for table `big_customer_abnormal_aging_standard` */

DROP TABLE IF EXISTS `big_customer_abnormal_aging_standard`;

CREATE TABLE `big_customer_abnormal_aging_standard` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `customer_code` varchar(15) NOT NULL COMMENT '付款客户卡号',
  `customer_name` varchar(200) CHARACTER SET utf8 DEFAULT NULL COMMENT '客户名称',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(10) DEFAULT NULL COMMENT '原寄地国家',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `several_days_standard` int(5) DEFAULT NULL COMMENT 'N天标准(天)',
  `domestic_standard` int(5) DEFAULT NULL COMMENT '国内标准',
  `remark` varchar(500) DEFAULT NULL COMMENT '备注',
  `is_available` int(5) DEFAULT '0' COMMENT '是否有效(0:是，1：否)',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_c_p_s_d` (`customer_code`,`product_code`,`source_country_abb`,`dest_country_abb`) USING BTREE,
  KEY `is_available` (`is_available`),
  KEY `update_time` (`update_time`),
  KEY `several_days_standard` (`several_days_standard`),
  KEY `dest_country_abb` (`dest_country_abb`),
  KEY `source_country_abb` (`source_country_abb`),
  KEY `product_code` (`product_code`),
  KEY `customer_name` (`customer_name`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8mb4 COMMENT='大客户异常时效标准表';

/*Table structure for table `big_customer_abnormal_detail` */

DROP TABLE IF EXISTS `big_customer_abnormal_detail`;

CREATE TABLE `big_customer_abnormal_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `send_date` date DEFAULT NULL COMMENT '寄件日期',
  `main_waybill_no` varchar(64) DEFAULT NULL COMMENT '运单号',
  `customer_name` varchar(64) DEFAULT NULL COMMENT '客户名称',
  `customer_acct_code` varchar(64) DEFAULT NULL COMMENT '付款客户卡号',
  `layer_name` varchar(200) DEFAULT NULL COMMENT '客户分层',
  `consigned_country` varchar(64) DEFAULT NULL COMMENT '寄件国家',
  `consigned_dept` varchar(64) DEFAULT NULL COMMENT '寄件本部',
  `consigned_area` varchar(64) DEFAULT NULL COMMENT '寄件地区',
  `consigned_network_code` varchar(64) DEFAULT NULL COMMENT '寄件网点',
  `dest_country` varchar(64) DEFAULT NULL COMMENT '目的地国家',
  `dest_dept` varchar(64) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(64) DEFAULT NULL COMMENT '目的地地区',
  `dest_network_code` varchar(64) DEFAULT NULL COMMENT '目的地网点',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `consign_content` varchar(64) DEFAULT NULL COMMENT '托寄物内容',
  `cons_qty` int(11) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `source_consign_time` datetime DEFAULT NULL COMMENT '收件时间',
  `flight_departure_time` datetime DEFAULT NULL COMMENT '航班起飞时间',
  `delivery_time` datetime DEFAULT NULL COMMENT '派送时间',
  `is_customs` varchar(10) DEFAULT NULL COMMENT '正式报关。（取巴枪“16”显示正式报关，否则为空）',
  `aging_abnormal_count` int(11) DEFAULT NULL COMMENT '时效异常次数',
  `product_aging_warnig_days` varchar(10) DEFAULT NULL COMMENT '产品时效达成预警',
  `product_aging_standard` datetime DEFAULT NULL COMMENT '产品时效标准',
  `monitor_status` int(1) DEFAULT '0' COMMENT '监控状态 （0：无标准，1：未预警，2：已预警，3：已超时，4：已达成）',
  `mainland_consumed_hours` double(17,3) DEFAULT NULL COMMENT '大陆端耗时',
  `oversea_consumed_hours` double(17,3) DEFAULT NULL COMMENT '海外端耗时',
  `complaints_type` varchar(255) DEFAULT NULL COMMENT '投诉类型',
  `is_complainted` int(1) DEFAULT '0' COMMENT '是否被投诉 （0：否，1：是）',
  `problem_area` varchar(255) DEFAULT NULL COMMENT '责任地区',
  `work_order_start_tm` datetime DEFAULT NULL COMMENT '工单发起时间',
  `work_order_end_tm` datetime DEFAULT NULL COMMENT '工单结束时间',
  `misoperation` varchar(255) DEFAULT NULL COMMENT '操作',
  `broken` varchar(255) DEFAULT NULL COMMENT '损坏',
  `lost` varchar(255) DEFAULT NULL COMMENT '遗失',
  `attitude_and_behavior` varchar(255) DEFAULT NULL COMMENT '态度行为',
  `press` varchar(255) DEFAULT NULL COMMENT '催件',
  `is_problem` int(1) DEFAULT '0' COMMENT '是否为问题件 （0：否，1：是）',
  `newest_zone_code` varchar(32) DEFAULT NULL COMMENT '当前网点',
  `newest_state` varchar(32) DEFAULT NULL COMMENT '当前状态',
  `newest_opCode` varchar(32) DEFAULT NULL COMMENT '当前节点',
  `newest_state_tm` datetime DEFAULT NULL COMMENT '当前状态时间',
  `consign_to_job_days` int(5) DEFAULT '0' COMMENT '寄件日期至跑Job相差的天数',
  `is_completed` int(1) DEFAULT '0' COMMENT '是否完结  （0：否，1：是）',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `wrong_reason_note` varchar(255) DEFAULT NULL COMMENT '错误原因备注',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_idx_main_waybill_no` (`main_waybill_no`) USING BTREE,
  KEY `idx_customer_name` (`customer_name`) USING BTREE,
  KEY `idx_customer_acct_code` (`customer_acct_code`) USING BTREE,
  KEY `idx_send_date` (`send_date`),
  KEY `idx_consigned` (`consigned_country`,`consigned_dept`,`consigned_area`,`consigned_network_code`),
  KEY `idx_dest` (`dest_country`,`dest_dept`,`dest_area`,`dest_network_code`),
  KEY `idx_complete` (`is_completed`),
  KEY `idx_job_date` (`consign_to_job_days`)
) ENGINE=InnoDB AUTO_INCREMENT=5845 DEFAULT CHARSET=utf8mb4 COMMENT='大客户异常明细';

/*Table structure for table `big_customer_abnormal_monitor_whitelist` */

DROP TABLE IF EXISTS `big_customer_abnormal_monitor_whitelist`;

CREATE TABLE `big_customer_abnormal_monitor_whitelist` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `customer_code` varchar(15) NOT NULL COMMENT '付款客户卡号',
  `customer_fullname` varchar(600) DEFAULT NULL COMMENT '客户全称',
  `layer_name` varchar(200) DEFAULT NULL COMMENT '客户分级,客户分层',
  `current_department` varchar(100) DEFAULT NULL COMMENT '所属地区',
  `main_flow_direction` varchar(500) DEFAULT NULL COMMENT '主要流向',
  `remark` varchar(500) DEFAULT NULL COMMENT '备注',
  `is_available` int(1) DEFAULT '0' COMMENT '是否有效（0：是，1：否）',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_index_customer_code` (`customer_code`) USING BTREE,
  KEY `index_is_available` (`is_available`),
  KEY `update_time` (`update_time`)
) ENGINE=InnoDB AUTO_INCREMENT=1092 DEFAULT CHARSET=utf8mb4 COMMENT='大客户异常监控白名单表';

/*Table structure for table `big_customer_abnormal_statistics` */

DROP TABLE IF EXISTS `big_customer_abnormal_statistics`;

CREATE TABLE `big_customer_abnormal_statistics` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `send_date` date DEFAULT NULL COMMENT '寄件日期',
  `customer_name` varchar(64) DEFAULT NULL COMMENT '客户名称',
  `customer_acct_code` varchar(64) DEFAULT NULL COMMENT '付款客户卡号',
  `layer_name` varchar(200) DEFAULT NULL COMMENT '客户分层',
  `consigned_country` varchar(64) DEFAULT NULL COMMENT '寄件国家',
  `dest_country` varchar(64) DEFAULT NULL COMMENT '目的地国家',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `waybill_qty` int(11) DEFAULT NULL COMMENT '票数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `delivery_count` int(11) DEFAULT NULL COMMENT '妥投票数',
  `delivery_rate` double(17,3) DEFAULT NULL COMMENT '妥投率',
  `aging_abnormal_count` int(11) DEFAULT NULL COMMENT '时效异常票数',
  `reached_count` int(11) DEFAULT NULL COMMENT '达成票数',
  `reached_rate` double(17,3) DEFAULT NULL COMMENT '达成率',
  `mainland_consumed_hours_avg` double(17,3) DEFAULT NULL COMMENT '大陆端平均耗时',
  `overseas_consumed_hours_avg` double(17,3) DEFAULT NULL COMMENT '海外端平均耗时',
  `complaints_count` int(11) DEFAULT NULL COMMENT '投诉票数',
  `complaints_rate` double(17,3) DEFAULT NULL COMMENT '客诉率',
  `misoperation_count` int(11) DEFAULT NULL COMMENT '操作失误票数',
  `misoperation_rate` double(17,3) DEFAULT NULL COMMENT '操作失误率',
  `broken_count` int(11) DEFAULT NULL COMMENT '损坏票数',
  `broken_rate` double(17,3) DEFAULT NULL COMMENT '损坏率',
  `lost_count` int(11) DEFAULT NULL COMMENT '遗失票数',
  `lost_rate` double(17,3) DEFAULT NULL COMMENT '遗失率',
  `attitude_and_behavior_count` int(11) DEFAULT NULL COMMENT '态度行为投诉票数',
  `attitude_and_behavior_rate` double(17,3) DEFAULT NULL COMMENT '态度行为投诉率',
  `press_count` int(11) DEFAULT NULL COMMENT '催件票数',
  `press_rate` double(17,3) DEFAULT NULL COMMENT '催件率',
  PRIMARY KEY (`id`),
  KEY `idx_customer_name` (`customer_name`) USING BTREE,
  KEY `idx_customer_acct_code` (`customer_acct_code`) USING BTREE,
  KEY `idx_consigned_country` (`consigned_country`) USING BTREE,
  KEY `idx_dest_country` (`dest_country`) USING BTREE,
  KEY `idx_product_code` (`product_code`),
  KEY `idx_send_data` (`send_date`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=51661411 DEFAULT CHARSET=utf8mb4 COMMENT='大客户异常统计';

/*Table structure for table `cdm_sync_change_info` */

DROP TABLE IF EXISTS `cdm_sync_change_info`;

CREATE TABLE `cdm_sync_change_info` (
  `id` bigint(22) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `seq_no` bigint(22) DEFAULT NULL COMMENT '序列号',
  `customer_code` varchar(15) DEFAULT NULL COMMENT '客户卡号',
  `customer_fullname` varchar(600) DEFAULT NULL COMMENT '客户全称',
  `customer_shortname` varchar(600) DEFAULT NULL COMMENT '客户简称',
  `english_name` varchar(600) DEFAULT NULL COMMENT '英文名称',
  `customer_copr_add` varchar(300) DEFAULT NULL COMMENT '公司地址',
  `customer_organise_reachId` bigint(22) DEFAULT NULL COMMENT '组织覆盖区域ID',
  `enterprise_property_id` bigint(22) DEFAULT NULL COMMENT '企业性质ID',
  `organise_code` varchar(90) DEFAULT NULL COMMENT '组织机构代码',
  `corp_product` varchar(600) DEFAULT NULL COMMENT '主要产品',
  `rang_name` bigint(22) DEFAULT NULL COMMENT '市场类型',
  `corp_business_type` int(1) DEFAULT NULL COMMENT '主要销售渠道',
  `employee_amount` int(10) DEFAULT NULL COMMENT '企业规模*（人数）',
  `corp_number` varchar(50) DEFAULT NULL COMMENT '企业注册号',
  `decission_maker_name` varchar(90) DEFAULT NULL COMMENT '快递决策人',
  `decission_maker_tel` varchar(90) DEFAULT NULL COMMENT '快递决策人电话',
  `decission_maker_title` varchar(300) DEFAULT NULL COMMENT '快递决策人职务',
  `decission_maker_mobile_phone` varchar(90) DEFAULT NULL COMMENT '快递决策人手机',
  `decission_maker_email` varchar(300) DEFAULT NULL COMMENT '快递决策人邮箱',
  `most_consignor_name` varchar(90) DEFAULT NULL COMMENT '主要寄件人',
  `most_consignor_tel` varchar(90) DEFAULT NULL COMMENT '主要寄件人电话',
  `most_consignor_mobile_phone` varchar(90) DEFAULT NULL COMMENT '主要寄件人手机',
  `most_consignor_email` varchar(300) DEFAULT NULL COMMENT '主要寄件人邮箱',
  `reconnciliation_name` varchar(90) DEFAULT NULL COMMENT '对帐人员姓名',
  `reconnciliation_tel` varchar(90) DEFAULT NULL COMMENT '对帐人联系电话',
  `reconnciliation_mobile_phone` varchar(90) DEFAULT NULL COMMENT '对帐人手机',
  `reconnciliation_email` varchar(300) DEFAULT NULL COMMENT '对帐人邮箱',
  `finance_atten_name` varchar(90) DEFAULT NULL COMMENT '财务联系人',
  `finance_atten_tel` varchar(90) DEFAULT NULL COMMENT '财务联系电话',
  `finance_atten_add` varchar(1000) DEFAULT NULL COMMENT '财务联系地址',
  `finance_atten_email` varchar(300) DEFAULT NULL COMMENT '财务电子邮箱',
  `finance_atten_mobile_phone` varchar(90) DEFAULT NULL COMMENT '财务联系手机',
  `is_elect_supplier` int(1) DEFAULT NULL COMMENT '是否通过电子商务平台销售商品',
  `major_sell_way` int(2) DEFAULT NULL COMMENT '主要销售对象',
  `internet_shop_name` varchar(300) DEFAULT NULL COMMENT '网上店铺名称',
  `layer_id` bigint(22) DEFAULT NULL COMMENT '客户分级,客户分层',
  `credit_level` varchar(10) DEFAULT NULL COMMENT '客户评级,信用等级',
  `credit_limit` double(16,4) DEFAULT NULL COMMENT '信用额度',
  `biz_model` int(2) DEFAULT NULL COMMENT '商业模式',
  `parent_customer_code` varchar(15) DEFAULT NULL COMMENT '集团总公司编号',
  `scatter_pay_discount` int(1) DEFAULT NULL COMMENT '是否散单到付折扣 1:是，0:否，空：否',
  `tax_code` varchar(90) DEFAULT NULL COMMENT '税务登记号',
  `is_pushed` int(1) DEFAULT NULL COMMENT '是否已经推送（1、已推送，0、未推送）',
  `pushed_time` datetime DEFAULT NULL COMMENT '推送时间',
  `elect_customer_type` int(1) DEFAULT NULL COMMENT '电商客户类型,0-配送客户,1-仓配一体客户',
  `pay_term_id` bigint(22) DEFAULT NULL COMMENT '信用账期',
  `tid_value_upper_limit` varchar(22) DEFAULT NULL COMMENT '特安声明价值上限',
  `customer_type` int(1) DEFAULT NULL COMMENT '月结类型',
  `open_express_sign` int(1) DEFAULT NULL COMMENT '是否开通快件签收服务1-是0-否',
  `time_mon_level` varchar(2) DEFAULT NULL COMMENT '时效监控等级:A到J',
  `layer_name` varchar(200) DEFAULT NULL COMMENT '客户分层名字',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `state` varchar(50) DEFAULT NULL COMMENT '省/州（美国必输）',
  `is_avoid_record_bill` int(1) DEFAULT NULL COMMENT '免录回单: 1是, 0否',
  `is_out_warehouse_sms` int(1) DEFAULT NULL COMMENT '是否发送出仓短信',
  `inner_publicaccount_catrgory` bigint(22) DEFAULT NULL COMMENT '内部公开账号类别',
  `sms_remind` bigint(22) DEFAULT NULL COMMENT '短信提醒: 1寄方,2收方,3寄收方',
  `mgr_emp_code` varchar(100) DEFAULT NULL COMMENT '客户经理工号',
  `current_department` varchar(90) DEFAULT NULL COMMENT '网点代码',
  `exchanger_name` varchar(90) DEFAULT NULL COMMENT '指定兑换人姓名',
  `exchanger_mobile_phone` varchar(200) DEFAULT NULL COMMENT '指定兑换人手机',
  `exchanger_email` varchar(300) DEFAULT NULL COMMENT '指定兑换人邮箱',
  `exchanger_address` varchar(2000) DEFAULT NULL COMMENT '指定兑换人地址',
  `is_enjoy_rights` bigint(22) DEFAULT NULL COMMENT '是否享受积分权益 1,是 0 否',
  `one_leve_industry` varchar(30) DEFAULT NULL COMMENT '一级行业',
  `two_leve_industry` varchar(30) DEFAULT NULL COMMENT '二级行业',
  `three_leve_industry` varchar(30) DEFAULT NULL COMMENT '三级行业',
  `one_leve_industry_name` varchar(100) DEFAULT NULL COMMENT '一级行业名称',
  `two_leve_industry_name` varchar(100) DEFAULT NULL COMMENT '二级行业名称',
  `three_leve_industry_name` varchar(100) DEFAULT NULL COMMENT '三级行业名称',
  `sales_manage_change` varchar(30) DEFAULT NULL COMMENT '客户管理归属',
  `hht_tips` varchar(900) DEFAULT NULL COMMENT 'HHT提醒',
  `invoice_flag` varchar(10) DEFAULT NULL COMMENT '是否需要发票',
  `is_pro_cust_service` int(10) DEFAULT NULL COMMENT '是否提供项目客服服务',
  `customer_files_id` varchar(30) DEFAULT NULL COMMENT '销帮客户档案ID',
  `business_oppor_id` varchar(30) DEFAULT NULL COMMENT '销帮商机ID',
  `inner_company_code` varchar(30) DEFAULT NULL COMMENT '内部公司代码',
  `enterprise_property_name` varchar(100) DEFAULT NULL COMMENT '企业性质名称',
  `credit_code` varchar(500) DEFAULT NULL COMMENT '统一社会信用代码',
  `proj_customer` varchar(300) DEFAULT NULL COMMENT '项目客户',
  `is_elect_sale` int(1) DEFAULT NULL COMMENT '是否电销',
  `corp_indi_cred_type_str` varchar(30) DEFAULT NULL COMMENT '个人客户证件类型',
  `corp_indi_cred_num` varchar(100) DEFAULT NULL COMMENT '个人客户证件号码',
  `risk_tip` int(1) DEFAULT NULL COMMENT '风险提示',
  `cust_source` varchar(15) DEFAULT NULL COMMENT '客户来源',
  `sales_manage_change_name` varchar(100) DEFAULT NULL COMMENT '客户管理归属名称',
  `send_fax` varchar(60) DEFAULT NULL COMMENT '账单发送传真',
  `cust_type` int(1) DEFAULT NULL COMMENT '客户类型：1-个人；2-企业',
  `config_area` varchar(30) DEFAULT NULL COMMENT '专项客服配置地区',
  `is_sign_kc` int(1) DEFAULT NULL COMMENT '是否签署KC ：1-是；0-否',
  `sign_kc_start_time` datetime DEFAULT NULL COMMENT '签署KC开始时间',
  `corp_fund` varchar(30) DEFAULT NULL COMMENT '注册资金',
  `email_overseas` varchar(500) DEFAULT NULL COMMENT '邮箱（海外专用）',
  `cust_integrity` varchar(20) DEFAULT NULL COMMENT '理赔性质:\r\n1:高额索赔\r\n2:重复恶意索赔\r\n3:媒体威胁索赔\r\n4:不充分索赔\r\n5:反复索赔\r\n6:诈骗客户',
  `township_service` int(1) DEFAULT NULL COMMENT '特殊乡镇地址服务\r\n1:请选择\r\n0：不提供',
  `residence_time` varchar(2) DEFAULT NULL COMMENT '滞留时长',
  `return_address_selection` int(1) DEFAULT NULL COMMENT '退回件地址选择(1:原寄地2:其他地址)',
  `return_recipients` varchar(100) DEFAULT NULL COMMENT '退回件收件人',
  `detail_address` varchar(300) DEFAULT NULL COMMENT '退回件收件地址',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_customer_code` (`customer_code`) USING BTREE,
  KEY `idx_corp_number` (`corp_number`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3203057 DEFAULT CHARSET=utf8 COMMENT='同步客户基础信息表';

/*Table structure for table `consign_warehouse_dispach` */

DROP TABLE IF EXISTS `consign_warehouse_dispach`;

CREATE TABLE `consign_warehouse_dispach` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `dispach_code` varchar(50) DEFAULT NULL COMMENT '班次编码',
  `opt_network` varchar(50) DEFAULT NULL COMMENT '操作网点',
  `consign_start_time` time DEFAULT NULL COMMENT '收件开始时间',
  `consign_end_time` time DEFAULT NULL COMMENT '收件结束时间',
  `dispach_start_time` time DEFAULT NULL COMMENT '班次开始时间',
  `stored_end_time` time DEFAULT NULL COMMENT '最晚入仓时间',
  `dispach_end_time` time DEFAULT NULL COMMENT '班次结束时间',
  `work_day` varchar(20) DEFAULT NULL COMMENT '适用工作日',
  `network_country_abb` varchar(50) DEFAULT NULL COMMENT '网点对应国家',
  PRIMARY KEY (`id`),
  KEY `idx_comb` (`dispach_code`,`opt_network`,`work_day`) USING HASH,
  KEY `inx_opt_network` (`opt_network`) USING HASH,
  KEY `idx_dispach_code` (`dispach_code`) USING HASH,
  KEY `idx_work_day` (`work_day`) USING BTREE,
  KEY `index_network_country_abb` (`network_country_abb`)
) ENGINE=InnoDB AUTO_INCREMENT=38659 DEFAULT CHARSET=utf8 COMMENT='收件仓库班次维护';

/*Table structure for table `defult_test` */

DROP TABLE IF EXISTS `defult_test`;

CREATE TABLE `defult_test` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `testq` varchar(255) DEFAULT '0',
  `testa` int(255) DEFAULT '0',
  `teste` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

/*Table structure for table `defult_test2` */

DROP TABLE IF EXISTS `defult_test2`;

CREATE TABLE `defult_test2` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `testq` varchar(255) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

/*Table structure for table `delivery_dispach` */

DROP TABLE IF EXISTS `delivery_dispach`;

CREATE TABLE `delivery_dispach` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `dispach_code` varchar(20) DEFAULT NULL COMMENT '班次编码',
  `opt_network` varchar(20) DEFAULT NULL COMMENT '操作网点',
  `delivery_consume_time` varchar(20) DEFAULT NULL COMMENT '派件时长',
  `delivery_end_time` time DEFAULT NULL COMMENT '派件结束时间',
  `product_extra_time` varchar(50) DEFAULT NULL COMMENT '产品加时',
  `bar_extra_time` varchar(50) DEFAULT NULL COMMENT '巴枪码加时',
  `special_extra_time` varchar(50) DEFAULT NULL COMMENT '特殊加时',
  `work_day` varchar(20) DEFAULT NULL COMMENT '适用工作日',
  `network_country_abb` varchar(50) DEFAULT NULL COMMENT '网点对应的国家',
  `opt_network_type` varchar(20) DEFAULT NULL COMMENT '网点类型',
  PRIMARY KEY (`id`),
  KEY `inx_opt_network` (`opt_network`) USING HASH,
  KEY `idx_dispach_code` (`dispach_code`) USING HASH,
  KEY `idx_work_day` (`work_day`) USING HASH,
  KEY `idx_comb` (`opt_network`,`dispach_code`,`work_day`,`network_country_abb`) USING BTREE,
  KEY `idx_network_country_abb` (`network_country_abb`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=1265 DEFAULT CHARSET=utf8 COMMENT='派件班次';

/*Table structure for table `delivery_situation_detail` */

DROP TABLE IF EXISTS `delivery_situation_detail`;

CREATE TABLE `delivery_situation_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `arrival_network_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '到达网点的日期',
  `network_handle_date` date DEFAULT NULL COMMENT '网点处理（出仓/交接）日期',
  `main_waybill_no` varchar(64) DEFAULT NULL COMMENT '运单号',
  `dest_country` varchar(32) DEFAULT NULL COMMENT '目的地国家',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(64) DEFAULT NULL COMMENT '目的地地区',
  `dest_city` varchar(64) DEFAULT NULL COMMENT '目的地城市',
  `unload_network` varchar(32) DEFAULT NULL COMMENT '卸车网点编码',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `packages_count` int(10) DEFAULT NULL COMMENT '件数',
  `delivery_mode` int(1) DEFAULT NULL COMMENT '派送模式 0：自营 1：代理',
  `actual_delivery_network` varchar(32) DEFAULT NULL COMMENT '实际派送网点编码',
  `agent_waybill_no` varchar(64) DEFAULT NULL COMMENT '代理单号',
  `agent_product` varchar(32) DEFAULT NULL COMMENT '代理产品',
  `unload_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `handover_time` datetime DEFAULT NULL COMMENT '交接时间。首次巴枪“208>44”的时间',
  `warehouse_out_time` datetime DEFAULT NULL COMMENT '出仓时间。首次巴枪204的时间',
  `delivery_time` datetime DEFAULT NULL COMMENT '派送时间',
  `is_multiple` int(1) DEFAULT NULL COMMENT '是否属于当天的多发件。0 : 是 ，1：否',
  `network_handle_to_delivery_days` int(5) DEFAULT '0' COMMENT '网点处理（出仓/交接）至派送的天数',
  `network_handle_to_job_days` int(5) DEFAULT '0' COMMENT '网点处理（出仓/交接）至跑Job的天数',
  `retention_reason_code` varchar(64) DEFAULT NULL COMMENT '滞留原因代码',
  `retention_reason` varchar(64) DEFAULT NULL COMMENT '滞留原因',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_mode` int(1) DEFAULT NULL COMMENT '滞留模式。0：自营滞留，1：代理滞留',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`,`arrival_network_date`),
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE,
  KEY `idx_dest_country` (`dest_country`) USING BTREE,
  KEY `idx_arrival_networkdate` (`arrival_network_date`) USING BTREE,
  KEY `idx_upload_network` (`unload_network`) USING BTREE,
  KEY `idx_actual_delivery_network` (`actual_delivery_network`) USING BTREE,
  KEY `idx_delivery_time` (`delivery_time`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=21467 DEFAULT CHARSET=utf8 COMMENT='派件概况明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(arrival_network_date)
(PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `delivery_situation_monitor` */

DROP TABLE IF EXISTS `delivery_situation_monitor`;

CREATE TABLE `delivery_situation_monitor` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `arrival_network_date` date DEFAULT NULL COMMENT '到达网点的日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `dest_country_abb` varchar(30) DEFAULT NULL COMMENT '目的地国家简写',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(30) DEFAULT NULL COMMENT '目的地地区',
  `dest_city` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `dest_network` varchar(30) DEFAULT NULL COMMENT '目的地网点',
  `actual_arrival_count` int(10) DEFAULT NULL COMMENT '实际到件票数',
  `handover_total_count` int(10) DEFAULT NULL COMMENT '出仓/交接总票数',
  `already_delivery_count` int(10) DEFAULT NULL COMMENT '已派送总票数',
  `no_delivery_count` int(10) DEFAULT NULL COMMENT '未派送总票数',
  `multiple_count` int(10) DEFAULT NULL COMMENT '多发票数',
  `no_handover_already_load` int(10) DEFAULT NULL COMMENT '未出仓/未交接(已卸车)',
  `no_handover_already_delivery` int(10) DEFAULT NULL COMMENT '未出仓/未交接(已派送)',
  `no_handover_no_delivery` int(10) DEFAULT NULL COMMENT '未出仓/未交接(未派送)',
  `warehouse_out_count_self` int(10) DEFAULT NULL COMMENT '出仓票数(自营)',
  `already_delivery_count_self` int(10) DEFAULT NULL COMMENT '已派送票数(自营)',
  `retention_count_self` int(10) DEFAULT NULL COMMENT '滞留票数(自营)',
  `d0_delivery_count_self` int(10) DEFAULT NULL COMMENT 'D0天派送(自营)',
  `d1_delivery_count_self` int(10) DEFAULT NULL COMMENT 'D+1天派送(自营)',
  `d2_delivery_count_self` int(10) DEFAULT NULL COMMENT 'D+2天派送(自营)',
  `d3_delivery_count_self` int(10) DEFAULT NULL COMMENT 'D+3天派送(自营)',
  `already_handover_count_agent` int(10) DEFAULT NULL COMMENT '交接票数(代理)',
  `already_delivery_count_agent` int(10) DEFAULT NULL COMMENT '已派送票数(代理)',
  `retention_count_agent` int(10) DEFAULT NULL COMMENT '滞留票数(代理)',
  `d0_delivery_count_agent` int(10) DEFAULT NULL COMMENT 'D0天派送(代理)',
  `d1_delivery_count_agent` int(10) DEFAULT NULL COMMENT 'D+1天派送(代理)',
  `d2_delivery_count_agent` int(10) DEFAULT NULL COMMENT 'D+2天派送(代理)',
  `d3_delivery_count_agent` int(10) DEFAULT NULL COMMENT 'D+3天派送(代理)',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_date` (`arrival_network_date`) USING BTREE,
  KEY `idx_source_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_source_dept` (`dest_dept`) USING HASH,
  KEY `idx_source_area` (`dest_area`) USING HASH,
  KEY `idx_source_city` (`dest_city`) USING HASH,
  KEY `idx_source_network` (`dest_network`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=2504568 DEFAULT CHARSET=utf8 COMMENT='派件概况监控表';

/*Table structure for table `delivery_warehouse_dispach` */

DROP TABLE IF EXISTS `delivery_warehouse_dispach`;

CREATE TABLE `delivery_warehouse_dispach` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `dispach_code` varchar(50) DEFAULT NULL COMMENT '班次编码',
  `opt_network` varchar(50) DEFAULT NULL COMMENT '操作网点',
  `dispach_start_time` time DEFAULT NULL COMMENT '班次开始时间',
  `arrival_end_time` time DEFAULT NULL COMMENT '最晚到车时间',
  `dispach_end_time` time DEFAULT NULL COMMENT '班次结束时间',
  `work_day` varchar(20) DEFAULT NULL COMMENT '适用工作日',
  `delivery_model` varchar(20) DEFAULT NULL COMMENT '派送模式 0：自营 1：代理',
  `network_country_abb` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_comb` (`opt_network`,`dispach_code`,`work_day`) USING HASH,
  KEY `inx_opt_network` (`opt_network`) USING HASH,
  KEY `idx_dispach_code` (`dispach_code`) USING HASH,
  KEY `idx_work_day` (`work_day`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=1534 DEFAULT CHARSET=utf8 COMMENT='派件仓库班次';

/*Table structure for table `delivery_warning_detail` */

DROP TABLE IF EXISTS `delivery_warning_detail`;

CREATE TABLE `delivery_warning_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `arrival_network_date` date DEFAULT NULL COMMENT '到达网点的日期',
  `network_handle_date` datetime DEFAULT NULL COMMENT '网点处理（出仓/交接）日期',
  `main_waybill_no` varchar(64) DEFAULT NULL COMMENT '运单号',
  `source_country` varchar(32) DEFAULT NULL COMMENT '原寄地国家',
  `source_dept` varchar(32) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(32) DEFAULT NULL COMMENT '原寄地地区',
  `source_city` varchar(32) DEFAULT NULL COMMENT '原寄地城市',
  `source_network` varchar(32) DEFAULT NULL COMMENT '原寄地网点',
  `dest_country` varchar(32) DEFAULT NULL COMMENT '目的地国家',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(64) DEFAULT NULL COMMENT '目的地地区',
  `dest_city` varchar(64) DEFAULT NULL COMMENT '目的地城市',
  `unload_network` varchar(32) DEFAULT NULL COMMENT '卸车网点编码',
  `dispach_code` varchar(50) DEFAULT NULL COMMENT '卸车班次编码',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `packages_count` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `post_code` varchar(64) DEFAULT NULL COMMENT '邮编',
  `delivery_mode` int(1) DEFAULT NULL COMMENT '派送模式 0：自营 1：代理',
  `actual_delivery_network` varchar(32) DEFAULT NULL COMMENT '实际派送网点编码',
  `actual_delivery_batch_code` varchar(64) DEFAULT NULL COMMENT '实际派件班次',
  `barOprCode` varchar(150) DEFAULT NULL COMMENT '出仓派件员工号。取204派件员工号',
  `delivery_staff_no` varchar(30) DEFAULT NULL COMMENT '派件员工号(取巴枪80或回单上的派件员工号)',
  `agent_waybill_no` varchar(64) DEFAULT NULL COMMENT '代理单号',
  `agent_product` varchar(32) DEFAULT NULL COMMENT '代理产品',
  `consigned_tm` datetime DEFAULT NULL COMMENT '收件时间',
  `unload_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `loading_time` datetime DEFAULT NULL COMMENT '装车时间',
  `handover_aging_standard` datetime DEFAULT NULL COMMENT '交接时效标准(动态）',
  `handover_time` datetime DEFAULT NULL COMMENT '交接时间。首次巴枪“208>44”的时间',
  `handover_timeout_warning` varchar(32) DEFAULT NULL COMMENT '交接超时预警(h/mm)',
  `handover_overtime` varchar(32) DEFAULT NULL COMMENT '交接超时时长(h/mm)',
  `handover_status` int(1) DEFAULT NULL COMMENT '交接环节超时状态。0：正常准点，1:无节点未超时，2：有节点超时，3：无节点超时',
  `warehouse_out_aging_standard` datetime DEFAULT NULL COMMENT '出仓时效标准(动态)',
  `warehouse_out_time` datetime DEFAULT NULL COMMENT '出仓时间。首次巴枪204的时间',
  `warehouse_out_timeout_warning` varchar(32) DEFAULT NULL COMMENT '出仓超时预警(h/mm)',
  `warehouse_out_overtime` varchar(32) DEFAULT NULL COMMENT '出仓超时时长(h/mm)',
  `warehouse_out_status` int(1) DEFAULT NULL COMMENT '出仓环节超时状态。0：正常准点，1:无节点未超时，2：有节点超时，3：无节点超时',
  `delivery_aging_standard` datetime DEFAULT NULL COMMENT '派送时效标准',
  `delivery_time` datetime DEFAULT NULL COMMENT '派送时间',
  `delivery_timeout_warning` varchar(32) DEFAULT NULL COMMENT '派送超时预警(h/mm)',
  `delivery_overtime` varchar(32) DEFAULT NULL COMMENT '派送超时时长(h/mm)',
  `delivery_status` int(1) DEFAULT NULL COMMENT '派送环节超时状态。0：正常准点，1:无节点未超时，2：有节点超时，3：无节点超时',
  `arrival_network_to_delivery_days` int(5) DEFAULT NULL COMMENT '到达网点至派送的天数',
  `network_handle_to_delivery_days` int(5) DEFAULT '0' COMMENT '网点处理（出仓/交接）至派送的天数',
  `arrival_network_to_job_days` int(5) DEFAULT NULL COMMENT '到达网点至跑Job的天数',
  `network_handle_to_job_days` int(5) DEFAULT '0' COMMENT '网点处理（出仓/交接）至跑Job的天数',
  `retention_reason_code` varchar(64) DEFAULT NULL COMMENT '滞留原因代码',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_mode` int(1) DEFAULT NULL COMMENT '滞留模式。0：自营滞留，1：代理滞留',
  `problem_upload_tm` datetime DEFAULT NULL COMMENT '问题件上传时间',
  `delivery_upload_tm` datetime DEFAULT NULL COMMENT '派送上传时间',
  `is_upload_delayed` int(1) DEFAULT '0' COMMENT '上传是否延误。0：否，1：是',
  `is_problem_upload_delayed` int(1) DEFAULT NULL COMMENT '问题件上传延迟,0：否，1：是',
  `is_delivery_upload_delayed` int(1) DEFAULT NULL COMMENT '派件上传延迟,0：否，1：是',
  `server_ip` varchar(32) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(255) DEFAULT NULL COMMENT '错误原因备注',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_unique_key` (`main_waybill_no`) USING BTREE,
  KEY `idx_upload_network` (`unload_network`) USING HASH,
  KEY `idx_dest_country` (`dest_country`) USING HASH,
  KEY `idx_date` (`arrival_network_date`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=50736346 DEFAULT CHARSET=utf8 COMMENT='派件端预警明细表';

/*Table structure for table `delivery_warning_detail_handover` */

DROP TABLE IF EXISTS `delivery_warning_detail_handover`;

CREATE TABLE `delivery_warning_detail_handover` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `handover_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '出仓/交接日期',
  `main_waybill_no` varchar(64) DEFAULT NULL COMMENT '运单号',
  `source_country` varchar(32) DEFAULT NULL COMMENT '原寄地国家',
  `source_dept` varchar(32) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(32) DEFAULT NULL COMMENT '原寄地地区',
  `source_city` varchar(32) DEFAULT NULL COMMENT '原寄地城市',
  `source_network` varchar(32) DEFAULT NULL COMMENT '原寄地网点',
  `dest_country` varchar(32) DEFAULT NULL COMMENT '目的地国家',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(64) DEFAULT NULL COMMENT '目的地地区',
  `dest_city` varchar(64) DEFAULT NULL COMMENT '目的地城市',
  `unload_network` varchar(32) DEFAULT NULL COMMENT '卸车网点编码',
  `dispach_code` varchar(50) DEFAULT NULL COMMENT '卸车班次编码',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `actual_delivery_network` varchar(32) DEFAULT NULL COMMENT '实际派送网点编码',
  `actual_delivery_batch_code` varchar(64) DEFAULT NULL COMMENT '实际派件班次',
  `barOprCode` varchar(150) DEFAULT NULL COMMENT '出仓派件员工号。取204派件员工号',
  `agent_waybill_no` varchar(64) DEFAULT NULL COMMENT '代理单号',
  `agent_product` varchar(32) DEFAULT NULL COMMENT '代理产品',
  `handover_aging_standard` datetime DEFAULT NULL COMMENT '出仓/交接时效标准(动态）',
  `handover_time` datetime DEFAULT NULL COMMENT '出仓/交接时间。首次巴枪“204/208/44”的时间',
  `handover_timeout_warning` varchar(32) DEFAULT NULL COMMENT '出仓/交接超时预警(h/mm)',
  `handover_overtime` varchar(32) DEFAULT NULL COMMENT '出仓/交接超时时长(h/mm)',
  `handover_status` int(1) DEFAULT NULL COMMENT '出仓/交接环节超时状态。0：正常准点，1:无节点未超时，2：有节点超时，3：无节点超时',
  `delivery_mode` int(1) DEFAULT NULL COMMENT '派送模式 0：自营 1：代理',
  `delivery_aging_standard` datetime DEFAULT NULL COMMENT '派送时效标准',
  `retention_reason_code` varchar(64) DEFAULT NULL COMMENT '滞留原因代码',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_mode` int(1) DEFAULT NULL COMMENT '滞留模式。0：自营滞留，1：代理滞留',
  `problem_upload_tm` datetime DEFAULT NULL COMMENT '问题件上传时间',
  `is_upload_delayed` int(1) DEFAULT '0' COMMENT '上传是否延误。0：否，1：是',
  `is_problem_upload_delayed` int(1) DEFAULT NULL COMMENT '问题件上传延迟,0：否，1：是',
  `server_ip` varchar(32) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(255) DEFAULT NULL COMMENT '错误原因备注',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`,`handover_date`),
  KEY `idx_upload_network` (`unload_network`) USING HASH,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_source_country` (`source_country`) USING HASH,
  KEY `idx_source_city` (`source_city`) USING HASH,
  KEY `idx_dest_country` (`dest_country`) USING HASH,
  KEY `idx_dest_city` (`dest_city`) USING HASH,
  KEY `idx_dispach_code` (`dispach_code`) USING HASH,
  KEY `idx_unload_network` (`unload_network`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_handover_time` (`handover_time`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=265568 DEFAULT CHARSET=utf8 COMMENT='派件端预警明细出仓交接环节表'
/*!50500 PARTITION BY RANGE  COLUMNS(handover_date)
(PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `delivery_warning_detail_send` */

DROP TABLE IF EXISTS `delivery_warning_detail_send`;

CREATE TABLE `delivery_warning_detail_send` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `delivery_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '派送日期',
  `main_waybill_no` varchar(64) DEFAULT NULL COMMENT '运单号',
  `source_country` varchar(32) DEFAULT NULL COMMENT '原寄地国家',
  `source_dept` varchar(32) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(32) DEFAULT NULL COMMENT '原寄地地区',
  `source_city` varchar(32) DEFAULT NULL COMMENT '原寄地城市',
  `source_network` varchar(32) DEFAULT NULL COMMENT '原寄地网点',
  `dest_country` varchar(32) DEFAULT NULL COMMENT '目的地国家',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(64) DEFAULT NULL COMMENT '目的地地区',
  `dest_city` varchar(64) DEFAULT NULL COMMENT '目的地城市',
  `unload_network` varchar(32) DEFAULT NULL COMMENT '卸车网点编码',
  `dispach_code` varchar(50) DEFAULT NULL COMMENT '卸车班次编码',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `delivery_aging_standard` datetime DEFAULT NULL COMMENT '派送时效标准',
  `delivery_time` datetime DEFAULT NULL COMMENT '派送时间',
  `delivery_staff_no` varchar(30) DEFAULT NULL COMMENT '派件员工号(取巴枪80或回单上的派件员工号)',
  `delivery_timeout_warning` varchar(32) DEFAULT NULL COMMENT '派送超时预警(h/mm)',
  `delivery_overtime` varchar(32) DEFAULT NULL COMMENT '派送超时时长(h/mm)',
  `delivery_status` int(1) DEFAULT NULL COMMENT '派送环节超时状态。0：正常准点，1:无节点未超时，2：有节点超时，3：无节点超时',
  `delivery_upload_tm` datetime DEFAULT NULL COMMENT '派送上传时间',
  `is_delivery_upload_delayed` int(1) DEFAULT NULL COMMENT '派件上传延迟,0：否，1：是',
  `server_ip` varchar(32) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(255) DEFAULT NULL COMMENT '错误原因备注',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`,`delivery_date`),
  KEY `idx_upload_network` (`unload_network`) USING HASH,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_source_country` (`source_country`) USING HASH,
  KEY `idx_source_city` (`source_city`) USING HASH,
  KEY `idx_dest_country` (`dest_country`) USING HASH,
  KEY `idx_dest_city` (`dest_city`) USING HASH,
  KEY `idx_dispach_code` (`dispach_code`) USING HASH,
  KEY `idx_unload_network` (`unload_network`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=124292 DEFAULT CHARSET=utf8 COMMENT='派件端预警明细派送环节表'
/*!50500 PARTITION BY RANGE  COLUMNS(delivery_date)
(PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `delivery_warning_detail_unload` */

DROP TABLE IF EXISTS `delivery_warning_detail_unload`;

CREATE TABLE `delivery_warning_detail_unload` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `arrival_network_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '到达网点的日期',
  `main_waybill_no` varchar(64) DEFAULT NULL COMMENT '运单号',
  `source_country` varchar(32) DEFAULT NULL COMMENT '原寄地国家',
  `source_dept` varchar(32) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(32) DEFAULT NULL COMMENT '原寄地地区',
  `source_city` varchar(32) DEFAULT NULL COMMENT '原寄地城市',
  `source_network` varchar(32) DEFAULT NULL COMMENT '原寄地网点',
  `dest_country` varchar(32) DEFAULT NULL COMMENT '目的地国家',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(64) DEFAULT NULL COMMENT '目的地地区',
  `dest_city` varchar(64) DEFAULT NULL COMMENT '目的地城市',
  `unload_network` varchar(32) DEFAULT NULL COMMENT '卸车网点编码',
  `dispach_code` varchar(50) DEFAULT NULL COMMENT '卸车班次编码',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `consigned_tm` datetime DEFAULT NULL COMMENT '收件时间',
  `unload_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `init_handover_aging_standard` datetime DEFAULT NULL COMMENT '初始出仓/交接时效标准(动态）',
  `packages_count` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `post_code` varchar(64) DEFAULT NULL COMMENT '邮编',
  `delivery_mode` int(1) DEFAULT NULL COMMENT '派送模式 0：自营 1：代理',
  `server_ip` varchar(32) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(255) DEFAULT NULL COMMENT '错误原因备注',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`,`arrival_network_date`),
  UNIQUE KEY `idx_unique_ami` (`arrival_network_date`,`main_waybill_no`,`id`) USING BTREE,
  KEY `idx_upload_network` (`unload_network`) USING HASH,
  KEY `idx_source_country` (`source_country`) USING HASH,
  KEY `idx_source_city` (`source_city`) USING HASH,
  KEY `idx_dest_city` (`dest_city`) USING HASH,
  KEY `idx_dispach_code` (`dispach_code`) USING HASH,
  KEY `idx_unload_network` (`unload_network`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_dest_country` (`dest_country`,`arrival_network_date`) USING BTREE,
  KEY `idx_main_waybill_no` (`main_waybill_no`)
) ENGINE=InnoDB AUTO_INCREMENT=585033 DEFAULT CHARSET=utf8 COMMENT='派件端预警明细卸车环节表'
/*!50500 PARTITION BY RANGE  COLUMNS(arrival_network_date)
(PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `delivery_warning_monitor` */

DROP TABLE IF EXISTS `delivery_warning_monitor`;

CREATE TABLE `delivery_warning_monitor` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `arrival_network_date` date DEFAULT NULL COMMENT '到达网点的日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `dest_country_abb` varchar(30) DEFAULT NULL COMMENT '目的地国家简写',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(30) DEFAULT NULL COMMENT '目的地地区',
  `dest_city` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `dest_network` varchar(30) DEFAULT NULL COMMENT '目的地卸车网点',
  `dispach_code` varchar(20) DEFAULT NULL COMMENT '卸车班次编码',
  `actual_arrival_count` int(10) DEFAULT NULL COMMENT '实际到件票数',
  `handle_warning_total_count` int(10) DEFAULT NULL COMMENT '出仓/交接预警总票数',
  `handle_overtime_total_count` int(10) DEFAULT NULL COMMENT '出仓/交接超时总票数',
  `handle_total_count` int(10) DEFAULT NULL COMMENT '出仓/交接总票数',
  `delivery_warning_total_count` int(10) DEFAULT NULL COMMENT '派送预警总票数',
  `delivery_overtime_total_count` int(10) DEFAULT NULL COMMENT '派送超时总票数',
  `already_delivery_count` int(10) DEFAULT NULL COMMENT '已派送总票数',
  `no_delivery_count` int(10) DEFAULT NULL COMMENT '未派送总票数',
  `normal_delivery_count` int(10) DEFAULT NULL COMMENT '准点派送总票数',
  `overtime_no_delivery_count` int(10) DEFAULT NULL COMMENT '超时未派送总票数',
  `overtime_already_delivery_count` int(10) DEFAULT NULL COMMENT '超时已派送总票数',
  `retention_no_delivery_count` int(10) DEFAULT NULL COMMENT '滞留未派送总票数',
  `retention_already_delivery_count` int(10) DEFAULT NULL COMMENT '滞留已派送总票数',
  `upload_delayed_count` int(10) DEFAULT NULL COMMENT '上传延误票数',
  `transfer_count` int(10) DEFAULT NULL COMMENT '转仓总票数',
  `warehouse_out_warning_count_self` int(10) DEFAULT NULL COMMENT '出仓预警票数（自营）',
  `warehouse_out_overtime_count_self` int(10) DEFAULT NULL COMMENT '出仓超时票数（自营）',
  `warehouse_out_count_self` int(10) DEFAULT NULL COMMENT '出仓票数(自营)',
  `delivery_warning_count_self` int(10) DEFAULT NULL COMMENT '派送预警票数（自营）',
  `delivery_overtime_count_self` int(10) DEFAULT NULL COMMENT '派送超时票数（自营）',
  `already_delivery_count_self` int(10) DEFAULT NULL COMMENT '已派送票数(自营)',
  `no_delivery_count_self` int(10) DEFAULT NULL COMMENT '未派送票数（自营）',
  `normal_delivery_count_self` int(10) DEFAULT NULL COMMENT '准点派送票数(自营)',
  `overtime_already_delivery_count_self` int(10) DEFAULT NULL COMMENT '超时已派送票数（自营）',
  `overtime_no_delivery_count_self` int(10) DEFAULT NULL COMMENT '超时未派送票数（自营）',
  `retention_no_delivery_count_self` int(10) DEFAULT NULL COMMENT '滞留未派送票数（自营）',
  `retention_already_delivery_count_self` int(10) DEFAULT NULL COMMENT '滞留已派送票数（自营）',
  `upload_delayed_count_self` int(10) DEFAULT NULL COMMENT '上传延误票数（自营）',
  `handover_warning_count_agent` int(10) DEFAULT NULL COMMENT '交接预警票数（代理）',
  `handover_overtime_count_agent` int(10) DEFAULT NULL COMMENT '交接超时票数（代理）',
  `handover_count_agent` int(10) DEFAULT NULL COMMENT '交接票数(代理)',
  `delivery_warning_count_agent` int(10) DEFAULT NULL COMMENT '派送预警票数（代理）',
  `delivery_overtime_count_agent` int(10) DEFAULT NULL COMMENT '派送超时票数（代理）',
  `already_delivery_count_agent` int(10) DEFAULT NULL COMMENT '已派送票数(代理)',
  `no_delivery_count_agent` int(10) DEFAULT NULL COMMENT '未派送票数（代理）',
  `normal_delivery_count_agent` int(10) DEFAULT NULL COMMENT '准点派送票数（代理）',
  `overtime_already_delivery_count_agent` int(10) DEFAULT NULL COMMENT '超时已派送票数（代理）',
  `overtime_no_delivery_count_agent` int(10) DEFAULT NULL COMMENT '超时未派送票数（代理）',
  `retention_no_delivery_count_agent` int(10) DEFAULT NULL COMMENT '滞留未派送票数（代理）',
  `retention_already_delivery_count_agent` int(10) DEFAULT NULL COMMENT '滞留已派送票数（代理）',
  `upload_delayed_count_agent` int(10) DEFAULT NULL COMMENT '上传延误票数（代理）',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_date` (`arrival_network_date`) USING BTREE,
  KEY `idx_source_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_source_dept` (`dest_dept`) USING HASH,
  KEY `idx_source_area` (`dest_area`) USING HASH,
  KEY `idx_source_city` (`dest_city`) USING HASH,
  KEY `idx_source_network` (`dest_network`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=15630619 DEFAULT CHARSET=utf8 COMMENT='派件端预警监控表';

/*Table structure for table `delivery_warning_summary` */

DROP TABLE IF EXISTS `delivery_warning_summary`;

CREATE TABLE `delivery_warning_summary` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `product_code` varchar(30) DEFAULT NULL COMMENT '产品类型',
  `dest_country_abb` varchar(30) DEFAULT NULL COMMENT '目的地国家简写',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(30) DEFAULT NULL COMMENT '目的地地区',
  `dest_city` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `delivery_mode` int(1) DEFAULT NULL COMMENT '派送模式 0：自营 1：代理',
  `handover_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '交接日期（代理208发生日期）',
  `handover_network_code` varchar(30) DEFAULT NULL COMMENT '交接网点（代理巴枪首次208的网点）',
  `handover_total_count` int(10) DEFAULT '0' COMMENT '交接总票数',
  `handover_overtime_count` int(10) DEFAULT '0' COMMENT '交接超时票数',
  `delivery_batch` varchar(30) DEFAULT NULL COMMENT '派送班次编码',
  `delivery_warning_total_count` int(10) DEFAULT '0' COMMENT '派送预警总票数',
  `delivery_overtime_total_count` int(10) DEFAULT '0' COMMENT '派送超时总票数',
  `already_delivery_count` int(10) DEFAULT '0' COMMENT '已派送总票数',
  `no_delivery_count` int(10) DEFAULT '0' COMMENT '未派送总票数',
  `normal_delivery_count` int(10) DEFAULT '0' COMMENT '准点派送总票数',
  `overtime_no_delivery_count` int(10) DEFAULT '0' COMMENT '超时未派送总票数',
  `overtime_already_delivery_count` int(10) DEFAULT '0' COMMENT '超时已派送总票数',
  `retention_total_count` int(10) DEFAULT '0' COMMENT '滞留总票数',
  `retention_no_delivery_count` int(10) DEFAULT '0' COMMENT '滞留未派送总票数',
  `retention_already_delivery_count` int(10) DEFAULT '0' COMMENT '滞留已派送总票数',
  `upload_delayed_count` int(10) DEFAULT '0' COMMENT '上传延误票数',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  PRIMARY KEY (`id`,`handover_date`),
  UNIQUE KEY `unique_key_01` (`handover_date`,`product_code`,`handover_network_code`,`delivery_batch`,`delivery_mode`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING BTREE,
  KEY `idx_dest_dept` (`dest_dept`) USING BTREE,
  KEY `idx_dest_area` (`dest_area`) USING BTREE,
  KEY `idx_dest_city` (`dest_city`) USING BTREE,
  KEY `idx_warehouse_out_network_code` (`handover_network_code`) USING BTREE,
  KEY `idx_warehouse_out_date` (`handover_date`) USING BTREE,
  KEY `idx_delivery_mode` (`delivery_mode`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2376736 DEFAULT CHARSET=utf8 COMMENT='派件预警汇总'
/*!50500 PARTITION BY RANGE  COLUMNS(handover_date)
(PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION p20190107 VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_area_shift_config` */

DROP TABLE IF EXISTS `ex_area_shift_config`;

CREATE TABLE `ex_area_shift_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `bacth_number` varchar(100) DEFAULT NULL COMMENT '班次编号',
  `operat_area` varchar(50) DEFAULT NULL COMMENT '操作地区',
  `skewer_network` varchar(50) DEFAULT NULL COMMENT '串点网点',
  `network_type` varchar(100) DEFAULT NULL COMMENT '网点分类',
  `product_code` varchar(50) DEFAULT NULL COMMENT '产品类型',
  `start_time` varchar(30) DEFAULT NULL COMMENT '规定开始时间',
  `end_time` varchar(30) DEFAULT NULL COMMENT '规定结束时间',
  `latast_arrival_time` varchar(30) DEFAULT NULL COMMENT '最晚到达时间',
  `work_day` varchar(30) DEFAULT NULL COMMENT '适用工作日',
  `warning_time` double(10,2) DEFAULT NULL COMMENT '预警时间(hours)',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  KEY `idx_bacth_number` (`bacth_number`) USING HASH,
  KEY `idx_skewer_net` (`skewer_network`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=489 DEFAULT CHARSET=utf8 COMMENT='EX网点班次配置(地区)';

/*Table structure for table `ex_capacity_link_monitor_detail` */

DROP TABLE IF EXISTS `ex_capacity_link_monitor_detail`;

CREATE TABLE `ex_capacity_link_monitor_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `capacity_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '运力班次日期',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `link_type` varchar(30) DEFAULT NULL COMMENT '环节分类',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_acct_no` varchar(50) DEFAULT NULL COMMENT '月结卡号',
  `is_electric` varchar(2) DEFAULT NULL COMMENT '是否带电',
  `capacity_batch_code` varchar(30) DEFAULT NULL COMMENT '运力班次',
  `send_network_code` varchar(30) DEFAULT NULL COMMENT '发出网点',
  `send_vehicle` varchar(30) DEFAULT NULL COMMENT '发出车标',
  `line_code` varchar(30) DEFAULT NULL COMMENT '线路编码',
  `plan_arrival_network_code` varchar(30) DEFAULT NULL COMMENT '规划到达网点',
  `export_country` varchar(10) DEFAULT NULL COMMENT '出口国家',
  `export_port` varchar(10) DEFAULT NULL COMMENT '出口口岸',
  `import_country` varchar(10) DEFAULT NULL COMMENT '进口国家',
  `import_port` varchar(10) DEFAULT NULL COMMENT '进口口岸',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `mailing` varchar(200) DEFAULT NULL COMMENT '托寄物',
  `value` double(17,3) DEFAULT NULL COMMENT '价值',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包号',
  `customs_batch` varchar(30) DEFAULT NULL COMMENT '报关批次',
  `plan_import_port` varchar(30) DEFAULT NULL COMMENT '规划进口口岸',
  `main_number` varchar(30) DEFAULT NULL COMMENT '主提单号',
  `flight_no` varchar(30) DEFAULT NULL COMMENT '航班号',
  `capacity_type` varchar(30) DEFAULT NULL COMMENT '运力类型，1：全货机，2：散航班',
  `plan_takeoff_tm` datetime DEFAULT NULL COMMENT '计划起飞时间',
  `actual_takeoff_tm` datetime DEFAULT NULL COMMENT '实际起飞时间',
  `capacity_aging_standard` datetime DEFAULT NULL COMMENT '运力时效标准',
  `actual_landing_tm` datetime DEFAULT NULL COMMENT '实际落地时间',
  `send_excep_tm` datetime DEFAULT NULL COMMENT '发货异常时间',
  `send_excep_reason` varchar(500) DEFAULT NULL COMMENT '发货异常原因',
  `time_consuming` varchar(10) DEFAULT NULL COMMENT '耗时(h)',
  `warning_overtime_h` varchar(10) DEFAULT NULL COMMENT '预警/超时(h)',
  `warning_overtime_d` varchar(10) DEFAULT NULL COMMENT '预警/超时(d)',
  `is_plan_same` varchar(2) DEFAULT NULL COMMENT '是否规划相符(Y/N)',
  `is_same_day_landing` varchar(2) DEFAULT NULL COMMENT '是否当天落地(Y/N)',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `is_ontime_arrival` varchar(2) DEFAULT NULL COMMENT '是否准点到件(Y/N)',
  `is_warning` varchar(2) DEFAULT NULL COMMENT '是否预警(Y/N)',
  `is_timeout` varchar(2) DEFAULT NULL COMMENT '是否超时(Y/N)',
  `is_timeout_arrived` varchar(2) DEFAULT NULL COMMENT '是否超时已到(Y/N)',
  `is_timeout_no_arrival` varchar(2) DEFAULT NULL COMMENT '是否超时未到(Y/N)',
  `is_send_excep` varchar(2) DEFAULT NULL COMMENT '是否发货异常(Y/N)',
  `is_same_day_landed` varchar(2) DEFAULT NULL COMMENT '是否当天已落地(Y/N)',
  `is_total_no_arrival` varchar(2) DEFAULT NULL COMMENT '是否累计未到(Y/N)',
  `is_total_arrived` varchar(2) DEFAULT NULL COMMENT '是否累计已到(Y/N)',
  `is_excep_import_port` varchar(2) DEFAULT NULL COMMENT '是否异常进口口岸(Y/N)',
  `server_ip` varchar(30) DEFAULT NULL COMMENT '服务器运行IP',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`capacity_batch_date`),
  KEY `idx_capacity_batch_date` (`capacity_batch_date`) USING BTREE,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_export_country` (`export_country`) USING HASH,
  KEY `idx_export_port` (`export_port`) USING HASH,
  KEY `idx_import_country` (`import_country`) USING HASH,
  KEY `idx_import_port` (`import_port`) USING HASH,
  KEY `idx_customer_code` (`customer_code`) USING HASH,
  KEY `idx_customs_batch` (`customs_batch`) USING HASH,
  KEY `idx_main_number` (`main_number`) USING HASH,
  KEY `idx_customer_acct_no` (`customer_acct_no`) USING HASH,
  KEY `idx_send_vehicle` (`send_vehicle`) USING HASH,
  KEY `idx_flight_no` (`flight_no`) USING HASH,
  KEY `idx_capacity_type` (`capacity_type`) USING HASH,
  KEY `idx_is_same_day_landing` (`is_same_day_landing`) USING HASH,
  KEY `idx_is_send_excep` (`is_send_excep`) USING HASH,
  KEY `idx_actual_landing_tm` (`actual_landing_tm`) USING BTREE,
  KEY `idx_sign_out_package_no` (`sign_out_package_no`) USING HASH,
  KEY `idx_source_country_code` (`source_country_code`) USING HASH,
  KEY `idx_source_dept_code` (`source_dept_code`) USING HASH,
  KEY `idx_source_area_code` (`source_area_code`) USING HASH,
  KEY `idx_source_city_code` (`source_city_code`) USING HASH,
  KEY `idx_source_network_code` (`source_network_code`) USING HASH,
  KEY `idx_dest_country_code` (`dest_country_code`) USING HASH,
  KEY `idx_dest_dept_code` (`dest_dept_code`) USING HASH,
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH,
  KEY `idx_dest_area_code` (`dest_area_code`) USING HASH,
  KEY `idx_dest_network_code` (`dest_network_code`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_is_electric` (`is_electric`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8 COMMENT='EX运力环节明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(capacity_batch_date)
(PARTITION p20190107 VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN ('2019-11-04') ENGINE = InnoDB,
 PARTITION p20191111 VALUES LESS THAN ('2019-11-11') ENGINE = InnoDB,
 PARTITION p20191118 VALUES LESS THAN ('2019-11-18') ENGINE = InnoDB,
 PARTITION p20191125 VALUES LESS THAN ('2019-11-25') ENGINE = InnoDB,
 PARTITION p20191202 VALUES LESS THAN ('2019-12-02') ENGINE = InnoDB,
 PARTITION p20191209 VALUES LESS THAN ('2019-12-09') ENGINE = InnoDB,
 PARTITION p20191216 VALUES LESS THAN ('2019-12-16') ENGINE = InnoDB,
 PARTITION p20191223 VALUES LESS THAN ('2019-12-23') ENGINE = InnoDB,
 PARTITION p20191230 VALUES LESS THAN ('2019-12-30') ENGINE = InnoDB,
 PARTITION p20200106 VALUES LESS THAN ('2020-01-06') ENGINE = InnoDB,
 PARTITION p20200113 VALUES LESS THAN ('2020-01-13') ENGINE = InnoDB,
 PARTITION p20200120 VALUES LESS THAN ('2020-01-20') ENGINE = InnoDB,
 PARTITION p20200127 VALUES LESS THAN ('2020-01-27') ENGINE = InnoDB,
 PARTITION p20200203 VALUES LESS THAN ('2020-02-03') ENGINE = InnoDB,
 PARTITION p20200210 VALUES LESS THAN ('2020-02-10') ENGINE = InnoDB,
 PARTITION p20200217 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_capacity_link_monitor_sum` */

DROP TABLE IF EXISTS `ex_capacity_link_monitor_sum`;

CREATE TABLE `ex_capacity_link_monitor_sum` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `capacity_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '运力班次日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `network_type` varchar(30) DEFAULT NULL COMMENT '网点分类',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_acct_no` varchar(50) DEFAULT NULL COMMENT '月结卡号',
  `is_electric` varchar(2) DEFAULT NULL COMMENT '是否带电',
  `vehicle_code` varchar(30) DEFAULT NULL COMMENT '车标号',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包号',
  `customs_batch` varchar(30) DEFAULT NULL COMMENT '报关批次',
  `capacity_batch_code` varchar(30) DEFAULT NULL COMMENT '运力班次',
  `send_network_code` varchar(30) DEFAULT NULL COMMENT '发出网点',
  `plan_import_port` varchar(30) DEFAULT NULL COMMENT '规划进口口岸',
  `export_country` varchar(10) DEFAULT NULL COMMENT '出口国家',
  `export_port` varchar(10) DEFAULT NULL COMMENT '出口口岸',
  `import_country` varchar(10) DEFAULT NULL COMMENT '进口国家',
  `import_port` varchar(10) DEFAULT NULL COMMENT '进口口岸',
  `main_number` varchar(30) DEFAULT NULL COMMENT '主提单号',
  `flight_no` varchar(30) DEFAULT NULL COMMENT '航班号',
  `capacity_type` varchar(30) DEFAULT NULL COMMENT '运力类型，1：全货机，2：散航班',
  `capacity_count` int(10) DEFAULT NULL COMMENT '运力票数',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `ontime_arrival_count` int(10) DEFAULT NULL COMMENT '准点到件量',
  `ontime_arrival_actual_weight` double(17,3) DEFAULT NULL COMMENT '准点到件实际重量',
  `ontime_arrival_meterage_weight` double(17,3) DEFAULT NULL COMMENT '准点到件计费重量',
  `timeout_arrival_total_count` int(10) DEFAULT NULL COMMENT '超时到件总量',
  `timeout_arrival_total_actual_weight` double(17,3) DEFAULT NULL COMMENT '超时到件实际重量',
  `timeout_arrival_total_meterage_weight` double(17,3) DEFAULT NULL COMMENT '超时到件计费重量',
  `warning_count` int(10) DEFAULT NULL COMMENT '预警量',
  `timeout_arrived_count` int(10) DEFAULT NULL COMMENT '超时已到量',
  `timeout_no_arrival_count` int(10) DEFAULT NULL COMMENT '超时未到量',
  `send_excep_count` int(10) DEFAULT NULL COMMENT '发货异常量',
  `total_no_arrival_count` int(10) DEFAULT NULL COMMENT '累计未到量',
  `total_no_arrival_actual_weight` double(17,3) DEFAULT NULL COMMENT '累计未到实际重量',
  `total_no_arrival_meterage_weight` double(17,3) DEFAULT NULL COMMENT '累计未到计费重量',
  `total_arrived_count` int(10) DEFAULT NULL COMMENT '累计已到量',
  `total_arrived_actual_weight` double(17,3) DEFAULT NULL COMMENT '累计已到实际重量',
  `excep_import_port_count` int(10) DEFAULT NULL COMMENT '异常进口口岸票数',
  `same_day_landed_count` int(10) DEFAULT NULL COMMENT '当天已落地票数',
  `avg_time_consuming` double(10,2) DEFAULT NULL COMMENT '平均耗时',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `server_ip` varchar(30) DEFAULT NULL COMMENT '服务器运行IP',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`capacity_batch_date`),
  KEY `idx_capacity_batch_date` (`capacity_batch_date`) USING BTREE,
  KEY `idx_export_country` (`export_country`) USING HASH,
  KEY `idx_export_port` (`export_port`) USING HASH,
  KEY `idx_import_country` (`import_country`) USING HASH,
  KEY `idx_import_port` (`import_port`) USING HASH,
  KEY `idx_send_network_code` (`send_network_code`) USING HASH,
  KEY `idx_customer_code` (`customer_code`) USING HASH,
  KEY `idx_main_number` (`main_number`) USING HASH,
  KEY `idx_customs_batch` (`customs_batch`) USING HASH,
  KEY `idx_vehicle_code` (`vehicle_code`) USING HASH,
  KEY `idx_sign_out_package_no` (`sign_out_package_no`) USING HASH,
  KEY `idx_customer_acct_no` (`customer_acct_no`) USING HASH,
  KEY `idx_flight_no` (`flight_no`) USING HASH,
  KEY `idx_source_country_code` (`source_country_code`) USING HASH,
  KEY `idx_source_dept_code` (`source_dept_code`) USING HASH,
  KEY `idx_source_area_code` (`source_area_code`) USING HASH,
  KEY `idx_source_city_code` (`source_city_code`) USING HASH,
  KEY `idx_source_network_code` (`source_network_code`) USING HASH,
  KEY `idx_dest_country_code` (`dest_country_code`) USING HASH,
  KEY `idx_dest_dept_code` (`dest_dept_code`) USING HASH,
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH,
  KEY `idx_dest_area_code` (`dest_area_code`) USING HASH,
  KEY `idx_dest_network_code` (`dest_network_code`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=11205 DEFAULT CHARSET=utf8 COMMENT='EX运力环节监控汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(capacity_batch_date)
(PARTITION p20190113 VALUES LESS THAN ('2019-01-13') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190115 VALUES LESS THAN ('2019-01-15') ENGINE = InnoDB,
 PARTITION p20190116 VALUES LESS THAN ('2019-01-16') ENGINE = InnoDB,
 PARTITION p20190117 VALUES LESS THAN ('2019-01-17') ENGINE = InnoDB,
 PARTITION p20190118 VALUES LESS THAN ('2019-01-18') ENGINE = InnoDB,
 PARTITION p20190119 VALUES LESS THAN ('2019-01-19') ENGINE = InnoDB,
 PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190122 VALUES LESS THAN ('2019-01-22') ENGINE = InnoDB,
 PARTITION p20190123 VALUES LESS THAN ('2019-01-23') ENGINE = InnoDB,
 PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-13') ENGINE = InnoDB,
 PARTITION p20190214 VALUES LESS THAN ('2019-02-14') ENGINE = InnoDB,
 PARTITION p20190215 VALUES LESS THAN ('2019-02-15') ENGINE = InnoDB,
 PARTITION p20190216 VALUES LESS THAN ('2019-02-16') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190219 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190220 VALUES LESS THAN ('2019-02-20') ENGINE = InnoDB,
 PARTITION p20190221 VALUES LESS THAN ('2019-02-21') ENGINE = InnoDB,
 PARTITION p20190222 VALUES LESS THAN ('2019-02-22') ENGINE = InnoDB,
 PARTITION p20190223 VALUES LESS THAN ('2019-02-23') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN ('2019-02-27') ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN ('2019-02-28') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-03-07') ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN ('2019-03-14') ENGINE = InnoDB,
 PARTITION p20190321 VALUES LESS THAN ('2019-03-21') ENGINE = InnoDB,
 PARTITION p20190328 VALUES LESS THAN ('2019-03-28') ENGINE = InnoDB,
 PARTITION p20190404 VALUES LESS THAN ('2019-04-04') ENGINE = InnoDB,
 PARTITION p20190411 VALUES LESS THAN ('2019-04-11') ENGINE = InnoDB,
 PARTITION p20190418 VALUES LESS THAN ('2019-04-18') ENGINE = InnoDB,
 PARTITION p20190425 VALUES LESS THAN ('2019-04-25') ENGINE = InnoDB,
 PARTITION p20190502 VALUES LESS THAN ('2019-05-02') ENGINE = InnoDB,
 PARTITION p20190509 VALUES LESS THAN ('2019-05-09') ENGINE = InnoDB,
 PARTITION p20190516 VALUES LESS THAN ('2019-05-16') ENGINE = InnoDB,
 PARTITION p20190523 VALUES LESS THAN ('2019-05-23') ENGINE = InnoDB,
 PARTITION p20190530 VALUES LESS THAN ('2019-05-30') ENGINE = InnoDB,
 PARTITION p20190606 VALUES LESS THAN ('2019-06-06') ENGINE = InnoDB,
 PARTITION p20190613 VALUES LESS THAN ('2019-06-13') ENGINE = InnoDB,
 PARTITION p20190620 VALUES LESS THAN ('2019-06-20') ENGINE = InnoDB,
 PARTITION p20190627 VALUES LESS THAN ('2019-06-27') ENGINE = InnoDB,
 PARTITION p20190704 VALUES LESS THAN ('2019-07-04') ENGINE = InnoDB,
 PARTITION p20190711 VALUES LESS THAN ('2019-07-11') ENGINE = InnoDB,
 PARTITION p20190718 VALUES LESS THAN ('2019-07-18') ENGINE = InnoDB,
 PARTITION p20190725 VALUES LESS THAN ('2019-07-25') ENGINE = InnoDB,
 PARTITION p20190801 VALUES LESS THAN ('2019-08-01') ENGINE = InnoDB,
 PARTITION p20190808 VALUES LESS THAN ('2019-08-08') ENGINE = InnoDB,
 PARTITION p20190815 VALUES LESS THAN ('2019-08-15') ENGINE = InnoDB,
 PARTITION p20190822 VALUES LESS THAN ('2019-08-22') ENGINE = InnoDB,
 PARTITION p20190829 VALUES LESS THAN ('2019-08-29') ENGINE = InnoDB,
 PARTITION p20190905 VALUES LESS THAN ('2019-09-05') ENGINE = InnoDB,
 PARTITION p20190912 VALUES LESS THAN ('2019-09-12') ENGINE = InnoDB,
 PARTITION p20190919 VALUES LESS THAN ('2019-09-19') ENGINE = InnoDB,
 PARTITION p20190926 VALUES LESS THAN ('2019-09-26') ENGINE = InnoDB,
 PARTITION p20191003 VALUES LESS THAN ('2019-10-03') ENGINE = InnoDB,
 PARTITION p20191010 VALUES LESS THAN ('2019-10-10') ENGINE = InnoDB,
 PARTITION p20191017 VALUES LESS THAN ('2019-10-17') ENGINE = InnoDB,
 PARTITION p20191024 VALUES LESS THAN ('2019-10-24') ENGINE = InnoDB,
 PARTITION p20191031 VALUES LESS THAN ('2019-10-31') ENGINE = InnoDB,
 PARTITION p20191107 VALUES LESS THAN ('2019-11-07') ENGINE = InnoDB,
 PARTITION p20191114 VALUES LESS THAN ('2019-11-14') ENGINE = InnoDB,
 PARTITION p20191121 VALUES LESS THAN ('2019-11-21') ENGINE = InnoDB,
 PARTITION p20191128 VALUES LESS THAN ('2019-11-28') ENGINE = InnoDB,
 PARTITION p20191205 VALUES LESS THAN ('2019-12-05') ENGINE = InnoDB,
 PARTITION p20191212 VALUES LESS THAN ('2019-12-12') ENGINE = InnoDB,
 PARTITION p20191219 VALUES LESS THAN ('2019-12-19') ENGINE = InnoDB,
 PARTITION p20191226 VALUES LESS THAN ('2019-12-26') ENGINE = InnoDB,
 PARTITION p20200102 VALUES LESS THAN ('2020-01-02') ENGINE = InnoDB,
 PARTITION p20200109 VALUES LESS THAN ('2020-01-09') ENGINE = InnoDB,
 PARTITION p20200116 VALUES LESS THAN ('2020-01-16') ENGINE = InnoDB,
 PARTITION p20200123 VALUES LESS THAN ('2020-01-23') ENGINE = InnoDB,
 PARTITION p20200130 VALUES LESS THAN ('2020-01-30') ENGINE = InnoDB,
 PARTITION p20200206 VALUES LESS THAN ('2020-02-06') ENGINE = InnoDB,
 PARTITION p20200213 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_cargo_pickup_circle_monitor_detail` */

DROP TABLE IF EXISTS `ex_cargo_pickup_circle_monitor_detail`;

CREATE TABLE `ex_cargo_pickup_circle_monitor_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `cargo_pickup_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '提货开始日期',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `circle_type` varchar(30) DEFAULT NULL COMMENT '环节分类',
  `product_type` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_card_code` varchar(50) DEFAULT NULL COMMENT '月结卡号',
  `is_electric` tinyint(4) DEFAULT NULL COMMENT '是否带电(0不带电1带电)',
  `cargo_pickup_batch_code` varchar(30) DEFAULT NULL COMMENT '提货班次',
  `send_out_network_code` varchar(30) DEFAULT NULL COMMENT '发出网点',
  `send_out_car_code` varchar(30) DEFAULT NULL COMMENT '发出车标',
  `line_code` varchar(30) DEFAULT NULL COMMENT '线路编码',
  `plan_arrive_code` varchar(30) DEFAULT NULL COMMENT '规划到达网点',
  `export_country` varchar(10) DEFAULT NULL COMMENT '出口国家',
  `export_port` varchar(10) DEFAULT NULL COMMENT '出口口岸',
  `import_country` varchar(10) DEFAULT NULL COMMENT '进口国家',
  `import_port` varchar(10) DEFAULT NULL COMMENT '进口口岸',
  `quantity` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` decimal(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` decimal(17,3) DEFAULT NULL COMMENT '计费重量',
  `cons_content` varchar(200) DEFAULT NULL COMMENT '托寄物',
  `cons_value` decimal(17,3) DEFAULT NULL COMMENT '价值',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包号',
  `customs_batch` varchar(30) DEFAULT NULL COMMENT '报关批次',
  `plan_import_port` varchar(30) DEFAULT NULL COMMENT '规划进口口岸',
  `main_number` varchar(30) DEFAULT NULL COMMENT '主提单号',
  `flight_no` varchar(30) DEFAULT NULL COMMENT '航班号',
  `capacity_type` tinyint(4) DEFAULT NULL COMMENT '运力类型:1全货机,2散航班',
  `plan_arrival_time` datetime DEFAULT NULL COMMENT '计划落地时间',
  `actual_arrival_time` datetime DEFAULT NULL COMMENT '实际落地时间',
  `cargo_pickup_aging_standard` datetime DEFAULT NULL COMMENT '提货时效标准',
  `cargo_pickup_warn_time` datetime DEFAULT NULL COMMENT '提货预警时间',
  `cargo_pickup_start_time` datetime DEFAULT NULL COMMENT '提货开始时间',
  `cargo_pickup_end_time` datetime DEFAULT NULL COMMENT '提货结束时间',
  `cargo_pickup_exception_time` datetime DEFAULT NULL COMMENT '提货异常时间',
  `cargo_pickup_exception_reason` varchar(100) DEFAULT NULL COMMENT '提货异常原因',
  `time_consuming` int(10) DEFAULT NULL COMMENT '耗时(分钟数)',
  `overtime_warn_h` int(10) DEFAULT NULL COMMENT '预警/超时(h)',
  `overtime_warn_d` int(10) DEFAULT NULL COMMENT '预警/超时(d)',
  `monitor_status` tinyint(4) DEFAULT NULL COMMENT '监控状态 （1：未预警，2：已预警，3：已超时，4：已完成）',
  `is_plain_match` bit(1) DEFAULT NULL COMMENT '是否规划相符',
  `is_same_day_cargo_pickup` bit(1) DEFAULT NULL COMMENT '是否当天提货',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `server_ip` varchar(30) DEFAULT NULL COMMENT '服务器运行IP',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '入库时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `un_waybill_no` (`main_waybill_no`),
  KEY `in_cargo_pickup_date` (`cargo_pickup_date`) USING BTREE,
  KEY `in_main_number` (`main_number`) USING BTREE,
  KEY `in_flight_no` (`flight_no`) USING BTREE,
  KEY `in_customs_batch` (`customs_batch`) USING BTREE,
  KEY `in_customer_code` (`customer_code`) USING BTREE,
  KEY `in_sign_out_package_no` (`sign_out_package_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8 COMMENT='EX提货环节监控明细';

/*Table structure for table `ex_cargo_pickup_circle_monitor_sum` */

DROP TABLE IF EXISTS `ex_cargo_pickup_circle_monitor_sum`;

CREATE TABLE `ex_cargo_pickup_circle_monitor_sum` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `cargo_pickup_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '提货开始日期',
  `circle_type` varchar(30) DEFAULT NULL COMMENT '环节分类',
  `flight_no` varchar(30) DEFAULT NULL COMMENT '航班号',
  `cargo_pickup_batch_code` varchar(30) DEFAULT NULL COMMENT '提货班次',
  `main_number` varchar(30) DEFAULT NULL COMMENT '主提单号',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包号',
  `product_type` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_card_code` varchar(50) DEFAULT NULL COMMENT '月结卡号',
  `is_electric` bit(1) DEFAULT NULL COMMENT '是否带电',
  `send_out_network_code` varchar(30) DEFAULT NULL COMMENT '发出网点',
  `send_out_car_code` varchar(30) DEFAULT NULL COMMENT '发出车标',
  `customs_batch` varchar(30) DEFAULT NULL COMMENT '报关批次',
  `plan_import_port` varchar(30) DEFAULT NULL COMMENT '规划进口口岸',
  `export_country` varchar(10) DEFAULT NULL COMMENT '出口国家',
  `export_port` varchar(10) DEFAULT NULL COMMENT '出口口岸',
  `import_country` varchar(10) DEFAULT NULL COMMENT '进口国家',
  `import_port` varchar(10) DEFAULT NULL COMMENT '进口口岸',
  `capacity_type` tinyint(4) DEFAULT NULL COMMENT '运力类型:1全货机,2散航班',
  `quantity` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` decimal(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` decimal(17,3) DEFAULT NULL COMMENT '计费重量',
  `bill_count` bigint(20) DEFAULT NULL COMMENT '总到票数',
  `ontime_bill_count` bigint(20) DEFAULT NULL COMMENT '准点提货量',
  `ontime_actual_weight` decimal(17,3) DEFAULT NULL COMMENT '准点提货实际重量',
  `ontime_meterage_weight` decimal(17,3) DEFAULT NULL COMMENT '准点提货计费重量',
  `overtime_bill_count` bigint(20) DEFAULT NULL COMMENT '超时总量(超时已提货量+超时未提货量)',
  `overtime_actual_weight` decimal(17,3) DEFAULT NULL COMMENT '超时提货实际重量',
  `overtime_meterage_weight` decimal(17,3) DEFAULT NULL COMMENT '超时提货计费重量',
  `warn_bill_count` bigint(20) DEFAULT NULL COMMENT '预警量',
  `overtime_pick_bill_count` bigint(20) DEFAULT NULL COMMENT '超时已提量',
  `overtime_no_pick_bill_count` bigint(20) DEFAULT NULL COMMENT '超时未提量',
  `exception_bill_count` bigint(20) DEFAULT NULL COMMENT '异常量',
  `no_pick_bill_count` bigint(20) DEFAULT NULL COMMENT '累计未提货',
  `no_pick_actual_weight` decimal(17,3) DEFAULT NULL COMMENT '累计未提货实际重量',
  `no_pick_meterage_weight` decimal(17,3) DEFAULT NULL COMMENT '累计未提货计费重量',
  `pick_bill_count` bigint(20) DEFAULT NULL COMMENT '累计已提货',
  `pick_actual_weight` decimal(17,3) DEFAULT NULL COMMENT '累计已提货实际重量',
  `pick_meterage_weight` decimal(17,3) DEFAULT NULL COMMENT '累计已提货计费重量',
  `exception_import_bill_count` bigint(20) DEFAULT NULL COMMENT '异常进口口岸票数',
  `same_day_pick_bill_count` bigint(20) DEFAULT NULL COMMENT '当天已提货',
  `time_consuming_average` int(10) DEFAULT NULL COMMENT '平均耗时',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '入库时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `in_cargo_pickup_date` (`cargo_pickup_date`) USING BTREE,
  KEY `in_sign_out_package_no` (`sign_out_package_no`) USING BTREE,
  KEY `in_customer_code` (`customer_code`) USING BTREE,
  KEY `in_flight_no` (`flight_no`) USING BTREE,
  KEY `in_main_number` (`main_number`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=143362 DEFAULT CHARSET=utf8 COMMENT='EX提货环节监控';

/*Table structure for table `ex_clearance_port_net_branch_config` */

DROP TABLE IF EXISTS `ex_clearance_port_net_branch_config`;

CREATE TABLE `ex_clearance_port_net_branch_config` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `flight_no` varchar(100) NOT NULL COMMENT '班次编号',
  `network_type` smallint(5) DEFAULT NULL COMMENT '网点分类（固定网点）1 网点',
  `operat_net` varchar(50) DEFAULT NULL COMMENT '操作网点',
  `import_port` varchar(50) NOT NULL COMMENT '进口口岸',
  `import_country` varchar(50) DEFAULT NULL COMMENT '进口国家',
  `product_type` varchar(5) NOT NULL COMMENT '产品类型（EXP,EXW,EXD）',
  `start_time` varchar(30) DEFAULT NULL COMMENT '规定开始时间',
  `end_time` varchar(30) DEFAULT NULL COMMENT '截单时间',
  `cfs_clearance_end_time` varchar(30) DEFAULT NULL COMMENT 'CFS清关结束时间',
  `latast_arrival_time` varchar(30) DEFAULT NULL COMMENT '规定结束时间',
  `official_clearance_end_time` varchar(30) DEFAULT NULL COMMENT '正式报关清关结束时间',
  `work_day` varchar(10) NOT NULL COMMENT '适用工作日1表示周一,2表示周二...''',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `warning_time` varchar(10) DEFAULT NULL COMMENT '预警时长',
  PRIMARY KEY (`id`),
  KEY `idx_flight_no` (`flight_no`) USING HASH,
  KEY `idx_operat_net` (`operat_net`) USING HASH,
  KEY `idx_work_day` (`work_day`) USING HASH,
  KEY `idx_product type` (`product_type`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=193 DEFAULT CHARSET=utf8mb4 COMMENT='EX清关口岸网点班次配置';

/*Table structure for table `ex_custom_content_config` */

DROP TABLE IF EXISTS `ex_custom_content_config`;

CREATE TABLE `ex_custom_content_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `custom_code` varchar(50) DEFAULT NULL COMMENT '定制内容代码',
  `cn_custom_describe` varchar(50) DEFAULT NULL COMMENT '定制内容中文',
  `en_custom_describe` varchar(100) DEFAULT NULL COMMENT '定制内容英文',
  `update_user` varchar(50) DEFAULT NULL COMMENT '更新用户',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  KEY `index_custom_code` (`custom_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='定制内容定义配置';

/*Table structure for table `ex_customs_clearance_port_network_monitor_detail` */

DROP TABLE IF EXISTS `ex_customs_clearance_port_network_monitor_detail`;

CREATE TABLE `ex_customs_clearance_port_network_monitor_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `customs_clearance_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '清关班次日期',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `network_type` varchar(30) DEFAULT NULL COMMENT '网点分类',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_acct_no` varchar(50) DEFAULT NULL COMMENT '月结卡号',
  `is_electric` varchar(2) DEFAULT NULL COMMENT '是否带电',
  `customs_clearance_batch_code` varchar(30) DEFAULT NULL COMMENT '清关班次',
  `actual_customs_clearance_network_code` varchar(30) DEFAULT NULL COMMENT '实际清关网点',
  `plan_customs_clearance_network_code` varchar(30) DEFAULT NULL COMMENT '规划清关网点',
  `unload_vehicle` varchar(30) DEFAULT NULL COMMENT '卸车车标',
  `export_country` varchar(10) DEFAULT NULL COMMENT '出口国家',
  `export_port` varchar(10) DEFAULT NULL COMMENT '出口口岸',
  `import_country` varchar(10) DEFAULT NULL COMMENT '进口国家',
  `import_port` varchar(10) DEFAULT NULL COMMENT '进口口岸',
  `customs_batch` varchar(30) DEFAULT NULL COMMENT '报关批次',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包号',
  `flight_no` varchar(30) DEFAULT NULL COMMENT '航班号',
  `main_number` varchar(30) DEFAULT NULL COMMENT '主提单号',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `mailing` varchar(200) DEFAULT NULL COMMENT '托寄物',
  `value` double(17,3) DEFAULT NULL COMMENT '价值',
  `is_formal_declare` varchar(2) DEFAULT NULL COMMENT '是否正式报关',
  `clearance_mode` varchar(30) DEFAULT NULL COMMENT '清关模式',
  `actual_arrival_time` datetime DEFAULT NULL COMMENT '实际落地时间',
  `clearance_start_tm` datetime DEFAULT NULL COMMENT '清关开始时间',
  `clearance_aging_standard` datetime DEFAULT NULL COMMENT '清关时效标准',
  `clearance_end_tm` datetime DEFAULT NULL COMMENT '清关结束时间',
  `retention_time` varchar(300) DEFAULT NULL COMMENT '滞留时间',
  `retention_bar_code` varchar(150) DEFAULT NULL COMMENT '滞留巴枪码',
  `retention_reason` varchar(300) DEFAULT NULL COMMENT '滞留原因',
  `time_consuming` varchar(10) DEFAULT NULL COMMENT '耗时(h)',
  `warning_overtime_h` varchar(10) DEFAULT NULL COMMENT '预警/超时(h)',
  `warning_overtime_d` varchar(10) DEFAULT NULL COMMENT '预警/超时(d)',
  `is_same_clearance_finished` varchar(2) DEFAULT NULL COMMENT '是否当天清关完成',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `is_retention` varchar(2) DEFAULT NULL COMMENT '是否滞留(Y/N)',
  `is_clearance` varchar(2) DEFAULT NULL COMMENT '是否清关(Y/N)',
  `is_timeout` varchar(2) DEFAULT NULL COMMENT '是否超时(Y/N)',
  `is_warning` varchar(2) DEFAULT NULL COMMENT '是否预警(Y/N)',
  `is_cfs` varchar(2) DEFAULT NULL COMMENT '是否CFS清关(Y/N)',
  `is_ontime` varchar(2) DEFAULT NULL COMMENT '是否准点清关(Y/N)',
  `is_total_no_clearance` varchar(2) DEFAULT NULL COMMENT '是否累计未清关(Y/N)',
  `is_total_cleared` varchar(2) DEFAULT NULL COMMENT '是否累计已清关(Y/N)',
  `is_timeout_cleared` varchar(2) DEFAULT NULL COMMENT '是否超时已清关(Y/N)',
  `is_timeout_no_clearance` varchar(2) DEFAULT NULL COMMENT '是否超时未清关(Y/N)',
  `server_ip` varchar(30) DEFAULT NULL COMMENT '服务器运行IP',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `retention_length` varchar(10) DEFAULT NULL COMMENT '滞留时长(小时为单位，保留一位小数点)',
  `first_retention_tm` datetime DEFAULT NULL COMMENT '首次滞留时间',
  PRIMARY KEY (`id`,`customs_clearance_batch_date`),
  KEY `idx_customs_clearance_batch_date` (`customs_clearance_batch_date`) USING BTREE,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_export_country` (`export_country`) USING HASH,
  KEY `idx_export_port` (`export_port`) USING HASH,
  KEY `idx_import_country` (`import_country`) USING HASH,
  KEY `idx_import_port` (`import_port`) USING HASH,
  KEY `idx_customs_clearance_network_code` (`actual_customs_clearance_network_code`) USING HASH,
  KEY `idx_customs_clearance_batch_code` (`customs_clearance_batch_code`) USING HASH,
  KEY `idx_customs_batch` (`customs_batch`) USING HASH,
  KEY `idx_source_country_code` (`source_country_code`) USING HASH,
  KEY `idx_source_dept_code` (`source_dept_code`) USING HASH,
  KEY `idx_source_area_code` (`source_area_code`) USING HASH,
  KEY `idx_source_city_code` (`source_city_code`) USING HASH,
  KEY `idx_source_network_code` (`source_network_code`) USING HASH,
  KEY `idx_dest_country_code` (`dest_country_code`) USING HASH,
  KEY `idx_dest_dept_code` (`dest_dept_code`) USING HASH,
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH,
  KEY `idx_dest_area_code` (`dest_area_code`) USING HASH,
  KEY `idx_dest_network_code` (`dest_network_code`) USING HASH,
  KEY `idx_customer_code` (`customer_code`) USING HASH,
  KEY `idx_main_number` (`main_number`) USING HASH,
  KEY `idx_unload_vehicle` (`unload_vehicle`) USING HASH,
  KEY `idx_sign_out_package_no` (`sign_out_package_no`) USING HASH,
  KEY `idx_customer_acct_no` (`customer_acct_no`) USING HASH,
  KEY `idx_flight_no` (`flight_no`) USING HASH,
  KEY `idx_clearance_mode` (`clearance_mode`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_is_retention` (`is_retention`) USING HASH,
  KEY `idx_is_clearance` (`is_clearance`) USING HASH,
  KEY `idx_is_formal_declare` (`is_formal_declare`) USING HASH,
  KEY `idx_is_timeout` (`is_timeout`) USING HASH,
  KEY `idx_is_warning` (`is_warning`) USING HASH,
  KEY `idx_is_same_clearance_finished` (`is_same_clearance_finished`) USING HASH,
  KEY `idx_clearance_start_tm` (`clearance_start_tm`) USING BTREE,
  KEY `idx_clearance_end_tm` (`clearance_end_tm`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=97 DEFAULT CHARSET=utf8 COMMENT='EX清关口岸网点监控明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(customs_clearance_batch_date)
(PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN ('2019-11-04') ENGINE = InnoDB,
 PARTITION p20191111 VALUES LESS THAN ('2019-11-11') ENGINE = InnoDB,
 PARTITION p20191118 VALUES LESS THAN ('2019-11-18') ENGINE = InnoDB,
 PARTITION p20191125 VALUES LESS THAN ('2019-11-25') ENGINE = InnoDB,
 PARTITION p20191202 VALUES LESS THAN ('2019-12-02') ENGINE = InnoDB,
 PARTITION p20191209 VALUES LESS THAN ('2019-12-09') ENGINE = InnoDB,
 PARTITION p20191216 VALUES LESS THAN ('2019-12-16') ENGINE = InnoDB,
 PARTITION p20191223 VALUES LESS THAN ('2019-12-23') ENGINE = InnoDB,
 PARTITION p20191230 VALUES LESS THAN ('2019-12-30') ENGINE = InnoDB,
 PARTITION p20200106 VALUES LESS THAN ('2020-01-06') ENGINE = InnoDB,
 PARTITION p20200113 VALUES LESS THAN ('2020-01-13') ENGINE = InnoDB,
 PARTITION p20200120 VALUES LESS THAN ('2020-01-20') ENGINE = InnoDB,
 PARTITION p20200127 VALUES LESS THAN ('2020-01-27') ENGINE = InnoDB,
 PARTITION p20200203 VALUES LESS THAN ('2020-02-03') ENGINE = InnoDB,
 PARTITION p20200210 VALUES LESS THAN ('2020-02-10') ENGINE = InnoDB,
 PARTITION p20200217 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_customs_clearance_port_network_monitor_sum` */

DROP TABLE IF EXISTS `ex_customs_clearance_port_network_monitor_sum`;

CREATE TABLE `ex_customs_clearance_port_network_monitor_sum` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `customs_clearance_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '清关班次日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `network_type` varchar(30) DEFAULT NULL COMMENT '网点分类',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_acct_no` varchar(50) DEFAULT NULL COMMENT '月结卡号',
  `is_electric` varchar(2) DEFAULT NULL COMMENT '是否带电',
  `customs_clearance_batch_code` varchar(30) DEFAULT NULL COMMENT '清关班次',
  `customs_clearance_network_code` varchar(30) DEFAULT NULL COMMENT '清关网点',
  `unload_vehicle` varchar(30) DEFAULT NULL COMMENT '卸车车标',
  `export_country` varchar(10) DEFAULT NULL COMMENT '出口国家',
  `export_port` varchar(10) DEFAULT NULL COMMENT '出口口岸',
  `import_country` varchar(10) DEFAULT NULL COMMENT '进口国家',
  `import_port` varchar(10) DEFAULT NULL COMMENT '进口口岸',
  `customs_batch` varchar(30) DEFAULT NULL COMMENT '报关批次',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包号',
  `flight_no` varchar(30) DEFAULT NULL COMMENT '航班号',
  `main_number` varchar(30) DEFAULT NULL COMMENT '主提单号',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `formal_declare_count` int(10) DEFAULT NULL COMMENT '正式报关量',
  `cfs_clearance_count` int(10) DEFAULT NULL COMMENT 'CFS清关量',
  `ontime_clearance_count` int(10) DEFAULT NULL COMMENT '准时清关量',
  `ontime_clearance_actual_weight` double(17,3) DEFAULT NULL COMMENT '准时清关实际重量',
  `ontime_clearance_meterage_weight` double(17,3) DEFAULT NULL COMMENT '准时清关计费重量',
  `timeout_clearance_count` int(10) DEFAULT NULL COMMENT '超时清关量',
  `timeout_clearance_actual_weight` double(17,3) DEFAULT NULL COMMENT '超时清关实际重量',
  `timeout_clearance_meterage_weight` double(17,3) DEFAULT NULL COMMENT '超时清关计费重量',
  `warning_count` int(10) DEFAULT NULL COMMENT '预警量',
  `timeout_cleared_count` int(10) DEFAULT NULL COMMENT '超时已清关量',
  `timeout_no_clearance_count` int(10) DEFAULT NULL COMMENT '超时未清关量',
  `retention_count` int(10) DEFAULT NULL COMMENT '滞留量',
  `total_no_clearance_count` int(10) DEFAULT NULL COMMENT '累计未清关量',
  `total_no_clearance_actual_weight` double(17,3) DEFAULT NULL COMMENT '累计未清关实际重量',
  `total_no_clearance_meterage_weight` double(17,3) DEFAULT NULL COMMENT '累计未清关计费重量',
  `total_cleared_count` int(10) DEFAULT NULL COMMENT '累计已清关量',
  `same_day_cleared_count` int(10) DEFAULT NULL COMMENT '当天清关完成量',
  `avg_time_consuming` double(10,2) DEFAULT NULL COMMENT '平均耗时',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `server_ip` varchar(30) DEFAULT NULL COMMENT '服务器运行IP',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `arrival_count` int(10) DEFAULT NULL COMMENT '到件票数',
  PRIMARY KEY (`id`,`customs_clearance_batch_date`),
  KEY `idx_customs_clearance_batch_date` (`customs_clearance_batch_date`) USING BTREE,
  KEY `idx_export_country` (`export_country`) USING HASH,
  KEY `idx_export_port` (`export_port`) USING HASH,
  KEY `idx_import_country` (`import_country`) USING HASH,
  KEY `idx_import_port` (`import_port`) USING HASH,
  KEY `idx_customs_clearance_network_code` (`customs_clearance_network_code`) USING HASH,
  KEY `idx_customs_clearance_batch_code` (`customs_clearance_batch_code`) USING HASH,
  KEY `idx_customs_batch` (`customs_batch`) USING HASH,
  KEY `idx_source_country_code` (`source_country_code`) USING HASH,
  KEY `idx_source_dept_code` (`source_dept_code`) USING HASH,
  KEY `idx_source_area_code` (`source_area_code`) USING HASH,
  KEY `idx_source_city_code` (`source_city_code`) USING HASH,
  KEY `idx_source_network_code` (`source_network_code`) USING HASH,
  KEY `idx_dest_country_code` (`dest_country_code`) USING HASH,
  KEY `idx_dest_dept_code` (`dest_dept_code`) USING HASH,
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH,
  KEY `idx_dest_area_code` (`dest_area_code`) USING HASH,
  KEY `idx_dest_network_code` (`dest_network_code`) USING HASH,
  KEY `idx_customer_code` (`customer_code`) USING HASH,
  KEY `idx_main_number` (`main_number`) USING HASH,
  KEY `idx_unload_vehicle` (`unload_vehicle`) USING HASH,
  KEY `idx_sign_out_package_no` (`sign_out_package_no`) USING HASH,
  KEY `idx_customer_acct_no` (`customer_acct_no`) USING HASH,
  KEY `idx_flight_no` (`flight_no`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=2649 DEFAULT CHARSET=utf8 COMMENT='EX清关口岸网点监控汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(customs_clearance_batch_date)
(PARTITION p20190223 VALUES LESS THAN ('2019-02-23') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN ('2019-02-27') ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN ('2019-02-28') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190302 VALUES LESS THAN ('2019-03-02') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190306 VALUES LESS THAN ('2019-03-06') ENGINE = InnoDB,
 PARTITION p20190307 VALUES LESS THAN ('2019-03-07') ENGINE = InnoDB,
 PARTITION p20190308 VALUES LESS THAN ('2019-03-08') ENGINE = InnoDB,
 PARTITION p20190309 VALUES LESS THAN ('2019-03-09') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190313 VALUES LESS THAN ('2019-03-13') ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN ('2019-03-14') ENGINE = InnoDB,
 PARTITION p20190315 VALUES LESS THAN ('2019-03-15') ENGINE = InnoDB,
 PARTITION p20190316 VALUES LESS THAN ('2019-03-16') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190320 VALUES LESS THAN ('2019-03-20') ENGINE = InnoDB,
 PARTITION p20190321 VALUES LESS THAN ('2019-03-21') ENGINE = InnoDB,
 PARTITION p20190322 VALUES LESS THAN ('2019-03-22') ENGINE = InnoDB,
 PARTITION p20190323 VALUES LESS THAN ('2019-03-23') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190327 VALUES LESS THAN ('2019-03-27') ENGINE = InnoDB,
 PARTITION p20190328 VALUES LESS THAN ('2019-03-28') ENGINE = InnoDB,
 PARTITION p20190329 VALUES LESS THAN ('2019-03-29') ENGINE = InnoDB,
 PARTITION p20190330 VALUES LESS THAN ('2019-03-30') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190403 VALUES LESS THAN ('2019-04-03') ENGINE = InnoDB,
 PARTITION p20190404 VALUES LESS THAN ('2019-04-04') ENGINE = InnoDB,
 PARTITION p20190405 VALUES LESS THAN ('2019-04-05') ENGINE = InnoDB,
 PARTITION p20190406 VALUES LESS THAN ('2019-04-06') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190410 VALUES LESS THAN ('2019-04-10') ENGINE = InnoDB,
 PARTITION p20190411 VALUES LESS THAN ('2019-04-11') ENGINE = InnoDB,
 PARTITION p20190412 VALUES LESS THAN ('2019-04-12') ENGINE = InnoDB,
 PARTITION p20190413 VALUES LESS THAN ('2019-04-13') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190417 VALUES LESS THAN ('2019-04-17') ENGINE = InnoDB,
 PARTITION p20190418 VALUES LESS THAN ('2019-04-18') ENGINE = InnoDB,
 PARTITION p20190419 VALUES LESS THAN ('2019-04-19') ENGINE = InnoDB,
 PARTITION p20190420 VALUES LESS THAN ('2019-04-20') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190424 VALUES LESS THAN ('2019-04-24') ENGINE = InnoDB,
 PARTITION p20190425 VALUES LESS THAN ('2019-04-25') ENGINE = InnoDB,
 PARTITION p20190426 VALUES LESS THAN ('2019-04-26') ENGINE = InnoDB,
 PARTITION p20190427 VALUES LESS THAN ('2019-04-27') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190430 VALUES LESS THAN ('2019-04-30') ENGINE = InnoDB,
 PARTITION p20190501 VALUES LESS THAN ('2019-05-01') ENGINE = InnoDB,
 PARTITION p20190502 VALUES LESS THAN ('2019-05-02') ENGINE = InnoDB,
 PARTITION p20190503 VALUES LESS THAN ('2019-05-03') ENGINE = InnoDB,
 PARTITION p20190504 VALUES LESS THAN ('2019-05-04') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190507 VALUES LESS THAN ('2019-05-07') ENGINE = InnoDB,
 PARTITION p20190508 VALUES LESS THAN ('2019-05-08') ENGINE = InnoDB,
 PARTITION p20190509 VALUES LESS THAN ('2019-05-09') ENGINE = InnoDB,
 PARTITION p20190510 VALUES LESS THAN ('2019-05-10') ENGINE = InnoDB,
 PARTITION p20190511 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_delivery_detail` */

DROP TABLE IF EXISTS `ex_delivery_detail`;

CREATE TABLE `ex_delivery_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `delivery_shift_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '派件班次日期',
  `main_waybill_no` varchar(64) DEFAULT NULL COMMENT '运单号',
  `source_country` varchar(32) DEFAULT NULL COMMENT '原寄地国家',
  `source_dept` varchar(32) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(32) DEFAULT NULL COMMENT '原寄地地区',
  `source_city` varchar(32) DEFAULT NULL COMMENT '原寄地城市',
  `source_network` varchar(32) DEFAULT NULL COMMENT '原寄地网点',
  `dest_country` varchar(32) DEFAULT NULL COMMENT '目的地国家',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(64) DEFAULT NULL COMMENT '目的地地区',
  `dest_city` varchar(64) DEFAULT NULL COMMENT '目的地城市',
  `dest_network` varchar(32) DEFAULT NULL COMMENT '目的地网点。取80操作网点',
  `delivery_network_type` varchar(32) DEFAULT NULL COMMENT '派送网点分类',
  `delivery_network` varchar(32) DEFAULT NULL COMMENT '派送网点编码',
  `delivery_shift_code` varchar(64) DEFAULT NULL COMMENT '派件班次编码',
  `customer_code` varchar(64) DEFAULT NULL COMMENT '客户代码',
  `customer_acct_code` varchar(64) DEFAULT NULL COMMENT '付款客户卡号（月结卡号）',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `is_battery` varchar(5) DEFAULT NULL COMMENT '是否带电',
  `delivery_agent_name` varchar(64) DEFAULT NULL COMMENT '派件代理名称',
  `delivery_agent_code` varchar(64) DEFAULT NULL COMMENT '派件代理代码',
  `provider_waybill_no` varchar(100) DEFAULT NULL COMMENT '服务商单号',
  `sign_out_package_no` varchar(32) DEFAULT NULL COMMENT '签出包号',
  `consignment_name` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `cons_value` double(16,2) DEFAULT NULL COMMENT '声明价值',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `main_number` varchar(15) DEFAULT NULL COMMENT '主提单号',
  `customs_clearance_end_tm` datetime DEFAULT NULL COMMENT '清关完成时间',
  `first_handover_deadline` datetime DEFAULT NULL COMMENT '首次交接时效标准',
  `first_handover_tm` datetime DEFAULT NULL COMMENT '首次交接时间',
  `first_handover_warning_hours` varchar(32) DEFAULT NULL COMMENT '首次交接预警/超时（h）',
  `second_handover_deadline` datetime DEFAULT NULL COMMENT '第二次交接时效标准',
  `second_handover_tm` datetime DEFAULT NULL COMMENT '第二次交接时间',
  `second_handover_warning_hours` varchar(32) DEFAULT NULL COMMENT '第二次交接预警/超时（h）',
  `third_handover_deadline` datetime DEFAULT NULL COMMENT '第三次交接时效标准',
  `third_handover_tm` datetime DEFAULT NULL COMMENT '第三次交接时间',
  `third_handover_warning_hours` varchar(32) DEFAULT NULL COMMENT '第三次交接预警/超时（h）',
  `first_warning_deadline` datetime DEFAULT NULL COMMENT '首次交接预警时间',
  `second_warning_deadline` datetime DEFAULT NULL COMMENT '第二次交接预警时间',
  `third_warning_deadline` datetime DEFAULT NULL COMMENT '第三次交接预警时间',
  `delivery_deadline` datetime DEFAULT NULL COMMENT '派送时效标准',
  `warning_deadline` datetime DEFAULT NULL COMMENT '预警时效标准',
  `delivery_time` datetime DEFAULT NULL COMMENT '派送时间',
  `delivery_status` int(1) DEFAULT '1' COMMENT '派送环节超时状态。0：正常准点，1:无节点未超时，2：有节点超时，3：无节点超时',
  `warning_status` int(11) DEFAULT '0' COMMENT '预警状态： 0：正常  1：预警  2：超时',
  `warning_minutes` int(11) DEFAULT NULL COMMENT '预警/超时 分钟数',
  `cost_hour` int(11) DEFAULT NULL COMMENT '耗时',
  `delivery_timeout_warning_hours` varchar(32) DEFAULT NULL COMMENT '派送预警/超时（h）',
  `delivery_timeout_warning_days` varchar(32) DEFAULT NULL COMMENT '派送预警/超时（d）',
  `delivery_consuming_time` datetime DEFAULT NULL COMMENT '派送环节耗时（h）',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_opcode` varchar(32) DEFAULT NULL COMMENT '滞留巴枪码',
  `retention_reason_code` varchar(64) DEFAULT NULL COMMENT '滞留原因代码',
  `retention_length` varchar(32) DEFAULT NULL COMMENT '滞留时长',
  `server_ip` varchar(32) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(255) DEFAULT NULL COMMENT '错误原因备注',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `retention_time_str` varchar(61) DEFAULT NULL COMMENT '滞留时间',
  `first_track_upload_time` datetime DEFAULT NULL COMMENT '首次交接路由上传时间',
  `second_track_upload_time` datetime DEFAULT NULL COMMENT '第二次交接路由上传时间',
  `third_track_upload_time` datetime DEFAULT NULL COMMENT '第三次交接路由上传时间',
  PRIMARY KEY (`id`,`delivery_shift_date`),
  KEY `idx_delivery_shift_date` (`delivery_shift_date`) USING BTREE,
  KEY `idx_delivery_network` (`delivery_network`) USING BTREE,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING BTREE,
  KEY `idx_source_country` (`source_country`) USING BTREE,
  KEY `idx_source_city` (`source_city`) USING BTREE,
  KEY `idx_dest_country` (`dest_country`) USING BTREE,
  KEY `idx_dest_city` (`dest_city`) USING BTREE,
  KEY `idx_customer_acct_code` (`customer_acct_code`) USING BTREE,
  KEY `idx_sign_out_package_no` (`sign_out_package_no`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=85 DEFAULT CHARSET=utf8 COMMENT='EX派件监控明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(delivery_shift_date)
(PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_delivery_monitor` */

DROP TABLE IF EXISTS `ex_delivery_monitor`;

CREATE TABLE `ex_delivery_monitor` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `delivery_shift_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '派件班次日期',
  `delivery_network_type` varchar(32) DEFAULT NULL COMMENT '派送网点分类',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `customer_code` varchar(64) DEFAULT NULL COMMENT '客户代码',
  `customer_acct_code` varchar(64) DEFAULT NULL COMMENT '付款客户卡号（月结卡号）',
  `is_battery` varchar(5) DEFAULT NULL COMMENT '是否带电',
  `sign_out_package_no` varchar(32) DEFAULT NULL COMMENT '签出包号',
  `main_number` varchar(15) DEFAULT NULL COMMENT '主提单号',
  `delivery_shift_code` varchar(64) DEFAULT NULL COMMENT '派件班次编码',
  `delivery_agent_name` varchar(64) DEFAULT NULL COMMENT '派件代理名称',
  `delivery_agent_code` varchar(64) DEFAULT NULL COMMENT '派件代理代码',
  `delivery_network` varchar(32) DEFAULT NULL COMMENT '派送网点编码',
  `first_handover_count` int(11) DEFAULT NULL COMMENT '首次交接票数',
  `first_handover_timeout_count` int(11) DEFAULT NULL COMMENT '首次交接超时票数',
  `second_handover_count` int(11) DEFAULT NULL COMMENT '第二次交接票数',
  `second_handover_timeout_count` int(11) DEFAULT NULL COMMENT '第二次交接票数',
  `third_handover_count` int(11) DEFAULT NULL COMMENT '第三次交接票数',
  `third_handover_timeout_count` int(11) DEFAULT NULL COMMENT '第三次交接超时票数',
  `cons_qty` int(11) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `delivery_in_time_count` int(11) DEFAULT NULL COMMENT '准点派送数量',
  `delivery_in_time_real_weight_qty` double(17,3) DEFAULT NULL COMMENT '准点派送实际重量',
  `delivery_in_time_meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '准点派送计费重量',
  `delivery_timeout_count` int(11) DEFAULT NULL COMMENT '超时派送数量',
  `delivery_timeout_real_weight_qty` double(17,3) DEFAULT NULL COMMENT '超时派送实际重量',
  `warning_count` int(11) DEFAULT NULL COMMENT '预警量',
  `timeout_delivery_count` int(11) DEFAULT NULL COMMENT '超时已派送',
  `timeout_not_delivery_count` int(11) DEFAULT NULL COMMENT '超时未派送',
  `retention_count` int(11) DEFAULT NULL COMMENT '滞留量',
  `not_delivery_count` int(11) DEFAULT NULL COMMENT '累计未派送',
  `not_delivery_real_weight_qty` double(17,3) DEFAULT NULL COMMENT '累计未派送实际重量',
  `not_delivery_meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '累计未派送计费重量',
  `delivery_count` int(11) DEFAULT NULL COMMENT '累计已派送',
  `avg_cost_hours` double(17,3) DEFAULT NULL COMMENT '平均耗时',
  `source_country` varchar(32) DEFAULT NULL COMMENT '原寄地国家',
  `source_dept` varchar(32) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(32) DEFAULT NULL COMMENT '原寄地地区',
  `source_city` varchar(32) DEFAULT NULL COMMENT '原寄地城市',
  `source_network` varchar(32) DEFAULT NULL COMMENT '原寄地网点',
  `dest_country` varchar(32) DEFAULT NULL COMMENT '目的地国家',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(64) DEFAULT NULL COMMENT '目的地地区',
  `dest_city` varchar(64) DEFAULT NULL COMMENT '目的地城市',
  `dest_network` varchar(32) DEFAULT NULL COMMENT '目的地网点。取80操作网点',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`,`delivery_shift_date`),
  KEY `idx_delivery_shift_date` (`delivery_shift_date`) USING BTREE,
  KEY `idx_delivery_network` (`delivery_network`) USING BTREE,
  KEY `idx_source_country` (`source_country`) USING BTREE,
  KEY `idx_source_city` (`source_city`) USING BTREE,
  KEY `idx_dest_country` (`dest_country`) USING BTREE,
  KEY `idx_dest_city` (`dest_city`) USING BTREE,
  KEY `idx_customer_acct_code` (`customer_acct_code`) USING BTREE,
  KEY `idx_sign_out_package_no` (`sign_out_package_no`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=28541 DEFAULT CHARSET=utf8 COMMENT='EX派件监控统计表'
/*!50500 PARTITION BY RANGE  COLUMNS(delivery_shift_date)
(PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-13') ENGINE = InnoDB,
 PARTITION p20190214 VALUES LESS THAN ('2019-02-14') ENGINE = InnoDB,
 PARTITION p20190215 VALUES LESS THAN ('2019-02-15') ENGINE = InnoDB,
 PARTITION p20190216 VALUES LESS THAN ('2019-02-16') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190219 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190220 VALUES LESS THAN ('2019-02-20') ENGINE = InnoDB,
 PARTITION p20190221 VALUES LESS THAN ('2019-02-21') ENGINE = InnoDB,
 PARTITION p20190222 VALUES LESS THAN ('2019-02-22') ENGINE = InnoDB,
 PARTITION p20190223 VALUES LESS THAN ('2019-02-23') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN ('2019-02-27') ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN ('2019-02-28') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190302 VALUES LESS THAN ('2019-03-02') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190306 VALUES LESS THAN ('2019-03-06') ENGINE = InnoDB,
 PARTITION p20190307 VALUES LESS THAN ('2019-03-07') ENGINE = InnoDB,
 PARTITION p20190308 VALUES LESS THAN ('2019-03-08') ENGINE = InnoDB,
 PARTITION p20190309 VALUES LESS THAN ('2019-03-09') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190313 VALUES LESS THAN ('2019-03-13') ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN ('2019-03-14') ENGINE = InnoDB,
 PARTITION p20190315 VALUES LESS THAN ('2019-03-15') ENGINE = InnoDB,
 PARTITION p20190316 VALUES LESS THAN ('2019-03-16') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190320 VALUES LESS THAN ('2019-03-20') ENGINE = InnoDB,
 PARTITION p20190321 VALUES LESS THAN ('2019-03-21') ENGINE = InnoDB,
 PARTITION p20190322 VALUES LESS THAN ('2019-03-22') ENGINE = InnoDB,
 PARTITION p20190323 VALUES LESS THAN ('2019-03-23') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190327 VALUES LESS THAN ('2019-03-27') ENGINE = InnoDB,
 PARTITION p20190328 VALUES LESS THAN ('2019-03-28') ENGINE = InnoDB,
 PARTITION p20190329 VALUES LESS THAN ('2019-03-29') ENGINE = InnoDB,
 PARTITION p20190330 VALUES LESS THAN ('2019-03-30') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190403 VALUES LESS THAN ('2019-04-03') ENGINE = InnoDB,
 PARTITION p20190404 VALUES LESS THAN ('2019-04-04') ENGINE = InnoDB,
 PARTITION p20190405 VALUES LESS THAN ('2019-04-05') ENGINE = InnoDB,
 PARTITION p20190406 VALUES LESS THAN ('2019-04-06') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190410 VALUES LESS THAN ('2019-04-10') ENGINE = InnoDB,
 PARTITION p20190411 VALUES LESS THAN ('2019-04-11') ENGINE = InnoDB,
 PARTITION p20190412 VALUES LESS THAN ('2019-04-12') ENGINE = InnoDB,
 PARTITION p20190413 VALUES LESS THAN ('2019-04-13') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190417 VALUES LESS THAN ('2019-04-17') ENGINE = InnoDB,
 PARTITION p20190418 VALUES LESS THAN ('2019-04-18') ENGINE = InnoDB,
 PARTITION p20190419 VALUES LESS THAN ('2019-04-19') ENGINE = InnoDB,
 PARTITION p20190420 VALUES LESS THAN ('2019-04-20') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190424 VALUES LESS THAN ('2019-04-24') ENGINE = InnoDB,
 PARTITION p20190425 VALUES LESS THAN ('2019-04-25') ENGINE = InnoDB,
 PARTITION p20190426 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_delivery_net_config` */

DROP TABLE IF EXISTS `ex_delivery_net_config`;

CREATE TABLE `ex_delivery_net_config` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `product_code` varchar(10) NOT NULL COMMENT '产品类型（EXD,EXP,EXW）',
  `first_agent_code` varchar(50) NOT NULL COMMENT '首次交接代理名称',
  `first_handover_route` varchar(50) DEFAULT NULL COMMENT '首次交接路由',
  `first_warning_time` double(5,2) DEFAULT NULL COMMENT '首次预警/H',
  `first_aging` double(5,2) DEFAULT NULL COMMENT '首次时效/H',
  `second_agent_code` varchar(50) DEFAULT NULL COMMENT '第二次交接代理名称',
  `second_handover_route` varchar(50) DEFAULT NULL COMMENT '第二次交接路由',
  `second_warning_time` double(5,2) DEFAULT NULL COMMENT '第二次预警/H',
  `second_aging` double(5,2) DEFAULT NULL COMMENT '第二次时效/H',
  `third_agent_code` varchar(50) DEFAULT NULL COMMENT '第三次交接代理名称',
  `third_handover_route` varchar(50) DEFAULT NULL COMMENT '第三次交接路由',
  `third_warning_time` double(5,2) DEFAULT NULL COMMENT '第三次预警/H',
  `third_aging` double(5,2) DEFAULT NULL COMMENT '第三次时效/H',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_first_agent_code` (`first_agent_code`) USING HASH,
  KEY `idx_second_agent_code` (`second_agent_code`) USING BTREE,
  KEY `idx_third_agent_code` (`third_agent_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COMMENT='EX派送网点监控配置表';

/*Table structure for table `ex_handover_monitor` */

DROP TABLE IF EXISTS `ex_handover_monitor`;

CREATE TABLE `ex_handover_monitor` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '班次日期',
  `link_type` varchar(10) DEFAULT NULL COMMENT '环节分类',
  `product_type` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_card_number` varchar(50) DEFAULT NULL COMMENT '月结卡号',
  `handover_mark_number` varchar(30) DEFAULT NULL COMMENT '交接车标',
  `package_no` varchar(30) DEFAULT NULL COMMENT '签出包号',
  `handover_shift` varchar(32) DEFAULT NULL COMMENT '交接班次',
  `handover_send_network` varchar(25) DEFAULT NULL COMMENT '发出网点',
  `handover_arrive_network` varchar(25) DEFAULT NULL COMMENT '到达网点',
  `import_dept_code` varchar(30) DEFAULT NULL COMMENT '进口口岸',
  `mawb` varchar(33) DEFAULT NULL COMMENT '主提单号',
  `flightno` varchar(30) DEFAULT NULL COMMENT '车牌/航班号',
  `handover_tickets_number` bigint(10) DEFAULT NULL COMMENT '清关完成票数',
  `handover_count` bigint(10) DEFAULT NULL COMMENT '总票数',
  `cons_qty` bigint(10) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `ontime_handover_weight` double(17,3) DEFAULT NULL COMMENT '准点交接量',
  `ontime_handover_real_weight` double(17,3) DEFAULT NULL COMMENT '准点交接实际重量',
  `overtime_handover_weight` double(17,3) DEFAULT NULL COMMENT '超时交接总量',
  `overtime_handover_real_weight` double(17,3) DEFAULT NULL COMMENT '超时交接实际重量',
  `warning_weight` double(17,3) DEFAULT NULL COMMENT '预警量',
  `overtime_have_handover_count` bigint(11) DEFAULT NULL COMMENT '超时已交接',
  `overtime_not_handover_count` bigint(11) DEFAULT NULL COMMENT '超时未交接',
  `retention_volume` double(17,3) DEFAULT NULL COMMENT '滞留量',
  `all_not_handover_count` bigint(11) DEFAULT NULL COMMENT '累计未交接',
  `all_not_handover_real_weight` double(17,3) DEFAULT NULL COMMENT '累计未交接实际重量',
  `all_have_handover_count` bigint(11) DEFAULT NULL COMMENT '累计已交接',
  `today_have_handover_count` bigint(11) DEFAULT NULL COMMENT '当天已交接',
  `average_cost_time` double(17,3) DEFAULT NULL COMMENT '平均耗时',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `source_hq_code` varchar(10) DEFAULT NULL COMMENT '原寄地经营本部',
  `source_area_code` varchar(10) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_dept_code` varchar(10) DEFAULT NULL COMMENT '原寄地网点代码',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `dest_dept_code` varchar(10) DEFAULT NULL COMMENT '目的地网点代码',
  `dest_area_code` varchar(10) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_hq_code` varchar(10) DEFAULT NULL COMMENT '目的地经营本部',
  `insert_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `batch_complete_weight` double(17,3) DEFAULT NULL COMMENT '累计已交接总量',
  `sum_cost_time` double(17,3) DEFAULT NULL COMMENT '总耗时',
  PRIMARY KEY (`id`,`batch_date`),
  UNIQUE KEY `unique_key_01` (`product_type`,`customer_code`,`customer_card_number`,`package_no`,`handover_shift`,`handover_send_network`,`batch_date`,`import_dept_code`,`mawb`,`dest_city_code`,`send_city`,`flightno`,`handover_arrive_network`) USING BTREE,
  KEY `idx_batch_date` (`batch_date`) USING BTREE,
  KEY `idx_send_country_abb` (`send_country_abb`) USING BTREE,
  KEY `idx_flightno` (`flightno`) USING BTREE,
  KEY `idx_mawb` (`mawb`) USING BTREE,
  KEY `idx_customer_card_number` (`customer_card_number`) USING BTREE,
  KEY `idx_customer_code` (`customer_code`) USING BTREE,
  KEY `idx_import_dept_code` (`import_dept_code`) USING BTREE,
  KEY `idx_handover_shift` (`handover_shift`) USING BTREE,
  KEY `idx_package_no` (`package_no`) USING BTREE,
  KEY `idx_send_area` (`source_area_code`) USING BTREE,
  KEY `idx_send_city` (`send_city`) USING BTREE,
  KEY `idx_send_network` (`source_dept_code`) USING BTREE,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING BTREE,
  KEY `idx_dest_dept_code` (`dest_dept_code`) USING BTREE,
  KEY `idx_dest_city_code` (`dest_city_code`) USING BTREE,
  KEY `idx_dest_area_code` (`dest_area_code`) USING BTREE,
  KEY `idx_product_type` (`product_type`) USING BTREE,
  KEY `idx_handover_send_network` (`handover_send_network`) USING BTREE,
  KEY `idx_arrive_network` (`handover_arrive_network`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=193 DEFAULT CHARSET=utf8 COMMENT='EX交接监控'
/*!50500 PARTITION BY RANGE  COLUMNS(batch_date)
(PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-13') ENGINE = InnoDB,
 PARTITION p20190214 VALUES LESS THAN ('2019-02-14') ENGINE = InnoDB,
 PARTITION p20190215 VALUES LESS THAN ('2019-02-15') ENGINE = InnoDB,
 PARTITION p20190216 VALUES LESS THAN ('2019-02-16') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190219 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190220 VALUES LESS THAN ('2019-02-20') ENGINE = InnoDB,
 PARTITION p20190221 VALUES LESS THAN ('2019-02-21') ENGINE = InnoDB,
 PARTITION p20190222 VALUES LESS THAN ('2019-02-22') ENGINE = InnoDB,
 PARTITION p20190223 VALUES LESS THAN ('2019-02-23') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN ('2019-02-27') ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN ('2019-02-28') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190302 VALUES LESS THAN ('2019-03-02') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190306 VALUES LESS THAN ('2019-03-06') ENGINE = InnoDB,
 PARTITION p20190307 VALUES LESS THAN ('2019-03-07') ENGINE = InnoDB,
 PARTITION p20190308 VALUES LESS THAN ('2019-03-08') ENGINE = InnoDB,
 PARTITION p20190309 VALUES LESS THAN ('2019-03-09') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190313 VALUES LESS THAN ('2019-03-13') ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN ('2019-03-14') ENGINE = InnoDB,
 PARTITION p20190315 VALUES LESS THAN ('2019-03-15') ENGINE = InnoDB,
 PARTITION p20190316 VALUES LESS THAN ('2019-03-16') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190320 VALUES LESS THAN ('2019-03-20') ENGINE = InnoDB,
 PARTITION p20190321 VALUES LESS THAN ('2019-03-21') ENGINE = InnoDB,
 PARTITION p20190322 VALUES LESS THAN ('2019-03-22') ENGINE = InnoDB,
 PARTITION p20190323 VALUES LESS THAN ('2019-03-23') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190327 VALUES LESS THAN ('2019-03-27') ENGINE = InnoDB,
 PARTITION p20190328 VALUES LESS THAN ('2019-03-28') ENGINE = InnoDB,
 PARTITION p20190329 VALUES LESS THAN ('2019-03-29') ENGINE = InnoDB,
 PARTITION p20190330 VALUES LESS THAN ('2019-03-30') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190403 VALUES LESS THAN ('2019-04-03') ENGINE = InnoDB,
 PARTITION p20190404 VALUES LESS THAN ('2019-04-04') ENGINE = InnoDB,
 PARTITION p20190405 VALUES LESS THAN ('2019-04-05') ENGINE = InnoDB,
 PARTITION p20190406 VALUES LESS THAN ('2019-04-06') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190410 VALUES LESS THAN ('2019-04-10') ENGINE = InnoDB,
 PARTITION p20190411 VALUES LESS THAN ('2019-04-11') ENGINE = InnoDB,
 PARTITION p20190412 VALUES LESS THAN ('2019-04-12') ENGINE = InnoDB,
 PARTITION p20190413 VALUES LESS THAN ('2019-04-13') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190417 VALUES LESS THAN ('2019-04-17') ENGINE = InnoDB,
 PARTITION p20190418 VALUES LESS THAN ('2019-04-18') ENGINE = InnoDB,
 PARTITION p20190419 VALUES LESS THAN ('2019-04-19') ENGINE = InnoDB,
 PARTITION p20190420 VALUES LESS THAN ('2019-04-20') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190424 VALUES LESS THAN ('2019-04-24') ENGINE = InnoDB,
 PARTITION p20190425 VALUES LESS THAN ('2019-04-25') ENGINE = InnoDB,
 PARTITION p20190426 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_handover_monitor_detail` */

DROP TABLE IF EXISTS `ex_handover_monitor_detail`;

CREATE TABLE `ex_handover_monitor_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '班次日期',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `link_type` varchar(20) DEFAULT NULL COMMENT '环节分类',
  `product_type` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `customer_code` varchar(50) DEFAULT NULL COMMENT '客户代码',
  `customer_card_number` varchar(50) DEFAULT NULL COMMENT '月结卡号',
  `is_electric` varchar(1) DEFAULT NULL COMMENT '是否带电,0:不带电，1：带电',
  `handover_shift` varchar(32) DEFAULT NULL COMMENT '交接班次',
  `delivery_agent_name` varchar(50) DEFAULT NULL COMMENT '派件代理名称',
  `delivery_agent_code` varchar(50) DEFAULT NULL COMMENT '派件代理代码',
  `provider_waybill_no` varchar(50) DEFAULT NULL COMMENT '服务商单号',
  `handover_send_network` varchar(25) DEFAULT NULL COMMENT '发出网点',
  `send_mark_number` varchar(50) DEFAULT NULL COMMENT '发出车标',
  `pick_up_batch` varchar(50) DEFAULT NULL COMMENT '班次编码',
  `handover_arrive_network` varchar(25) DEFAULT NULL COMMENT '到达网点',
  `import_dept_code` varchar(30) DEFAULT NULL COMMENT '进口口岸',
  `cons_qty` bigint(10) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `consignment_name` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `cons_value` double(16,2) DEFAULT NULL COMMENT '价值',
  `package_no` varchar(50) DEFAULT NULL COMMENT '签出包号',
  `mawb` varchar(33) DEFAULT NULL COMMENT '主提单号',
  `flightno` varchar(50) DEFAULT NULL COMMENT '车牌/航班号',
  `handle_time` datetime DEFAULT NULL COMMENT '清关完成时效',
  `handover_aging_standard` datetime DEFAULT NULL COMMENT '交接时效标准',
  `handover_time` datetime DEFAULT NULL COMMENT '交接时间',
  `handover_consumed_hours` double(17,1) DEFAULT NULL COMMENT '耗时',
  `handover_timeout_warning` varchar(32) DEFAULT NULL COMMENT '交接超时预警(h/mm)',
  `handover_overtime` bigint(4) DEFAULT NULL COMMENT '交接超时预警（d）',
  `is_someday_handover` bigint(1) DEFAULT NULL COMMENT '是否当天交接：1：是，0：否',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `source_hq_code` varchar(10) DEFAULT NULL COMMENT '原寄地经营本部',
  `source_area_code` varchar(10) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_dept_code` varchar(10) DEFAULT NULL COMMENT '原寄地网点代码',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `dest_dept_code` varchar(10) DEFAULT NULL COMMENT '目的地网点代码（一般为null）',
  `dest_area_code` varchar(10) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_hq_code` varchar(10) DEFAULT NULL COMMENT '目的地经营本部',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `stuck_bar` varchar(100) DEFAULT NULL COMMENT '滞留巴枪',
  `insert_time` datetime DEFAULT '0000-00-00 00:00:00' COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `is_complete` bigint(1) DEFAULT '0' COMMENT '是否交接',
  `complete_time` date DEFAULT '0000-00-00' COMMENT '交接完成日期',
  `warning_long_time` datetime DEFAULT NULL COMMENT '预警时长',
  `router_end_time` datetime DEFAULT NULL COMMENT '路由结束时间',
  `router_begin_time` datetime DEFAULT NULL COMMENT '路由开始时间',
  `exception_type` bigint(1) DEFAULT '0' COMMENT '异常类型',
  `residence_time` double(17,1) DEFAULT NULL COMMENT '滞留时长',
  PRIMARY KEY (`id`,`batch_date`),
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING BTREE,
  KEY `idx_flightno` (`flightno`) USING BTREE,
  KEY `idx_mawb` (`mawb`) USING BTREE,
  KEY `idx_customer_card_number` (`customer_card_number`) USING BTREE,
  KEY `idx_customer_code` (`customer_code`) USING BTREE,
  KEY `idx_import_dept_code` (`import_dept_code`) USING BTREE,
  KEY `idx_handover_shift` (`handover_shift`) USING BTREE,
  KEY `idx_package_no` (`package_no`) USING BTREE,
  KEY `idx_batch_date` (`batch_date`) USING BTREE,
  KEY `idx_send_country_abb` (`send_country_abb`) USING BTREE,
  KEY `idx_send_area` (`source_area_code`) USING BTREE,
  KEY `idx_send_city` (`send_city`) USING BTREE,
  KEY `idx_send_network` (`source_dept_code`) USING BTREE,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING BTREE,
  KEY `idx_dest_city_code` (`dest_city_code`) USING BTREE,
  KEY `idx_dest_area_code` (`dest_area_code`) USING BTREE,
  KEY `idx_dest_dept_code` (`dest_dept_code`) USING BTREE,
  KEY `idx_product_type` (`product_type`) USING BTREE,
  KEY `idx_handover_time` (`handover_time`) USING BTREE,
  KEY `idx_handover_send_network` (`handover_send_network`) USING BTREE,
  KEY `idx_handover_arrive_network` (`handover_arrive_network`) USING BTREE,
  KEY `idx_is_someday_handover` (`is_someday_handover`) USING BTREE,
  KEY `group_by_column` (`batch_date`,`product_type`,`customer_code`,`customer_card_number`,`package_no`,`handover_shift`,`handover_arrive_network`,`handover_send_network`,`import_dept_code`,`mawb`,`flightno`,`dest_city_code`,`send_city`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=96 DEFAULT CHARSET=utf8 COMMENT='EX交接监控明细'
/*!50500 PARTITION BY RANGE  COLUMNS(batch_date)
(PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190115 VALUES LESS THAN ('2019-01-15') ENGINE = InnoDB,
 PARTITION p20190116 VALUES LESS THAN ('2019-01-16') ENGINE = InnoDB,
 PARTITION p20190117 VALUES LESS THAN ('2019-01-17') ENGINE = InnoDB,
 PARTITION p20190118 VALUES LESS THAN ('2019-01-18') ENGINE = InnoDB,
 PARTITION p20190119 VALUES LESS THAN ('2019-01-19') ENGINE = InnoDB,
 PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190122 VALUES LESS THAN ('2019-01-22') ENGINE = InnoDB,
 PARTITION p20190123 VALUES LESS THAN ('2019-01-23') ENGINE = InnoDB,
 PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190430 VALUES LESS THAN ('2019-04-30') ENGINE = InnoDB,
 PARTITION p20190507 VALUES LESS THAN ('2019-05-07') ENGINE = InnoDB,
 PARTITION p20190514 VALUES LESS THAN ('2019-05-14') ENGINE = InnoDB,
 PARTITION p20190521 VALUES LESS THAN ('2019-05-21') ENGINE = InnoDB,
 PARTITION p20190528 VALUES LESS THAN ('2019-05-28') ENGINE = InnoDB,
 PARTITION p20190604 VALUES LESS THAN ('2019-06-04') ENGINE = InnoDB,
 PARTITION p20190611 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_link_shifts_config` */

DROP TABLE IF EXISTS `ex_link_shifts_config`;

CREATE TABLE `ex_link_shifts_config` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `shifts_code` varchar(100) DEFAULT NULL COMMENT '班次编码',
  `product_type` varchar(30) DEFAULT NULL COMMENT '产品类型',
  `start_place_type` varchar(30) DEFAULT NULL COMMENT '起始地类型-国家,地区,城市,网点',
  `start_place` varchar(50) DEFAULT NULL COMMENT '起始地',
  `start_country` varchar(10) DEFAULT NULL COMMENT '开始地国家',
  `end_place_type` varchar(30) DEFAULT NULL COMMENT '结束地类型',
  `end_place` varchar(50) DEFAULT NULL COMMENT '结束地',
  `end_country` varchar(10) DEFAULT NULL COMMENT '结束地国家',
  `end_chain_place` varchar(50) DEFAULT NULL COMMENT '结束地串点',
  `is_electric` char(1) DEFAULT NULL COMMENT '是否带电 Y:是带电,N:没有带电',
  `prescribed_start_time` varchar(10) DEFAULT NULL COMMENT '规定开始时间',
  `interception_time` varchar(30) DEFAULT NULL COMMENT '截单时间',
  `latest_end_time` varchar(30) DEFAULT NULL COMMENT '最晚结束时间',
  `warning_time` varchar(30) DEFAULT NULL COMMENT '预警时间',
  `link_type` varchar(50) DEFAULT NULL COMMENT '环节类型:保存环节code描述',
  `work_day` varchar(10) DEFAULT NULL COMMENT '适用工作日:1表示周一,2表示周二...',
  `sync_data` char(1) DEFAULT 'N' COMMENT '是否是地区同步数据Y:是,N:否',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `import_port` varchar(10) DEFAULT NULL COMMENT '进口口岸',
  PRIMARY KEY (`id`),
  KEY `idx_sync_data` (`sync_data`) USING HASH,
  KEY `idx_start_place` (`start_place`) USING BTREE,
  KEY `idx_end_place` (`end_place`) USING BTREE,
  KEY `idx_link_type` (`link_type`) USING BTREE,
  KEY `idx_work_day` (`work_day`) USING BTREE,
  KEY `idx_product_electric` (`product_type`,`is_electric`)
) ENGINE=InnoDB AUTO_INCREMENT=150787 DEFAULT CHARSET=utf8mb4 COMMENT='环节班次配置表';

/*Table structure for table `ex_link_shifts_config_area` */

DROP TABLE IF EXISTS `ex_link_shifts_config_area`;

CREATE TABLE `ex_link_shifts_config_area` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `shifts_code` varchar(100) DEFAULT NULL COMMENT '班次编码',
  `product_type` varchar(30) DEFAULT NULL COMMENT '产品类型',
  `start_place_type` varchar(30) DEFAULT NULL COMMENT '起始地类型-国家,地区,城市,网点',
  `start_place` varchar(50) DEFAULT NULL COMMENT '起始地',
  `start_country` varchar(10) DEFAULT NULL COMMENT '开始地国家',
  `end_place_type` varchar(30) DEFAULT NULL COMMENT '结束地类型',
  `end_place` varchar(50) DEFAULT NULL COMMENT '结束地',
  `end_country` varchar(10) DEFAULT NULL COMMENT '结束地国家',
  `end_chain_place` varchar(50) DEFAULT NULL COMMENT '结束地串点',
  `is_electric` char(1) DEFAULT NULL COMMENT '是否带电 Y:是带电,N:没有带电',
  `prescribed_start_time` varchar(10) DEFAULT NULL COMMENT '规定开始时间',
  `interception_time` varchar(30) DEFAULT NULL COMMENT '截单时间',
  `latest_end_time` varchar(30) DEFAULT NULL COMMENT '最晚结束时间',
  `warning_time` varchar(30) DEFAULT NULL COMMENT '预警时间',
  `link_type` varchar(50) DEFAULT NULL COMMENT '环节类型:保存环节cn描述',
  `work_day` varchar(10) DEFAULT NULL COMMENT '适用工作日:1表示周一,2表示周二...',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `import_port` varchar(10) DEFAULT NULL COMMENT '进口口岸',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_unique` (`product_type`,`start_place`,`end_place`,`is_electric`,`prescribed_start_time`,`link_type`,`work_day`) USING BTREE,
  KEY `idx_work_day` (`work_day`) USING BTREE,
  KEY `idx_start_place` (`start_place`) USING BTREE,
  KEY `idx_product_type` (`product_type`) USING BTREE,
  KEY `idx_link_type` (`link_type`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=240 DEFAULT CHARSET=utf8mb4 COMMENT='环节班次配置表地区表';

/*Table structure for table `ex_net_and_link_config` */

DROP TABLE IF EXISTS `ex_net_and_link_config`;

CREATE TABLE `ex_net_and_link_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `one_level_code` varchar(50) DEFAULT NULL COMMENT '一级分类代码',
  `two_level_code` varchar(50) DEFAULT NULL COMMENT '二级分类代码',
  `begin_router` varchar(100) DEFAULT NULL COMMENT '开始路由',
  `end_router` varchar(100) DEFAULT NULL COMMENT '结束路由',
  `custom_begin` varchar(100) DEFAULT NULL COMMENT '定制开始',
  `product_type` varchar(5) DEFAULT NULL COMMENT '产品类型',
  `custom_end` varchar(100) DEFAULT NULL COMMENT '定制结束',
  `stuck_bar` varchar(100) DEFAULT NULL COMMENT '滞留巴枪',
  `pre_warn_hour` double(11,2) DEFAULT NULL COMMENT '提前预警量（单位 hour）',
  `get_pack_flag` varchar(5) DEFAULT NULL COMMENT '是否获取包号 N 否 Y 是',
  `get_main_number` varchar(5) DEFAULT NULL COMMENT '是否获取主题单号  N 否 Y 是',
  `get_export_logo` varchar(5) DEFAULT NULL COMMENT '是否获取出口车标  N 否 Y 是',
  `get_cus_batches` varchar(5) DEFAULT NULL COMMENT '是否获取报关批次  N 否 Y 是',
  `get_bms_abnormal` varchar(5) DEFAULT NULL COMMENT '是否获取bms异常  N 否 Y 是',
  `get_mixed_pack_label` varchar(5) DEFAULT NULL COMMENT '是否获取混包标识  N 否 Y 是',
  `valid` varchar(5) DEFAULT NULL COMMENT '是否有效  N 否 Y 是',
  `update_user` varchar(50) DEFAULT NULL COMMENT '更新人',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  KEY `index_one_level_code` (`one_level_code`) USING HASH,
  KEY `index_two_level_code` (`two_level_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=83 DEFAULT CHARSET=utf8mb4 COMMENT='网点和环节配置';

/*Table structure for table `ex_network_batch_config` */

DROP TABLE IF EXISTS `ex_network_batch_config`;

CREATE TABLE `ex_network_batch_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `bacth_number` varchar(100) DEFAULT NULL COMMENT '班次编号',
  `operat_network_type` varchar(100) DEFAULT NULL COMMENT '操作网点类型',
  `operat_area` varchar(50) DEFAULT NULL COMMENT '操作地区',
  `operat_network` varchar(50) DEFAULT NULL COMMENT '操作网点',
  `skewer_network` varchar(50) DEFAULT NULL COMMENT '串点网点',
  `network_type` varchar(100) DEFAULT NULL COMMENT '网点分类',
  `product_code` varchar(50) DEFAULT NULL COMMENT '产品类型',
  `start_time` varchar(30) DEFAULT NULL COMMENT '规定开始时间',
  `end_time` varchar(30) DEFAULT NULL COMMENT '规定结束时间',
  `latast_arrival_time` varchar(30) DEFAULT NULL COMMENT '最晚到达时间',
  `work_day` varchar(30) DEFAULT NULL COMMENT '适用工作日',
  `warning_time` double(11,2) DEFAULT NULL COMMENT '预警量（单位 hour）',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  KEY `idx_bacth_number` (`bacth_number`) USING HASH,
  KEY `idx_skewer_net` (`skewer_network`) USING HASH,
  KEY `skewer_network` (`skewer_network`,`network_type`),
  KEY `operat_network` (`operat_network`,`network_type`,`start_time`,`work_day`) USING BTREE,
  KEY `idx_opertnetWork` (`bacth_number`,`operat_network`,`network_type`,`product_code`,`work_day`) USING BTREE,
  KEY `idx_producecode` (`product_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=381406 DEFAULT CHARSET=utf8 COMMENT='EX网点班次配置';

/*Table structure for table `ex_one_level_config` */

DROP TABLE IF EXISTS `ex_one_level_config`;

CREATE TABLE `ex_one_level_config` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `one_level_code` varchar(50) DEFAULT NULL COMMENT '一级分类代码',
  `cn_describe` varchar(50) DEFAULT NULL COMMENT '中文描述',
  `en_describe` varchar(100) DEFAULT NULL COMMENT '英文描述',
  `update_user` varchar(50) DEFAULT NULL COMMENT '修改用户',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '添加时间',
  PRIMARY KEY (`id`),
  KEY `index_one_level_code` (`one_level_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8mb4 COMMENT='一级分类配置';

/*Table structure for table `ex_op2_port_link_detail_common` */

DROP TABLE IF EXISTS `ex_op2_port_link_detail_common`;

CREATE TABLE `ex_op2_port_link_detail_common` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `main_waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `product_code` varchar(30) DEFAULT NULL COMMENT '产品类型',
  `electric_status` int(1) DEFAULT NULL COMMENT '是否带电 1：是 0：否',
  `cons_qty` int(5) DEFAULT NULL COMMENT '件数',
  `real_weight` double(17,3) DEFAULT NULL COMMENT ' 实际重量',
  `charged_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `start_network` varchar(30) DEFAULT '' COMMENT '发出网点',
  `plan_arrive_network` varchar(30) DEFAULT NULL COMMENT '规划到达网点',
  `arrive_network` varchar(30) DEFAULT NULL COMMENT '实际到达网点',
  `cons_content` varchar(500) DEFAULT '' COMMENT '托寄物',
  `aging_standard` datetime DEFAULT NULL COMMENT '中转时效标准',
  `checkout_pack_num` varchar(100) DEFAULT '' COMMENT '签出包号',
  `clearance_batch` varchar(100) DEFAULT '' COMMENT '报关批次',
  `clearance_time` datetime DEFAULT NULL COMMENT '报关时间',
  `cons_value` double(17,3) DEFAULT NULL COMMENT '声明价值',
  `customer_card_code` varchar(50) DEFAULT '' COMMENT '客户月结卡号',
  `customer_code` varchar(50) DEFAULT '' COMMENT '客户编码',
  `dest_area_code` varchar(30) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目标城市代码',
  `dest_country_code` varchar(30) DEFAULT NULL COMMENT '目标国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目标地区编码',
  `dest_network_code` varchar(30) DEFAULT NULL COMMENT '目标地网点',
  `monitor_status` int(1) DEFAULT NULL COMMENT ' 监控状态 （0：无标准，1：未预警，2：已预警，3：已超时，4：已达成）',
  `link_category` varchar(30) DEFAULT NULL COMMENT '环节类型（二级分类）',
  `retention_op_code` varchar(30) DEFAULT NULL COMMENT '滞留巴枪操作码',
  `retention_reason` varchar(500) DEFAULT NULL COMMENT '滞留原因',
  `first_retention_length` int(10) DEFAULT NULL COMMENT '首次滞留时长(min)',
  `first_retention_time` datetime DEFAULT NULL COMMENT '首次滞留时间',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_time_str` varchar(255) DEFAULT NULL COMMENT '滞留原因列表',
  `same_day_arrive_status` int(1) DEFAULT NULL COMMENT '是否当天到达（1：是，0：否）',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家',
  `source_network_code` varchar(30) DEFAULT NULL COMMENT '原寄地网点',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地区部',
  `duration_hours` double(10,3) DEFAULT NULL COMMENT '耗时H',
  `overtime_warn_minute` double(17,3) DEFAULT NULL COMMENT '超时/预警分钟 (当前时间-时效时间)',
  `warn_deta_hours_str` varchar(10) DEFAULT NULL COMMENT ' 预警/超时（h）',
  `warn_deta_days_str` varchar(10) DEFAULT NULL COMMENT ' 预警/超时（d）',
  PRIMARY KEY (`id`,`insert_time`) USING BTREE,
  KEY `main_waybill_no` (`main_waybill_no`),
  KEY `dest_area_code` (`dest_area_code`),
  KEY `dest_city_code` (`dest_city_code`),
  KEY `dest_country_code` (`dest_country_code`),
  KEY `dest_dept_code` (`dest_dept_code`),
  KEY `source_area_code` (`source_area_code`),
  KEY `source_city_code` (`source_city_code`),
  KEY `source_country_code` (`source_country_code`),
  KEY `source_dept_code` (`source_dept_code`),
  KEY `product_code` (`product_code`),
  KEY `start_network` (`start_network`),
  KEY `plan_arrive_network` (`plan_arrive_network`),
  KEY `arrive_network` (`arrive_network`),
  KEY `customer_code` (`customer_code`),
  KEY `customer_card_code` (`customer_card_code`),
  KEY `electric_status` (`electric_status`),
  KEY `same_day_arrive_status` (`same_day_arrive_status`),
  KEY `clearance_batch` (`clearance_batch`),
  KEY `checkout_pack_num` (`checkout_pack_num`),
  KEY `monitor_status` (`monitor_status`),
  KEY `dest_network_code` (`dest_network_code`),
  KEY `insert_time` (`insert_time`),
  KEY `insert_time_2` (`insert_time`)
) ENGINE=InnoDB AUTO_INCREMENT=142 DEFAULT CHARSET=utf8mb4 COMMENT='ex中心到口岸环节common表'
/*!50500 PARTITION BY RANGE  COLUMNS(insert_time)
(PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190512 VALUES LESS THAN ('2019-05-12') ENGINE = InnoDB,
 PARTITION p20190519 VALUES LESS THAN ('2019-05-19') ENGINE = InnoDB,
 PARTITION p20190526 VALUES LESS THAN ('2019-05-26') ENGINE = InnoDB,
 PARTITION p20190602 VALUES LESS THAN ('2019-06-02') ENGINE = InnoDB,
 PARTITION p20190609 VALUES LESS THAN ('2019-06-09') ENGINE = InnoDB,
 PARTITION p20190616 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_op2_port_link_detail_in` */

DROP TABLE IF EXISTS `ex_op2_port_link_detail_in`;

CREATE TABLE `ex_op2_port_link_detail_in` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `batch_date` datetime NOT NULL COMMENT '中转班次日期',
  `main_waybill_no` varchar(50) NOT NULL DEFAULT '' COMMENT '运单号',
  `batch_code` varchar(50) DEFAULT '' COMMENT '中转班次',
  `line_code` varchar(50) DEFAULT '' COMMENT '线路编码',
  `load_time` datetime NOT NULL COMMENT '发出时间',
  `load_vehicle_logo` varchar(100) DEFAULT '' COMMENT '发出车标',
  `plan_arrive_network` varchar(30) DEFAULT NULL COMMENT '规划到达网点',
  `start_network` varchar(30) DEFAULT '' COMMENT '发出网点',
  `pre_warn_hour` double(10,3) DEFAULT NULL COMMENT '提前预警量（单位 hour）, 生成批次的时候插入',
  PRIMARY KEY (`id`,`batch_date`) USING BTREE,
  KEY `main_waybill_no` (`main_waybill_no`),
  KEY `batch_code` (`batch_code`),
  KEY `load_vehicle_logo` (`load_vehicle_logo`),
  KEY `plan_arrive_network` (`plan_arrive_network`),
  KEY `start_network` (`start_network`),
  KEY `batch_date` (`batch_date`),
  KEY `batch_date_2` (`batch_date`)
) ENGINE=InnoDB AUTO_INCREMENT=74 DEFAULT CHARSET=utf8mb4 COMMENT='ex中心到口岸环节装车表'
/*!50500 PARTITION BY RANGE  COLUMNS(batch_date)
(PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190512 VALUES LESS THAN ('2019-05-12') ENGINE = InnoDB,
 PARTITION p20190519 VALUES LESS THAN ('2019-05-19') ENGINE = InnoDB,
 PARTITION p20190526 VALUES LESS THAN ('2019-05-26') ENGINE = InnoDB,
 PARTITION p20190602 VALUES LESS THAN ('2019-06-02') ENGINE = InnoDB,
 PARTITION p20190609 VALUES LESS THAN ('2019-06-09') ENGINE = InnoDB,
 PARTITION p20190616 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_op2_port_link_detail_out` */

DROP TABLE IF EXISTS `ex_op2_port_link_detail_out`;

CREATE TABLE `ex_op2_port_link_detail_out` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `unload_time` datetime NOT NULL COMMENT '实际到达时间, 卸车时间',
  `is_plan_network` int(1) DEFAULT NULL COMMENT '是否规划网点 1：是 0：否',
  `main_waybill_no` varchar(50) NOT NULL DEFAULT '' COMMENT '运单号',
  `start_network` varchar(30) DEFAULT '' COMMENT '发出网点',
  `arrive_network` varchar(30) DEFAULT NULL COMMENT '实际到达网点',
  `plan_arrive_network` varchar(30) DEFAULT NULL COMMENT '规划到达网点',
  PRIMARY KEY (`id`,`unload_time`) USING BTREE,
  KEY `main_waybill_no` (`main_waybill_no`),
  KEY `unload_time` (`unload_time`),
  KEY `is_plan_network` (`is_plan_network`),
  KEY `start_network` (`start_network`),
  KEY `arrive_network` (`arrive_network`),
  KEY `plan_arrive_network` (`plan_arrive_network`)
) ENGINE=InnoDB AUTO_INCREMENT=84 DEFAULT CHARSET=utf8mb4 COMMENT='ex中心到口岸环节卸车表'
/*!50500 PARTITION BY RANGE  COLUMNS(unload_time)
(PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190512 VALUES LESS THAN ('2019-05-12') ENGINE = InnoDB,
 PARTITION p20190519 VALUES LESS THAN ('2019-05-19') ENGINE = InnoDB,
 PARTITION p20190526 VALUES LESS THAN ('2019-05-26') ENGINE = InnoDB,
 PARTITION p20190602 VALUES LESS THAN ('2019-06-02') ENGINE = InnoDB,
 PARTITION p20190609 VALUES LESS THAN ('2019-06-09') ENGINE = InnoDB,
 PARTITION p20190616 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_op2_port_link_sum` */

DROP TABLE IF EXISTS `ex_op2_port_link_sum`;

CREATE TABLE `ex_op2_port_link_sum` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `batch_date` date NOT NULL COMMENT '班次日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `customer_card_code` varchar(50) DEFAULT '' COMMENT '客户月结卡号',
  `customer_code` varchar(50) DEFAULT '' COMMENT '客户代码',
  `electric_status` int(1) DEFAULT NULL COMMENT '是否带电 1：Y 0：N',
  `load_vehicle_logo` varchar(100) DEFAULT '' COMMENT '车标号：装车车标',
  `checkout_pack_num` varchar(100) DEFAULT '' COMMENT '签出包号',
  `clearance_batch` varchar(100) DEFAULT '' COMMENT '报关批次',
  `batch_code` varchar(50) DEFAULT '' COMMENT '中转班次',
  `plan_arrive_network` varchar(30) DEFAULT NULL COMMENT '规划到达网点',
  `start_network` varchar(30) DEFAULT '' COMMENT '发出网点',
  `arrive_network` varchar(30) DEFAULT NULL COMMENT '到达网点：实际到达网点',
  `actual_load_count` int(10) DEFAULT '0' COMMENT '发件量：实际件量',
  `cons_qty` int(5) DEFAULT NULL COMMENT '件数',
  `real_weight` double(17,3) DEFAULT NULL COMMENT ' 实际重量',
  `charged_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家',
  `source_network_code` varchar(30) DEFAULT NULL COMMENT '原寄地网点',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地区部',
  `dest_area_code` varchar(30) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目标城市代码',
  `dest_country_code` varchar(30) DEFAULT NULL COMMENT '目标国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目标地区编码',
  `dest_network_code` varchar(30) DEFAULT NULL COMMENT '目标地网点',
  `ontime_unload_count` bigint(11) DEFAULT '0' COMMENT '准点到件量',
  `warn_count` bigint(11) DEFAULT '0' COMMENT '预警量',
  `record_count` bigint(11) DEFAULT '0' COMMENT ' 汇总的记录条数',
  `overtime_to_unload_count` bigint(11) DEFAULT '0' COMMENT '超时到件总量:等于超时已到+超时未到',
  `overtime_unload_count` bigint(11) DEFAULT '0' COMMENT '超时已到，票数',
  `overtime_not_unload_count` bigint(11) DEFAULT '0' COMMENT '超时未到，票数',
  `retention_count` int(10) DEFAULT '0' COMMENT '滞留量:滞留票数',
  `same_day_arrive_count` bigint(11) DEFAULT '0' COMMENT '当天已到票数',
  `unload_count` bigint(11) DEFAULT '0' COMMENT '累计已到',
  `not_unload_count` bigint(11) DEFAULT '0' COMMENT '累计未到',
  `abnormal_unload_network_count` bigint(11) DEFAULT '0' COMMENT '异常网点票数',
  `duration_hours` double(17,3) DEFAULT '0.000' COMMENT ' 耗时（小时）(总耗时)',
  PRIMARY KEY (`id`,`batch_date`) USING BTREE,
  KEY `product_code` (`product_code`) USING BTREE,
  KEY `customer_code` (`customer_code`) USING BTREE,
  KEY `customer_card_code` (`customer_card_code`) USING BTREE,
  KEY `load_vehicle_logo` (`load_vehicle_logo`) USING BTREE,
  KEY `checkout_pack_num` (`checkout_pack_num`) USING BTREE,
  KEY `clearance_batch` (`clearance_batch`) USING BTREE,
  KEY `start_network` (`start_network`) USING BTREE,
  KEY `arrive_network` (`arrive_network`) USING BTREE,
  KEY `plan_arrive_network` (`plan_arrive_network`) USING BTREE,
  KEY `batch_code` (`batch_code`) USING BTREE,
  KEY `source_country_code` (`source_country_code`) USING BTREE,
  KEY `source_city_code` (`source_city_code`) USING BTREE,
  KEY `source_dept_code` (`source_dept_code`) USING BTREE,
  KEY `source_network_code` (`source_network_code`) USING BTREE,
  KEY `source_area_code` (`source_area_code`) USING BTREE,
  KEY `dest_area_code` (`dest_area_code`) USING BTREE,
  KEY `dest_city_code` (`dest_city_code`) USING BTREE,
  KEY `dest_country_code` (`dest_country_code`) USING BTREE,
  KEY `dest_dept_code` (`dest_dept_code`) USING BTREE,
  KEY `dest_network_code` (`dest_network_code`) USING BTREE,
  KEY `electric_status` (`electric_status`),
  KEY `batch_date` (`batch_date`),
  KEY `batch_date_2` (`batch_date`)
) ENGINE=InnoDB AUTO_INCREMENT=235258 DEFAULT CHARSET=utf8 COMMENT='ex操作中心到口岸明细汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(batch_date)
(PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190512 VALUES LESS THAN ('2019-05-12') ENGINE = InnoDB,
 PARTITION p20190519 VALUES LESS THAN ('2019-05-19') ENGINE = InnoDB,
 PARTITION p20190526 VALUES LESS THAN ('2019-05-26') ENGINE = InnoDB,
 PARTITION p20190602 VALUES LESS THAN ('2019-06-02') ENGINE = InnoDB,
 PARTITION p20190609 VALUES LESS THAN ('2019-06-09') ENGINE = InnoDB,
 PARTITION p20190616 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_operation_center_tache_warning_detail` */

DROP TABLE IF EXISTS `ex_operation_center_tache_warning_detail`;

CREATE TABLE `ex_operation_center_tache_warning_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `transfer_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '发出班次日期',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `tache_type` varchar(20) DEFAULT NULL COMMENT '环节分类',
  `product_code` varchar(20) DEFAULT NULL COMMENT '产品类型',
  `customer_name` varchar(20) DEFAULT NULL COMMENT '客户名称',
  `customer_account_code` varchar(50) DEFAULT NULL COMMENT '客户卡号 （月结卡号）',
  `charged` int(11) DEFAULT NULL COMMENT '是否带电，0 不带  1 带',
  `transfer_batch` varchar(20) DEFAULT NULL COMMENT '中转班次',
  `send_network` varchar(20) DEFAULT NULL COMMENT '发出网点',
  `send_batch_code` varchar(20) DEFAULT NULL COMMENT '发出班次编码',
  `line_code` varchar(20) DEFAULT NULL COMMENT '线路编码',
  `plan_arrive_network` varchar(20) DEFAULT NULL COMMENT '规划到达网点',
  `arrive_network` varchar(20) DEFAULT NULL COMMENT '实际到达网点',
  `conform_to_plan_network` int(11) DEFAULT NULL COMMENT '是否符合规划网点 0 符合 1 不符合',
  `arrive_batch_code` varchar(20) DEFAULT NULL COMMENT '到达班次编码',
  `package_count` int(11) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `cons_name` varchar(600) DEFAULT NULL,
  `value` double(17,3) DEFAULT NULL COMMENT '价值',
  `sign_out_package_no` varchar(20) DEFAULT NULL COMMENT '签出包袋号',
  `sign_in_package_no` varchar(20) DEFAULT NULL COMMENT '签入包袋号',
  `send_mark_number` varchar(20) DEFAULT NULL COMMENT '发出车标号',
  `plan_cost_minutes` int(11) DEFAULT NULL COMMENT '中转时效标准(以分钟保存)',
  `standard_warning_minutes` int(11) DEFAULT NULL COMMENT '提前预警时间（分钟）',
  `plan_arrive_time` datetime DEFAULT NULL COMMENT '计划到达时间',
  `warning_time` datetime DEFAULT NULL COMMENT '预警时刻',
  `warning_countdown_minutes` int(11) DEFAULT NULL COMMENT '预警倒计时分钟数',
  `warning_status` int(11) DEFAULT NULL COMMENT '预警状态 0 正常 ，1 预警  ，2 超时',
  `warning_hours` int(11) DEFAULT NULL COMMENT '预警/超时 小时',
  `warning_minutes` int(11) DEFAULT NULL COMMENT '预警/超时 分钟数',
  `send_time` datetime DEFAULT NULL COMMENT '发车时间',
  `arrive_time` datetime DEFAULT NULL COMMENT '到达时间',
  `cost_hours` int(11) DEFAULT NULL COMMENT '耗时',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_op_code` varchar(20) DEFAULT NULL COMMENT '滞留巴枪码',
  `retention_reason` varchar(200) DEFAULT NULL COMMENT '滞留原因',
  `in_plan_network` int(11) DEFAULT NULL COMMENT '是否到达规划网点 0 是  1 否',
  `arrive_in_same_day` int(11) DEFAULT NULL COMMENT '是否当天到达 0 是 1 否',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_dept` varchar(30) DEFAULT NULL COMMENT '原寄本部',
  `source_area` varchar(30) DEFAULT NULL COMMENT '原寄地区',
  `source_city` varchar(30) DEFAULT NULL COMMENT '原寄城市',
  `source_network` varchar(30) DEFAULT NULL COMMENT '原寄网点',
  `source_hq_code` varchar(30) DEFAULT NULL COMMENT '原寄地经营本部',
  `target_hq_code` varchar(30) DEFAULT NULL COMMENT '目的地经营本部',
  `target_country_abb` varchar(30) DEFAULT NULL COMMENT '目标国家简写',
  `target_dept` varchar(30) DEFAULT NULL COMMENT '目标本部',
  `target_area` varchar(30) DEFAULT NULL COMMENT '目标地区',
  `target_city` varchar(30) DEFAULT NULL COMMENT '目标城市',
  `target_network` varchar(30) DEFAULT NULL COMMENT '目标网点',
  `server_ip` varchar(30) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  `insert_time` datetime NOT NULL COMMENT '入库时间',
  `update_time` datetime NOT NULL COMMENT '更新时间',
  `warning_days` int(11) DEFAULT NULL COMMENT '预警/超时（d）',
  `retention_time_str` varchar(61) DEFAULT NULL COMMENT '滞留时间',
  PRIMARY KEY (`id`,`transfer_date`),
  KEY `idx_transfer_date` (`transfer_date`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE,
  KEY `idx_customer_account_code` (`customer_account_code`) USING BTREE,
  KEY `idx_charged` (`charged`) USING BTREE,
  KEY `idx_line_code` (`line_code`) USING BTREE,
  KEY `idx_send_network` (`send_network`) USING BTREE,
  KEY `idx_arrive_network` (`arrive_network`) USING BTREE,
  KEY `idx_source_network` (`source_network`) USING BTREE,
  KEY `idx_target_network` (`target_network`) USING BTREE,
  KEY `idx_source_city` (`source_city`) USING BTREE,
  KEY `idx_target_city` (`target_city`) USING BTREE,
  KEY `idx_transfer_batch` (`transfer_batch`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=335 DEFAULT CHARSET=utf8 COMMENT='EX操作中心中转环节明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(transfer_date)
(PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190115 VALUES LESS THAN ('2019-01-15') ENGINE = InnoDB,
 PARTITION p20190116 VALUES LESS THAN ('2019-01-16') ENGINE = InnoDB,
 PARTITION p20190117 VALUES LESS THAN ('2019-01-17') ENGINE = InnoDB,
 PARTITION p20190118 VALUES LESS THAN ('2019-01-18') ENGINE = InnoDB,
 PARTITION p20190119 VALUES LESS THAN ('2019-01-19') ENGINE = InnoDB,
 PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190122 VALUES LESS THAN ('2019-01-22') ENGINE = InnoDB,
 PARTITION p20190123 VALUES LESS THAN ('2019-01-23') ENGINE = InnoDB,
 PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190430 VALUES LESS THAN ('2019-04-30') ENGINE = InnoDB,
 PARTITION p20190507 VALUES LESS THAN ('2019-05-07') ENGINE = InnoDB,
 PARTITION p20190514 VALUES LESS THAN ('2019-05-14') ENGINE = InnoDB,
 PARTITION p20190521 VALUES LESS THAN ('2019-05-21') ENGINE = InnoDB,
 PARTITION p20190528 VALUES LESS THAN ('2019-05-28') ENGINE = InnoDB,
 PARTITION p20190604 VALUES LESS THAN ('2019-06-04') ENGINE = InnoDB,
 PARTITION p20190611 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_operation_center_tache_warning_monitor` */

DROP TABLE IF EXISTS `ex_operation_center_tache_warning_monitor`;

CREATE TABLE `ex_operation_center_tache_warning_monitor` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `transfer_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '中转日期',
  `start_date` date DEFAULT NULL COMMENT '开始日期',
  `end_date` date DEFAULT NULL COMMENT '结束日期',
  `tache_type` varchar(20) DEFAULT NULL,
  `product_code` varchar(20) DEFAULT NULL COMMENT '产品类型',
  `customer_name` varchar(30) DEFAULT NULL COMMENT '客户名称',
  `customer_code` varchar(50) DEFAULT NULL COMMENT '客户卡号 （月结卡号）',
  `charged` int(11) DEFAULT NULL COMMENT '是否带电，0 不带  1 带',
  `send_mark_number` varchar(20) DEFAULT NULL COMMENT '发出车标号',
  `sign_out_package_no` varchar(20) DEFAULT NULL COMMENT '签出包袋号',
  `transfer_batch` varchar(20) DEFAULT NULL COMMENT '中转班次',
  `send_batch_code` varchar(20) DEFAULT NULL COMMENT '发出班次编码',
  `send_network` varchar(20) DEFAULT NULL COMMENT '发出网点',
  `arrive_network` varchar(20) DEFAULT NULL COMMENT '实际到达网点',
  `arrive_batch_code` varchar(20) DEFAULT NULL COMMENT '到达班次编码',
  `source_country_abb` varchar(20) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_city` varchar(50) DEFAULT NULL COMMENT '原寄城市',
  `source_network` varchar(20) DEFAULT NULL COMMENT '原寄网点',
  `target_country_abb` varchar(20) DEFAULT NULL COMMENT '目标国家简写',
  `target_city` varchar(50) DEFAULT NULL COMMENT '目标城市',
  `target_network` varchar(20) DEFAULT NULL COMMENT '目标网点',
  `sum_count` int(11) DEFAULT NULL COMMENT '件数',
  `sum_package_count` int(11) DEFAULT NULL COMMENT '包数',
  `sum_actual_weight` double(17,5) DEFAULT NULL COMMENT '实际重量',
  `sum_meterage_weight` double(17,5) DEFAULT NULL COMMENT '计费重量',
  `sum_intime_bill` int(11) DEFAULT NULL COMMENT '准点到件量',
  `sum_warning` int(11) DEFAULT NULL COMMENT '预警量',
  `sum_timeout` int(11) DEFAULT NULL COMMENT '超时量',
  `sum_timeout_arrived` int(11) DEFAULT NULL COMMENT '超时已到',
  `sum_timeout_not_arrived` int(11) DEFAULT NULL COMMENT '超时未到',
  `sum_retention` int(11) DEFAULT NULL COMMENT '滞留量',
  `sum_arrive_in_same_day` int(11) DEFAULT NULL COMMENT '当天到达',
  `sum_not_arrived` int(11) DEFAULT NULL COMMENT '未到',
  `sum_arrived` int(11) DEFAULT NULL COMMENT '已到',
  `sum_not_conform_to_plan_network` int(11) DEFAULT NULL COMMENT '不符合规划网点',
  `sum_cost_hours` int(11) DEFAULT NULL COMMENT '总耗时',
  `avg_cost_hours` double(17,5) DEFAULT NULL COMMENT '平均耗时',
  `source_dept` varchar(20) DEFAULT NULL COMMENT '原寄本部',
  `source_area` varchar(20) DEFAULT NULL COMMENT '原寄地区',
  `source_hq_code` varchar(20) DEFAULT NULL COMMENT '原寄地经营本部',
  `target_hq_code` varchar(20) DEFAULT NULL COMMENT '目的地经营本部',
  `target_dept` varchar(20) DEFAULT NULL COMMENT '目标本部',
  `target_area` varchar(20) DEFAULT NULL COMMENT '目标地区',
  PRIMARY KEY (`id`,`transfer_date`),
  KEY `idx_transfer_date` (`transfer_date`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE,
  KEY `idx_customer_code` (`customer_code`) USING BTREE,
  KEY `idx_charged` (`charged`) USING BTREE,
  KEY `idx_send_network` (`send_network`) USING BTREE,
  KEY `idx_arrive_network` (`arrive_network`) USING BTREE,
  KEY `idx_source_network` (`source_network`) USING BTREE,
  KEY `idx_target_network` (`target_network`) USING BTREE,
  KEY `idx_source_city` (`source_city`) USING BTREE,
  KEY `idx_target_city` (`target_city`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=159 DEFAULT CHARSET=utf8 COMMENT='EX操作中心中转环节统计表'
/*!50500 PARTITION BY RANGE  COLUMNS(transfer_date)
(PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-13') ENGINE = InnoDB,
 PARTITION p20190214 VALUES LESS THAN ('2019-02-14') ENGINE = InnoDB,
 PARTITION p20190215 VALUES LESS THAN ('2019-02-15') ENGINE = InnoDB,
 PARTITION p20190216 VALUES LESS THAN ('2019-02-16') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190219 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190220 VALUES LESS THAN ('2019-02-20') ENGINE = InnoDB,
 PARTITION p20190221 VALUES LESS THAN ('2019-02-21') ENGINE = InnoDB,
 PARTITION p20190222 VALUES LESS THAN ('2019-02-22') ENGINE = InnoDB,
 PARTITION p20190223 VALUES LESS THAN ('2019-02-23') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN ('2019-02-27') ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN ('2019-02-28') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190302 VALUES LESS THAN ('2019-03-02') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190306 VALUES LESS THAN ('2019-03-06') ENGINE = InnoDB,
 PARTITION p20190307 VALUES LESS THAN ('2019-03-07') ENGINE = InnoDB,
 PARTITION p20190308 VALUES LESS THAN ('2019-03-08') ENGINE = InnoDB,
 PARTITION p20190309 VALUES LESS THAN ('2019-03-09') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190313 VALUES LESS THAN ('2019-03-13') ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN ('2019-03-14') ENGINE = InnoDB,
 PARTITION p20190315 VALUES LESS THAN ('2019-03-15') ENGINE = InnoDB,
 PARTITION p20190316 VALUES LESS THAN ('2019-03-16') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190320 VALUES LESS THAN ('2019-03-20') ENGINE = InnoDB,
 PARTITION p20190321 VALUES LESS THAN ('2019-03-21') ENGINE = InnoDB,
 PARTITION p20190322 VALUES LESS THAN ('2019-03-22') ENGINE = InnoDB,
 PARTITION p20190323 VALUES LESS THAN ('2019-03-23') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190327 VALUES LESS THAN ('2019-03-27') ENGINE = InnoDB,
 PARTITION p20190328 VALUES LESS THAN ('2019-03-28') ENGINE = InnoDB,
 PARTITION p20190329 VALUES LESS THAN ('2019-03-29') ENGINE = InnoDB,
 PARTITION p20190330 VALUES LESS THAN ('2019-03-30') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190403 VALUES LESS THAN ('2019-04-03') ENGINE = InnoDB,
 PARTITION p20190404 VALUES LESS THAN ('2019-04-04') ENGINE = InnoDB,
 PARTITION p20190405 VALUES LESS THAN ('2019-04-05') ENGINE = InnoDB,
 PARTITION p20190406 VALUES LESS THAN ('2019-04-06') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190410 VALUES LESS THAN ('2019-04-10') ENGINE = InnoDB,
 PARTITION p20190411 VALUES LESS THAN ('2019-04-11') ENGINE = InnoDB,
 PARTITION p20190412 VALUES LESS THAN ('2019-04-12') ENGINE = InnoDB,
 PARTITION p20190413 VALUES LESS THAN ('2019-04-13') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190417 VALUES LESS THAN ('2019-04-17') ENGINE = InnoDB,
 PARTITION p20190418 VALUES LESS THAN ('2019-04-18') ENGINE = InnoDB,
 PARTITION p20190419 VALUES LESS THAN ('2019-04-19') ENGINE = InnoDB,
 PARTITION p20190420 VALUES LESS THAN ('2019-04-20') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190424 VALUES LESS THAN ('2019-04-24') ENGINE = InnoDB,
 PARTITION p20190425 VALUES LESS THAN ('2019-04-25') ENGINE = InnoDB,
 PARTITION p20190426 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_operation_center_warning_detail` */

DROP TABLE IF EXISTS `ex_operation_center_warning_detail`;

CREATE TABLE `ex_operation_center_warning_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `transfer_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '中转日期 （班次日期）',
  `network_type` varchar(20) DEFAULT NULL COMMENT '网点类型',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `customer_name` varchar(20) DEFAULT NULL COMMENT '客户名称',
  `customer_account_code` varchar(50) DEFAULT NULL COMMENT '客户卡号 （月结卡号）',
  `charged` int(11) DEFAULT NULL COMMENT '是否带电，0 不带  1 带',
  `operation_network` varchar(20) DEFAULT NULL COMMENT '操作网点',
  `unload_batch` varchar(20) DEFAULT NULL COMMENT '卸车班次',
  `unload_mark_number` varchar(50) DEFAULT NULL COMMENT '卸车车标',
  `unload_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `package_count` int(11) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `cons_name` varchar(200) DEFAULT NULL COMMENT '托寄物名称',
  `value` double(17,3) DEFAULT NULL COMMENT '价值',
  `sign_out_package_no` varchar(20) DEFAULT NULL COMMENT '签出包袋号',
  `sign_in_package_no` varchar(20) DEFAULT NULL COMMENT '签入包袋号',
  `load_mark_number` varchar(50) DEFAULT NULL COMMENT '装车车标号',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `load_batch` varchar(20) DEFAULT NULL COMMENT '装车班次',
  `plan_load_batch` varchar(20) DEFAULT NULL COMMENT '计划装车班次',
  `plan_batch_load_time` datetime DEFAULT NULL COMMENT '计划班次装车时间',
  `sign_in_time` datetime DEFAULT NULL COMMENT '签入时间',
  `sign_out_time` datetime DEFAULT NULL COMMENT '签出时间',
  `max_in_warehouse_minutes` int(11) DEFAULT NULL COMMENT '最长在中心的分钟数',
  `plan_load_time` datetime DEFAULT NULL COMMENT '计划装车时间',
  `load_time_out` int(11) DEFAULT NULL COMMENT '装车是否超时',
  `timeout_minutes` int(11) DEFAULT NULL COMMENT '装车超时分钟数',
  `standard_warning_minutes` int(11) DEFAULT NULL COMMENT '提前预警的分钟数(配置)',
  `warning_time` datetime DEFAULT NULL COMMENT '预警的时间开始时刻',
  `warning_countdown_minutes` int(11) DEFAULT NULL COMMENT '预警倒计时分钟数',
  `warning_status` int(11) DEFAULT NULL COMMENT '预警状态 0 正常 ，1 预警  ，2 超时',
  `warning_hours` int(11) DEFAULT NULL COMMENT '预警/超时 小时',
  `warning_minutes` int(11) DEFAULT NULL COMMENT '预警/超时 分钟数',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_op_code` varchar(20) DEFAULT NULL COMMENT '滞留巴枪码',
  `retention_reason` varchar(200) DEFAULT NULL COMMENT '滞留原因',
  `problem_shipment` varchar(200) DEFAULT NULL COMMENT '问题件',
  `cost_hour` int(11) DEFAULT NULL COMMENT '耗时',
  `load_in_same_day` int(11) DEFAULT NULL COMMENT '是否同一天发出 0 是 1 不是',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_dept` varchar(30) DEFAULT NULL COMMENT '原寄本部',
  `source_area` varchar(30) DEFAULT NULL COMMENT '原寄地区',
  `source_city` varchar(30) DEFAULT NULL COMMENT '原寄城市',
  `source_network` varchar(30) DEFAULT NULL COMMENT '原寄网点',
  `source_hq_code` varchar(30) DEFAULT NULL COMMENT '原寄地经营本部',
  `target_hq_code` varchar(30) DEFAULT NULL COMMENT '目的地经营本部',
  `target_country_abb` varchar(30) DEFAULT NULL COMMENT '目标国家简写',
  `target_dept` varchar(30) DEFAULT NULL COMMENT '目标本部',
  `target_area` varchar(30) DEFAULT NULL COMMENT '目标地区',
  `target_city` varchar(30) DEFAULT NULL COMMENT '目标城市',
  `target_network` varchar(30) DEFAULT NULL COMMENT '目标网点',
  `server_ip` varchar(30) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `load_date` date DEFAULT NULL COMMENT '开始日期',
  `warning_days` int(11) DEFAULT NULL COMMENT '预警/超时（d）',
  `chain_network` varchar(30) DEFAULT NULL COMMENT '串点网点',
  `retention_time_str` varchar(61) DEFAULT NULL COMMENT '滞留时间',
  PRIMARY KEY (`id`,`transfer_date`),
  KEY `idx_transfer_date` (`transfer_date`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE,
  KEY `idx_customer_account_code` (`customer_account_code`) USING BTREE,
  KEY `idx_charged` (`charged`) USING BTREE,
  KEY `idx_unload_batch` (`unload_batch`) USING BTREE,
  KEY `idx_operation_network` (`operation_network`) USING BTREE,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING BTREE,
  KEY `idx_source_network` (`source_network`) USING BTREE,
  KEY `idx_source_country_abb` (`source_country_abb`) USING BTREE,
  KEY `idx_target_country_abb` (`target_country_abb`) USING BTREE,
  KEY `idx_source_city` (`source_city`) USING BTREE,
  KEY `idx_target_city` (`target_city`) USING BTREE,
  KEY `idx_target_network` (`target_network`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=387 DEFAULT CHARSET=utf8 COMMENT='EX操作中心监控明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(transfer_date)
(PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190115 VALUES LESS THAN ('2019-01-15') ENGINE = InnoDB,
 PARTITION p20190116 VALUES LESS THAN ('2019-01-16') ENGINE = InnoDB,
 PARTITION p20190117 VALUES LESS THAN ('2019-01-17') ENGINE = InnoDB,
 PARTITION p20190118 VALUES LESS THAN ('2019-01-18') ENGINE = InnoDB,
 PARTITION p20190119 VALUES LESS THAN ('2019-01-19') ENGINE = InnoDB,
 PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190122 VALUES LESS THAN ('2019-01-22') ENGINE = InnoDB,
 PARTITION p20190123 VALUES LESS THAN ('2019-01-23') ENGINE = InnoDB,
 PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190430 VALUES LESS THAN ('2019-04-30') ENGINE = InnoDB,
 PARTITION p20190507 VALUES LESS THAN ('2019-05-07') ENGINE = InnoDB,
 PARTITION p20190514 VALUES LESS THAN ('2019-05-14') ENGINE = InnoDB,
 PARTITION p20190521 VALUES LESS THAN ('2019-05-21') ENGINE = InnoDB,
 PARTITION p20190528 VALUES LESS THAN ('2019-05-28') ENGINE = InnoDB,
 PARTITION p20190604 VALUES LESS THAN ('2019-06-04') ENGINE = InnoDB,
 PARTITION p20190611 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_operation_center_warning_monitor` */

DROP TABLE IF EXISTS `ex_operation_center_warning_monitor`;

CREATE TABLE `ex_operation_center_warning_monitor` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `transfer_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '中转日期 （班次日期）',
  `start_date` date DEFAULT NULL COMMENT '开始日期',
  `end_date` date DEFAULT NULL COMMENT '结束日期',
  `network_type` varchar(20) DEFAULT NULL,
  `product_code` varchar(20) DEFAULT NULL COMMENT '产品类型',
  `customer_name` varchar(20) DEFAULT NULL COMMENT '客户名称',
  `customer_code` varchar(50) DEFAULT NULL COMMENT '客户卡号 （月结卡号）',
  `unload_mark_number` varchar(30) DEFAULT NULL COMMENT '卸车车标',
  `charged` int(11) DEFAULT NULL COMMENT '是否带电，0 不带  1 带',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包袋号',
  `operation_network` varchar(20) DEFAULT NULL COMMENT '操作网点',
  `unload_batch` varchar(20) DEFAULT NULL COMMENT '卸车班次',
  `load_mark_number` varchar(30) DEFAULT NULL COMMENT '装车车标',
  `source_country` varchar(20) DEFAULT NULL COMMENT '原寄地国家',
  `source_dept` varchar(20) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(50) DEFAULT NULL COMMENT '原寄地地区',
  `source_city` varchar(30) DEFAULT NULL COMMENT '原寄地城市',
  `source_network` varchar(20) DEFAULT NULL COMMENT '原寄地网点',
  `dest_country` varchar(20) DEFAULT NULL COMMENT '目的地国家',
  `dest_city` varchar(50) DEFAULT NULL COMMENT '目的地城市',
  `target_network` varchar(20) DEFAULT NULL COMMENT '目标网点',
  `predict_unload_count` int(11) DEFAULT NULL COMMENT '预测到件量',
  `unload_count` int(11) DEFAULT NULL COMMENT '到件量',
  `sum_cons_qty` int(11) DEFAULT NULL COMMENT '件数',
  `sum_actual_weight` double(17,5) DEFAULT NULL COMMENT '实际重量',
  `sum_meterage_weight` double(17,5) DEFAULT NULL COMMENT '计费重量',
  `sum_arrive_meterage_weight` double(17,5) DEFAULT NULL COMMENT '实到计费重量 ',
  `sum_load_in_time` int(11) DEFAULT NULL COMMENT '准点发送量',
  `sum_warning` int(11) DEFAULT NULL COMMENT '预警量',
  `sum_timeout` int(11) DEFAULT NULL COMMENT '超时量',
  `sum_timeout_loaded` int(11) DEFAULT NULL COMMENT '超时已发量',
  `sum_timeout_not_load` int(11) DEFAULT NULL COMMENT '超时未发量',
  `sum_retention` int(11) DEFAULT NULL COMMENT '滞留量',
  `sum_problem` int(11) DEFAULT NULL COMMENT '问题件票数',
  `sum_load_same_day` int(11) DEFAULT NULL COMMENT '当天已发',
  `sum_loaded` int(11) DEFAULT NULL COMMENT '累计已发',
  `sum_unload` int(11) DEFAULT NULL COMMENT '累计未发',
  `sum_cost_hours` int(11) DEFAULT NULL COMMENT '总耗时',
  `avg_cost_hours` double(17,5) DEFAULT NULL COMMENT '平均耗时',
  `dest_area` varchar(32) DEFAULT NULL COMMENT '目标地区',
  `dest_dept` varchar(32) DEFAULT NULL COMMENT '目标本部',
  PRIMARY KEY (`id`,`transfer_date`),
  KEY `idx_transfer_date` (`transfer_date`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE,
  KEY `idx_customer_code` (`customer_code`) USING BTREE,
  KEY `idx_charged` (`charged`) USING BTREE,
  KEY `idx_unload_batch` (`unload_batch`) USING BTREE,
  KEY `idx_operation_network` (`operation_network`) USING BTREE,
  KEY `idx_source_network` (`source_network`) USING BTREE,
  KEY `idx_source_country` (`source_network`) USING BTREE,
  KEY `idx_dest_country` (`dest_country`) USING BTREE,
  KEY `idx_source_city` (`source_city`) USING BTREE,
  KEY `idx_dest_city` (`dest_city`) USING BTREE,
  KEY `idx_target_network` (`target_network`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=227 DEFAULT CHARSET=utf8 COMMENT='EX操作中心监控统计表'
/*!50500 PARTITION BY RANGE  COLUMNS(transfer_date)
(PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-13') ENGINE = InnoDB,
 PARTITION p20190214 VALUES LESS THAN ('2019-02-14') ENGINE = InnoDB,
 PARTITION p20190215 VALUES LESS THAN ('2019-02-15') ENGINE = InnoDB,
 PARTITION p20190216 VALUES LESS THAN ('2019-02-16') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190219 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190220 VALUES LESS THAN ('2019-02-20') ENGINE = InnoDB,
 PARTITION p20190221 VALUES LESS THAN ('2019-02-21') ENGINE = InnoDB,
 PARTITION p20190222 VALUES LESS THAN ('2019-02-22') ENGINE = InnoDB,
 PARTITION p20190223 VALUES LESS THAN ('2019-02-23') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN ('2019-02-27') ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN ('2019-02-28') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190302 VALUES LESS THAN ('2019-03-02') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190306 VALUES LESS THAN ('2019-03-06') ENGINE = InnoDB,
 PARTITION p20190307 VALUES LESS THAN ('2019-03-07') ENGINE = InnoDB,
 PARTITION p20190308 VALUES LESS THAN ('2019-03-08') ENGINE = InnoDB,
 PARTITION p20190309 VALUES LESS THAN ('2019-03-09') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190313 VALUES LESS THAN ('2019-03-13') ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN ('2019-03-14') ENGINE = InnoDB,
 PARTITION p20190315 VALUES LESS THAN ('2019-03-15') ENGINE = InnoDB,
 PARTITION p20190316 VALUES LESS THAN ('2019-03-16') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190320 VALUES LESS THAN ('2019-03-20') ENGINE = InnoDB,
 PARTITION p20190321 VALUES LESS THAN ('2019-03-21') ENGINE = InnoDB,
 PARTITION p20190322 VALUES LESS THAN ('2019-03-22') ENGINE = InnoDB,
 PARTITION p20190323 VALUES LESS THAN ('2019-03-23') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190327 VALUES LESS THAN ('2019-03-27') ENGINE = InnoDB,
 PARTITION p20190328 VALUES LESS THAN ('2019-03-28') ENGINE = InnoDB,
 PARTITION p20190329 VALUES LESS THAN ('2019-03-29') ENGINE = InnoDB,
 PARTITION p20190330 VALUES LESS THAN ('2019-03-30') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190403 VALUES LESS THAN ('2019-04-03') ENGINE = InnoDB,
 PARTITION p20190404 VALUES LESS THAN ('2019-04-04') ENGINE = InnoDB,
 PARTITION p20190405 VALUES LESS THAN ('2019-04-05') ENGINE = InnoDB,
 PARTITION p20190406 VALUES LESS THAN ('2019-04-06') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190410 VALUES LESS THAN ('2019-04-10') ENGINE = InnoDB,
 PARTITION p20190411 VALUES LESS THAN ('2019-04-11') ENGINE = InnoDB,
 PARTITION p20190412 VALUES LESS THAN ('2019-04-12') ENGINE = InnoDB,
 PARTITION p20190413 VALUES LESS THAN ('2019-04-13') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190417 VALUES LESS THAN ('2019-04-17') ENGINE = InnoDB,
 PARTITION p20190418 VALUES LESS THAN ('2019-04-18') ENGINE = InnoDB,
 PARTITION p20190419 VALUES LESS THAN ('2019-04-19') ENGINE = InnoDB,
 PARTITION p20190420 VALUES LESS THAN ('2019-04-20') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190424 VALUES LESS THAN ('2019-04-24') ENGINE = InnoDB,
 PARTITION p20190425 VALUES LESS THAN ('2019-04-25') ENGINE = InnoDB,
 PARTITION p20190426 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_order_detail` */

DROP TABLE IF EXISTS `ex_order_detail`;

CREATE TABLE `ex_order_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `order_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '下单日期',
  `order_tm` datetime DEFAULT NULL COMMENT '下单时间',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `send_dept` varchar(30) DEFAULT NULL COMMENT '寄件本部',
  `send_area` varchar(30) DEFAULT NULL COMMENT '寄件地区',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `send_network` varchar(30) DEFAULT NULL COMMENT '寄件网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `customer_waybill_no` varchar(100) DEFAULT NULL COMMENT '客户单号',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `consignment_name` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `is_electric` varchar(5) DEFAULT NULL COMMENT '是否带电',
  `delivery_agent_name` varchar(30) DEFAULT NULL COMMENT '派件代理名称',
  `provider_waybill_no` varchar(100) DEFAULT NULL COMMENT '服务商单号',
  `is_same_day_no_pick_up_count` int(2) DEFAULT '0' COMMENT '是否当天未收，0：是，1：否',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`order_dt`),
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH COMMENT '运单号索引',
  KEY `idx_customer_waybill_no` (`customer_waybill_no`) USING HASH COMMENT '客户单号索引',
  KEY `idx_send_country_abb` (`send_country_abb`) USING HASH COMMENT '寄件国家索引',
  KEY `idx_send_dept` (`send_dept`) USING HASH COMMENT '寄件本部索引',
  KEY `idx_send_area` (`send_area`) USING HASH COMMENT '寄件地区索引',
  KEY `idx_send_city` (`send_area`) USING HASH COMMENT '寄件城市索引',
  KEY `idx_send_network` (`send_network`) USING HASH COMMENT '寄件网点索引',
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH COMMENT '目的地国家索引',
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH COMMENT '目的地城市索引',
  KEY `idx_product_code` (`product_code`) USING HASH COMMENT '产品类型索引',
  KEY `order_dt` (`order_dt`)
) ENGINE=InnoDB AUTO_INCREMENT=49645 DEFAULT CHARSET=utf8 COMMENT='EX订单概况明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(order_dt)
(PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_order_detail_bakup` */

DROP TABLE IF EXISTS `ex_order_detail_bakup`;

CREATE TABLE `ex_order_detail_bakup` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `order_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '下单日期',
  `order_tm` datetime DEFAULT NULL COMMENT '下单时间',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `send_dept` varchar(30) DEFAULT NULL COMMENT '寄件本部',
  `send_area` varchar(30) DEFAULT NULL COMMENT '寄件地区',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `send_network` varchar(30) DEFAULT NULL COMMENT '寄件网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `customer_waybill_no` varchar(100) DEFAULT NULL COMMENT '客户单号',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `consignment_name` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `is_electric` varchar(5) DEFAULT NULL COMMENT '是否带电',
  `delivery_agent_name` varchar(30) DEFAULT NULL COMMENT '派件代理名称',
  `provider_waybill_no` varchar(100) DEFAULT NULL COMMENT '服务商单号',
  `is_same_day_no_pick_up_count` int(2) DEFAULT '0' COMMENT '是否当天未收，0：是，1：否',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`order_dt`),
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH COMMENT '运单号索引',
  KEY `idx_customer_waybill_no` (`customer_waybill_no`) USING HASH COMMENT '客户单号索引',
  KEY `idx_send_country_abb` (`send_country_abb`) USING HASH COMMENT '寄件国家索引',
  KEY `idx_send_dept` (`send_dept`) USING HASH COMMENT '寄件本部索引',
  KEY `idx_send_area` (`send_area`) USING HASH COMMENT '寄件地区索引',
  KEY `idx_send_city` (`send_area`) USING HASH COMMENT '寄件城市索引',
  KEY `idx_send_network` (`send_network`) USING HASH COMMENT '寄件网点索引',
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH COMMENT '目的地国家索引',
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH COMMENT '目的地城市索引',
  KEY `idx_product_code` (`product_code`) USING HASH COMMENT '产品类型索引'
) ENGINE=InnoDB AUTO_INCREMENT=72603 DEFAULT CHARSET=utf8 COMMENT='EX订单概况明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(order_dt)
(PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_order_sum` */

DROP TABLE IF EXISTS `ex_order_sum`;

CREATE TABLE `ex_order_sum` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `order_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '下单日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `send_dept` varchar(30) DEFAULT NULL COMMENT '寄件本部',
  `send_area` varchar(30) DEFAULT NULL COMMENT '寄件地区',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `send_network` varchar(30) DEFAULT NULL COMMENT '寄件网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `order_count` int(10) DEFAULT NULL COMMENT '订单量',
  `same_day_no_pick_up_count` int(10) DEFAULT NULL COMMENT '当天未收量',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`order_dt`),
  KEY `idx_product_code` (`product_code`) USING HASH COMMENT '产品类型索引',
  KEY `idx_send_country_abb` (`send_country_abb`) USING HASH COMMENT '寄件国家索引',
  KEY `idx_send_dept` (`send_dept`) USING HASH COMMENT '寄件本部索引',
  KEY `idx_send_area` (`send_area`) USING HASH COMMENT '寄件地区索引',
  KEY `idx_send_city` (`send_area`) USING HASH COMMENT '寄件城市索引',
  KEY `idx_send_network` (`send_network`) USING HASH COMMENT '寄件网点索引',
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH COMMENT '目的地国家索引',
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH COMMENT '目的地城市索引'
) ENGINE=InnoDB AUTO_INCREMENT=269356 DEFAULT CHARSET=utf8 COMMENT='EX订单概况汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(order_dt)
(PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_order_sum_bakup` */

DROP TABLE IF EXISTS `ex_order_sum_bakup`;

CREATE TABLE `ex_order_sum_bakup` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `order_dt` date DEFAULT NULL COMMENT '下单日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `send_dept` varchar(30) DEFAULT NULL COMMENT '寄件本部',
  `send_area` varchar(30) DEFAULT NULL COMMENT '寄件地区',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `send_network` varchar(30) DEFAULT NULL COMMENT '寄件网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `order_count` int(10) DEFAULT NULL COMMENT '订单量',
  `same_day_no_pick_up_count` int(10) DEFAULT NULL COMMENT '当天未收量',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_product_code` (`product_code`) USING HASH COMMENT '产品类型索引',
  KEY `idx_send_country_abb` (`send_country_abb`) USING HASH COMMENT '寄件国家索引',
  KEY `idx_send_dept` (`send_dept`) USING HASH COMMENT '寄件本部索引',
  KEY `idx_send_area` (`send_area`) USING HASH COMMENT '寄件地区索引',
  KEY `idx_send_city` (`send_area`) USING HASH COMMENT '寄件城市索引',
  KEY `idx_send_network` (`send_network`) USING HASH COMMENT '寄件网点索引',
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH COMMENT '目的地国家索引',
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH COMMENT '目的地城市索引',
  KEY `idx_order_dt` (`order_dt`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2339 DEFAULT CHARSET=utf8 COMMENT='EX订单概况汇总表';

/*Table structure for table `ex_outer_port_detail_common` */

DROP TABLE IF EXISTS `ex_outer_port_detail_common`;

CREATE TABLE `ex_outer_port_detail_common` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `cons_content` varchar(500) DEFAULT '' COMMENT '托寄物',
  `aging_standard` datetime DEFAULT NULL COMMENT '时效标准',
  `checkout_pack_num` varchar(100) DEFAULT '' COMMENT '签出包号',
  `clearance_batch` varchar(100) DEFAULT '' COMMENT '报关批次',
  `clearance_time` datetime DEFAULT NULL COMMENT '报关时间',
  `cons_value` double(17,3) DEFAULT NULL COMMENT '声明价值',
  `customer_card_code` varchar(50) DEFAULT '' COMMENT '客户月结卡号',
  `customer_code` varchar(50) DEFAULT '' COMMENT '客户编码',
  `dest_area_code` varchar(30) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目标城市代码',
  `dest_country_code` varchar(30) DEFAULT NULL COMMENT '目标国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目标地区编码',
  `dest_network_code` varchar(30) DEFAULT NULL COMMENT '目标地网点',
  `duration_hours` double(10,3) DEFAULT NULL COMMENT '耗时H',
  `electric_status` int(1) DEFAULT NULL COMMENT '是否带电 1：是 0：否',
  `export_country` varchar(30) DEFAULT NULL COMMENT '出口国家',
  `export_port` varchar(30) DEFAULT NULL COMMENT '出口口岸',
  `import_country` varchar(30) DEFAULT NULL COMMENT '进口国家',
  `import_port` varchar(30) DEFAULT NULL COMMENT '进口口岸',
  `main_number` varchar(50) DEFAULT NULL COMMENT '主提单号',
  `main_waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `charged_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `monitor_status` int(1) DEFAULT NULL COMMENT ' 监控状态 （0：无标准，1：未预警，2：已预警，3：已超时，4：已达成）',
  `network_category` varchar(30) DEFAULT NULL COMMENT '网点类型（二级分类）',
  `port_network` varchar(30) DEFAULT NULL COMMENT '出口网点',
  `product_code` varchar(30) DEFAULT NULL COMMENT '产品类型',
  `cons_qty` int(5) DEFAULT NULL COMMENT '件数',
  `real_weight` double(17,3) DEFAULT NULL COMMENT ' 实际重量',
  `retention_time_str` varchar(255) DEFAULT NULL COMMENT '滞留时间字符串',
  `retention_op_code` varchar(100) DEFAULT NULL COMMENT '滞留巴枪操作码',
  `retention_reason` varchar(500) DEFAULT NULL COMMENT '滞留原因',
  `first_retention_length` int(10) DEFAULT NULL COMMENT '首次滞留时长(min)',
  `first_retention_time` datetime DEFAULT NULL COMMENT '首次滞留时间',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `same_day_load_status` int(1) DEFAULT NULL COMMENT '是否当天发出（1：是，0：否）',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家',
  `source_network_code` varchar(30) DEFAULT NULL COMMENT '原寄地网点',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地区部',
  `flight_no` varchar(50) DEFAULT NULL COMMENT '航班号码',
  `actual_fly_time` datetime DEFAULT NULL COMMENT '航班起飞时间',
  `actual_arrive_time` datetime DEFAULT NULL COMMENT '实际落地时间',
  `overtime_warn_minute` double(17,3) DEFAULT NULL COMMENT '超时/预警分钟 (当前时间-时效时间)',
  `warn_deta_hours_str` varchar(10) DEFAULT NULL COMMENT ' 预警/超时（h）',
  `warn_deta_days_str` varchar(10) DEFAULT NULL COMMENT ' 预警/超时（d）',
  PRIMARY KEY (`id`,`insert_time`) USING BTREE,
  KEY `main_waybill_no` (`main_waybill_no`),
  KEY `dest_area_code` (`dest_area_code`),
  KEY `dest_city_code` (`dest_city_code`),
  KEY `dest_country_code` (`dest_country_code`),
  KEY `dest_dept_code` (`dest_dept_code`),
  KEY `source_area_code` (`source_area_code`),
  KEY `source_city_code` (`source_city_code`),
  KEY `source_country_code` (`source_country_code`),
  KEY `source_dept_code` (`source_dept_code`),
  KEY `product_code` (`product_code`),
  KEY `port_network` (`port_network`),
  KEY `customer_code` (`customer_code`),
  KEY `customer_card_code` (`customer_card_code`),
  KEY `electric_status` (`electric_status`),
  KEY `same_day_load_status` (`same_day_load_status`),
  KEY `clearance_batch` (`clearance_batch`),
  KEY `main_number` (`main_number`),
  KEY `checkout_pack_num` (`checkout_pack_num`),
  KEY `monitor_status` (`monitor_status`),
  KEY `flight_no` (`flight_no`),
  KEY `dest_network_code` (`dest_network_code`),
  KEY `insert_time` (`insert_time`),
  KEY `insert_time_2` (`insert_time`)
) ENGINE=InnoDB AUTO_INCREMENT=303 DEFAULT CHARSET=utf8mb4
/*!50500 PARTITION BY RANGE  COLUMNS(insert_time)
(PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190512 VALUES LESS THAN ('2019-05-12') ENGINE = InnoDB,
 PARTITION p20190519 VALUES LESS THAN ('2019-05-19') ENGINE = InnoDB,
 PARTITION p20190526 VALUES LESS THAN ('2019-05-26') ENGINE = InnoDB,
 PARTITION p20190602 VALUES LESS THAN ('2019-06-02') ENGINE = InnoDB,
 PARTITION p20190609 VALUES LESS THAN ('2019-06-09') ENGINE = InnoDB,
 PARTITION p20190616 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_outer_port_detail_in` */

DROP TABLE IF EXISTS `ex_outer_port_detail_in`;

CREATE TABLE `ex_outer_port_detail_in` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `batch_date` datetime NOT NULL COMMENT '班次日期',
  `main_waybill_no` varchar(50) NOT NULL DEFAULT '' COMMENT '运单号',
  `unload_batch` varchar(50) DEFAULT '' COMMENT '卸车班次',
  `unload_time` datetime NOT NULL COMMENT '卸车时间',
  `unload_vehicle_logo` varchar(100) DEFAULT '' COMMENT '卸车车标',
  `port_network` varchar(30) DEFAULT '' COMMENT '口岸网点',
  `pre_warn_hour` double(10,3) DEFAULT NULL COMMENT '提前预警量（单位 hour）, 生成批次的时候插入',
  PRIMARY KEY (`id`,`batch_date`) USING BTREE,
  KEY `main_waybill_no` (`main_waybill_no`),
  KEY `unload_vehicle_logo` (`unload_vehicle_logo`),
  KEY `port_network` (`port_network`),
  KEY `batch_date` (`batch_date`),
  KEY `batch_date_2` (`batch_date`)
) ENGINE=InnoDB AUTO_INCREMENT=161 DEFAULT CHARSET=utf8mb4 COMMENT='ex海外口岸监控详情卸车表'
/*!50500 PARTITION BY RANGE  COLUMNS(batch_date)
(PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190512 VALUES LESS THAN ('2019-05-12') ENGINE = InnoDB,
 PARTITION p20190519 VALUES LESS THAN ('2019-05-19') ENGINE = InnoDB,
 PARTITION p20190526 VALUES LESS THAN ('2019-05-26') ENGINE = InnoDB,
 PARTITION p20190602 VALUES LESS THAN ('2019-06-02') ENGINE = InnoDB,
 PARTITION p20190609 VALUES LESS THAN ('2019-06-09') ENGINE = InnoDB,
 PARTITION p20190616 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_outer_port_detail_out` */

DROP TABLE IF EXISTS `ex_outer_port_detail_out`;

CREATE TABLE `ex_outer_port_detail_out` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `line_code` varchar(50) DEFAULT NULL COMMENT '线路编码',
  `load_time` datetime NOT NULL COMMENT '装车时间',
  `load_vehicle_logo` varchar(100) DEFAULT '' COMMENT '装车车标',
  `main_waybill_no` varchar(50) NOT NULL DEFAULT '' COMMENT '运单号',
  `port_network` varchar(30) DEFAULT NULL COMMENT '口岸网点',
  PRIMARY KEY (`id`,`load_time`) USING BTREE,
  KEY `main_waybill_no` (`main_waybill_no`),
  KEY `load_vehicle_logo` (`load_vehicle_logo`),
  KEY `port_network` (`port_network`),
  KEY `load_time` (`load_time`),
  KEY `load_time_2` (`load_time`)
) ENGINE=InnoDB AUTO_INCREMENT=162 DEFAULT CHARSET=utf8mb4 COMMENT='ex海外口岸监控详细装车表'
/*!50500 PARTITION BY RANGE  COLUMNS(load_time)
(PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190512 VALUES LESS THAN ('2019-05-12') ENGINE = InnoDB,
 PARTITION p20190519 VALUES LESS THAN ('2019-05-19') ENGINE = InnoDB,
 PARTITION p20190526 VALUES LESS THAN ('2019-05-26') ENGINE = InnoDB,
 PARTITION p20190602 VALUES LESS THAN ('2019-06-02') ENGINE = InnoDB,
 PARTITION p20190609 VALUES LESS THAN ('2019-06-09') ENGINE = InnoDB,
 PARTITION p20190616 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_outer_port_sum` */

DROP TABLE IF EXISTS `ex_outer_port_sum`;

CREATE TABLE `ex_outer_port_sum` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `batch_date` date NOT NULL COMMENT '班次日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `network_category` varchar(30) DEFAULT NULL COMMENT '网点类型（二级分类）',
  `customer_card_code` varchar(50) DEFAULT '' COMMENT '客户月结卡号',
  `customer_code` varchar(50) DEFAULT '' COMMENT '客户编码',
  `unload_vehicle_logo` varchar(100) DEFAULT '' COMMENT '卸车车标',
  `unload_batch` varchar(50) DEFAULT '' COMMENT '卸车班次',
  `checkout_pack_num` varchar(100) DEFAULT '' COMMENT '签出包号',
  `clearance_batch` varchar(100) DEFAULT '' COMMENT '报关批次',
  `main_number` varchar(50) DEFAULT NULL COMMENT '主提单号',
  `flight_no` varchar(50) DEFAULT NULL COMMENT '航班号码',
  `port_network` varchar(30) DEFAULT NULL COMMENT '出口网点',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家',
  `source_network_code` varchar(30) DEFAULT NULL COMMENT '原寄地网点',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地区部',
  `dest_area_code` varchar(30) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目标城市代码',
  `dest_country_code` varchar(30) DEFAULT NULL COMMENT '目标国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目标地区编码',
  `dest_network_code` varchar(30) DEFAULT NULL COMMENT '目标地网点',
  `cons_qty` int(5) DEFAULT NULL COMMENT '件数',
  `real_weight` double(17,3) DEFAULT NULL COMMENT ' 实际重量',
  `charged_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `load_vehicle_logo` varchar(100) DEFAULT '' COMMENT '发车装车车标',
  `retention_count` int(10) DEFAULT '0' COMMENT '滞留票数',
  `actual_arrival_count` int(10) DEFAULT '0' COMMENT '实际到件量',
  `no_load_count` int(10) DEFAULT '0' COMMENT '未装车票数',
  `ontime_load_count` bigint(11) DEFAULT '0' COMMENT '准点发件量',
  `duration_hours` double(17,3) DEFAULT '0.000' COMMENT ' 耗时（小时）',
  `record_count` bigint(11) DEFAULT '0' COMMENT ' 汇总的记录条数',
  `overtime_to_load_count` bigint(11) DEFAULT '0' COMMENT '超时发件总量(要发送的总量)',
  `overtime_load_count` bigint(11) DEFAULT '0' COMMENT '超时已发票数',
  `overtime_not_load_count` bigint(11) DEFAULT '0' COMMENT '超时未发票数',
  `same_day_load_count` bigint(11) DEFAULT '0' COMMENT '当天已发票数',
  `load_count` bigint(11) DEFAULT '0' COMMENT '累计已发',
  `not_load_count` bigint(11) DEFAULT '0' COMMENT '累计已发',
  `plan_bill_count` bigint(11) DEFAULT '0' COMMENT '预测到件量',
  `warn_count` bigint(11) DEFAULT '0' COMMENT '预警量',
  `electric_status` int(1) DEFAULT NULL COMMENT '是否带电',
  PRIMARY KEY (`id`,`batch_date`) USING BTREE,
  KEY `product_code` (`product_code`) USING BTREE,
  KEY `customer_code` (`customer_code`) USING BTREE,
  KEY `customer_card_code` (`customer_card_code`) USING BTREE,
  KEY `unload_vehicle_logo` (`unload_vehicle_logo`) USING BTREE,
  KEY `checkout_pack_num` (`checkout_pack_num`) USING BTREE,
  KEY `clearance_batch` (`clearance_batch`) USING BTREE,
  KEY `main_number` (`main_number`) USING BTREE,
  KEY `flight_no` (`flight_no`) USING BTREE,
  KEY `unload_batch` (`unload_batch`) USING BTREE,
  KEY `source_country_code` (`source_country_code`) USING BTREE,
  KEY `source_city_code` (`source_city_code`) USING BTREE,
  KEY `source_dept_code` (`source_dept_code`) USING BTREE,
  KEY `source_network_code` (`source_network_code`) USING BTREE,
  KEY `source_area_code` (`source_area_code`) USING BTREE,
  KEY `dest_area_code` (`dest_area_code`) USING BTREE,
  KEY `dest_city_code` (`dest_city_code`) USING BTREE,
  KEY `dest_country_code` (`dest_country_code`) USING BTREE,
  KEY `dest_dept_code` (`dest_dept_code`) USING BTREE,
  KEY `dest_network_code` (`dest_network_code`) USING BTREE,
  KEY `electric_status` (`electric_status`),
  KEY `batch_date` (`batch_date`),
  KEY `batch_date_2` (`batch_date`)
) ENGINE=InnoDB AUTO_INCREMENT=740885 DEFAULT CHARSET=utf8 COMMENT='ex海外口岸概况明细汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(batch_date)
(PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-13') ENGINE = InnoDB,
 PARTITION p20190214 VALUES LESS THAN ('2019-02-14') ENGINE = InnoDB,
 PARTITION p20190215 VALUES LESS THAN ('2019-02-15') ENGINE = InnoDB,
 PARTITION p20190216 VALUES LESS THAN ('2019-02-16') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190219 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190220 VALUES LESS THAN ('2019-02-20') ENGINE = InnoDB,
 PARTITION p20190221 VALUES LESS THAN ('2019-02-21') ENGINE = InnoDB,
 PARTITION p20190222 VALUES LESS THAN ('2019-02-22') ENGINE = InnoDB,
 PARTITION p20190223 VALUES LESS THAN ('2019-02-23') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN ('2019-02-27') ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN ('2019-02-28') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190302 VALUES LESS THAN ('2019-03-02') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190306 VALUES LESS THAN ('2019-03-06') ENGINE = InnoDB,
 PARTITION p20190307 VALUES LESS THAN ('2019-03-07') ENGINE = InnoDB,
 PARTITION p20190308 VALUES LESS THAN ('2019-03-08') ENGINE = InnoDB,
 PARTITION p20190309 VALUES LESS THAN ('2019-03-09') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190313 VALUES LESS THAN ('2019-03-13') ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN ('2019-03-14') ENGINE = InnoDB,
 PARTITION p20190315 VALUES LESS THAN ('2019-03-15') ENGINE = InnoDB,
 PARTITION p20190316 VALUES LESS THAN ('2019-03-16') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190320 VALUES LESS THAN ('2019-03-20') ENGINE = InnoDB,
 PARTITION p20190321 VALUES LESS THAN ('2019-03-21') ENGINE = InnoDB,
 PARTITION p20190322 VALUES LESS THAN ('2019-03-22') ENGINE = InnoDB,
 PARTITION p20190323 VALUES LESS THAN ('2019-03-23') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190327 VALUES LESS THAN ('2019-03-27') ENGINE = InnoDB,
 PARTITION p20190328 VALUES LESS THAN ('2019-03-28') ENGINE = InnoDB,
 PARTITION p20190329 VALUES LESS THAN ('2019-03-29') ENGINE = InnoDB,
 PARTITION p20190330 VALUES LESS THAN ('2019-03-30') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190403 VALUES LESS THAN ('2019-04-03') ENGINE = InnoDB,
 PARTITION p20190404 VALUES LESS THAN ('2019-04-04') ENGINE = InnoDB,
 PARTITION p20190405 VALUES LESS THAN ('2019-04-05') ENGINE = InnoDB,
 PARTITION p20190406 VALUES LESS THAN ('2019-04-06') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190410 VALUES LESS THAN ('2019-04-10') ENGINE = InnoDB,
 PARTITION p20190411 VALUES LESS THAN ('2019-04-11') ENGINE = InnoDB,
 PARTITION p20190412 VALUES LESS THAN ('2019-04-12') ENGINE = InnoDB,
 PARTITION p20190413 VALUES LESS THAN ('2019-04-13') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190417 VALUES LESS THAN ('2019-04-17') ENGINE = InnoDB,
 PARTITION p20190418 VALUES LESS THAN ('2019-04-18') ENGINE = InnoDB,
 PARTITION p20190419 VALUES LESS THAN ('2019-04-19') ENGINE = InnoDB,
 PARTITION p20190420 VALUES LESS THAN ('2019-04-20') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190424 VALUES LESS THAN ('2019-04-24') ENGINE = InnoDB,
 PARTITION p20190425 VALUES LESS THAN ('2019-04-25') ENGINE = InnoDB,
 PARTITION p20190426 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_pick_up_detail` */

DROP TABLE IF EXISTS `ex_pick_up_detail`;

CREATE TABLE `ex_pick_up_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `pick_up_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '收件日期',
  `pick_up_tm` datetime DEFAULT NULL COMMENT '收件时间',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `send_dept` varchar(30) DEFAULT NULL COMMENT '寄件本部',
  `send_area` varchar(30) DEFAULT NULL COMMENT '寄件地区',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `send_network` varchar(30) DEFAULT NULL COMMENT '寄件网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `pick_up_network_load_tm` datetime DEFAULT NULL COMMENT '收件网点装车时间',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `consignment_name` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `plan_goods_network` varchar(30) DEFAULT NULL COMMENT '规划集货网点',
  `sign_in_network` varchar(30) DEFAULT NULL COMMENT '签入网点',
  `weigh_tm` datetime DEFAULT NULL COMMENT '称重时间',
  `sign_out_dt` date DEFAULT NULL COMMENT '签出日期',
  `sign_out_tm` datetime DEFAULT NULL COMMENT '签出时间',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包袋号',
  `delivery_network` varchar(30) DEFAULT NULL COMMENT '派件网点',
  `delivery_tm` datetime DEFAULT NULL COMMENT '派件时间',
  `n_days_aging` varchar(10) DEFAULT NULL COMMENT 'N天时效',
  `is_same_day_no_send_count` int(2) DEFAULT NULL COMMENT '是否当天未发，0：是，1：否',
  `is_no_delivery_count` int(2) DEFAULT NULL COMMENT '是否未派件，0：是，1：否',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`pick_up_dt`),
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH COMMENT '运单号索引',
  KEY `idx_send_country_abb` (`send_country_abb`) USING HASH COMMENT '寄件国家索引',
  KEY `idx_send_dept` (`send_dept`) USING HASH COMMENT '寄件本部索引',
  KEY `idx_send_area` (`send_area`) USING HASH COMMENT '寄件地区索引',
  KEY `idx_send_city` (`send_area`) USING HASH COMMENT '寄件城市索引',
  KEY `idx_send_network` (`send_network`) USING HASH COMMENT '寄件网点索引',
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH COMMENT '目的地国家索引',
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH COMMENT '目的地城市索引',
  KEY `idx_product_code` (`product_code`) USING HASH COMMENT '产品类型索引',
  KEY `idx_sign_out_package_no` (`sign_out_package_no`) USING HASH COMMENT '包袋号索引',
  KEY `idx_sign_out_dt` (`sign_out_dt`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8634577 DEFAULT CHARSET=utf8 COMMENT='EX收件概况明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(pick_up_dt)
(PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_pick_up_detail_bakup` */

DROP TABLE IF EXISTS `ex_pick_up_detail_bakup`;

CREATE TABLE `ex_pick_up_detail_bakup` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `pick_up_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '收件日期',
  `pick_up_tm` datetime DEFAULT NULL COMMENT '收件时间',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `send_dept` varchar(30) DEFAULT NULL COMMENT '寄件本部',
  `send_area` varchar(30) DEFAULT NULL COMMENT '寄件地区',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `send_network` varchar(30) DEFAULT NULL COMMENT '寄件网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `pick_up_network_load_tm` datetime DEFAULT NULL COMMENT '收件网点装车时间',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `consignment_name` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `plan_goods_network` varchar(30) DEFAULT NULL COMMENT '规划集货网点',
  `sign_in_network` varchar(30) DEFAULT NULL COMMENT '签入网点',
  `weigh_tm` datetime DEFAULT NULL COMMENT '称重时间',
  `sign_out_dt` date DEFAULT NULL COMMENT '签出日期',
  `sign_out_tm` datetime DEFAULT NULL COMMENT '签出时间',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包袋号',
  `delivery_network` varchar(30) DEFAULT NULL COMMENT '派件网点',
  `delivery_tm` datetime DEFAULT NULL COMMENT '派件时间',
  `n_days_aging` varchar(10) DEFAULT NULL COMMENT 'N天时效',
  `is_same_day_no_send_count` int(2) DEFAULT NULL COMMENT '是否当天未发，0：是，1：否',
  `is_no_delivery_count` int(2) DEFAULT NULL COMMENT '是否未派件，0：是，1：否',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`pick_up_dt`),
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH COMMENT '运单号索引',
  KEY `idx_send_country_abb` (`send_country_abb`) USING HASH COMMENT '寄件国家索引',
  KEY `idx_send_dept` (`send_dept`) USING HASH COMMENT '寄件本部索引',
  KEY `idx_send_area` (`send_area`) USING HASH COMMENT '寄件地区索引',
  KEY `idx_send_city` (`send_area`) USING HASH COMMENT '寄件城市索引',
  KEY `idx_send_network` (`send_network`) USING HASH COMMENT '寄件网点索引',
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH COMMENT '目的地国家索引',
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH COMMENT '目的地城市索引',
  KEY `idx_product_code` (`product_code`) USING HASH COMMENT '产品类型索引',
  KEY `idx_sign_out_package_no` (`sign_out_package_no`) USING HASH COMMENT '包袋号索引',
  KEY `idx_sign_out_dt` (`sign_out_dt`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=129 DEFAULT CHARSET=utf8 COMMENT='EX收件概况明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(pick_up_dt)
(PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_pick_up_detail_copy` */

DROP TABLE IF EXISTS `ex_pick_up_detail_copy`;

CREATE TABLE `ex_pick_up_detail_copy` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `pick_up_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '收件日期',
  `pick_up_tm` datetime DEFAULT NULL COMMENT '收件时间',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `send_dept` varchar(30) DEFAULT NULL COMMENT '寄件本部',
  `send_area` varchar(30) DEFAULT NULL COMMENT '寄件地区',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `send_network` varchar(30) DEFAULT NULL COMMENT '寄件网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `pick_up_network_load_tm` datetime DEFAULT NULL COMMENT '收件网点装车时间',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `consignment_name` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `plan_goods_network` varchar(30) DEFAULT NULL COMMENT '规划集货网点',
  `sign_in_network` varchar(30) DEFAULT NULL COMMENT '签入网点',
  `weigh_tm` datetime DEFAULT NULL COMMENT '称重时间',
  `sign_out_dt` date DEFAULT NULL COMMENT '签出日期',
  `sign_out_tm` datetime DEFAULT NULL COMMENT '签出时间',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包袋号',
  `delivery_network` varchar(30) DEFAULT NULL COMMENT '派件网点',
  `delivery_tm` datetime DEFAULT NULL COMMENT '派件时间',
  `n_days_aging` varchar(10) DEFAULT NULL COMMENT 'N天时效',
  `is_same_day_no_send_count` int(2) DEFAULT NULL COMMENT '是否当天未发，0：是，1：否',
  `is_no_delivery_count` int(2) DEFAULT NULL COMMENT '是否未派件，0：是，1：否',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`pick_up_dt`),
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH COMMENT '运单号索引',
  KEY `idx_send_country_abb` (`send_country_abb`) USING HASH COMMENT '寄件国家索引',
  KEY `idx_send_dept` (`send_dept`) USING HASH COMMENT '寄件本部索引',
  KEY `idx_send_area` (`send_area`) USING HASH COMMENT '寄件地区索引',
  KEY `idx_send_city` (`send_area`) USING HASH COMMENT '寄件城市索引',
  KEY `idx_send_network` (`send_network`) USING HASH COMMENT '寄件网点索引',
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH COMMENT '目的地国家索引',
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH COMMENT '目的地城市索引',
  KEY `idx_product_code` (`product_code`) USING HASH COMMENT '产品类型索引',
  KEY `idx_sign_out_package_no` (`sign_out_package_no`) USING HASH COMMENT '包袋号索引',
  KEY `idx_sign_out_dt` (`sign_out_dt`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COMMENT='EX收件概况明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(pick_up_dt)
(PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_pick_up_link_warning_detail` */

DROP TABLE IF EXISTS `ex_pick_up_link_warning_detail`;

CREATE TABLE `ex_pick_up_link_warning_detail` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `link_category` varchar(50) DEFAULT NULL COMMENT '环节分类',
  `waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `dest_country_code` varchar(30) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市代码',
  `electric_status` int(1) DEFAULT NULL COMMENT '是否带电',
  `customer_code` varchar(50) DEFAULT NULL COMMENT '客户代码',
  `customer_card_code` varchar(50) DEFAULT NULL COMMENT '客户月结卡号',
  `quantity` bigint(11) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `cons_content` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `cons_value` double(17,3) DEFAULT NULL COMMENT '声明价值',
  `order_time` datetime NOT NULL COMMENT '下单时间',
  `order_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '下单日期',
  `link_batch_code` varchar(50) DEFAULT NULL COMMENT '环节班次编码',
  `should_pick_up_time` datetime DEFAULT NULL COMMENT '应收时间',
  `warn_time` datetime DEFAULT NULL COMMENT '预警时间',
  `should_pick_up_place_type` int(1) DEFAULT NULL COMMENT '应收地类型（0：地区，1：网点）',
  `should_pick_up_place_code` varchar(30) DEFAULT NULL COMMENT '应收地代码',
  `pick_up_network_code` varchar(30) DEFAULT NULL COMMENT '收件网点代码',
  `pick_up_time` datetime DEFAULT NULL COMMENT '收件时间',
  `pick_up_date` date DEFAULT NULL COMMENT '收件日期',
  `same_day_pick_up_status` int(1) DEFAULT NULL COMMENT '是否当天收件（1：是，0：否）',
  `waste_minute` bigint(11) DEFAULT NULL COMMENT '耗时分钟',
  `overtime_warn_minute` bigint(11) DEFAULT NULL COMMENT '超时/预警分钟',
  `overtime_warn_day` bigint(11) DEFAULT NULL COMMENT '超时/预警天数',
  `link_batch_date` date DEFAULT NULL COMMENT '环节班次日期',
  PRIMARY KEY (`id`,`order_date`),
  UNIQUE KEY `waybill_no` (`waybill_no`,`order_date`) USING BTREE,
  KEY `product_code` (`product_code`) USING BTREE,
  KEY `source_country_code` (`source_country_code`) USING BTREE,
  KEY `source_city_code` (`source_city_code`) USING BTREE,
  KEY `source_dept_code` (`source_dept_code`) USING BTREE,
  KEY `source_area_code` (`source_area_code`) USING BTREE,
  KEY `dest_country_code` (`dest_country_code`) USING BTREE,
  KEY `dest_city_code` (`dest_city_code`) USING BTREE,
  KEY `electric_status` (`electric_status`) USING BTREE,
  KEY `customer_code` (`customer_code`) USING BTREE,
  KEY `customer_card_code` (`customer_card_code`) USING BTREE,
  KEY `order_date` (`order_date`) USING BTREE,
  KEY `link_batch_code` (`link_batch_code`) USING BTREE,
  KEY `pick_up_network_code` (`pick_up_network_code`) USING BTREE,
  KEY `pick_up_date` (`pick_up_date`) USING BTREE,
  KEY `same_day_pick_up_status` (`same_day_pick_up_status`) USING BTREE,
  KEY `overtime_warn_minute` (`overtime_warn_minute`) USING BTREE,
  KEY `group_by_column` (`link_category`,`product_code`,`source_city_code`,`dest_city_code`,`electric_status`,`customer_code`,`customer_card_code`,`order_date`,`link_batch_code`,`pick_up_network_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2533698 DEFAULT CHARSET=utf8 COMMENT='EX收件环节预警明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(order_date)
(PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_pick_up_link_warning_summary` */

DROP TABLE IF EXISTS `ex_pick_up_link_warning_summary`;

CREATE TABLE `ex_pick_up_link_warning_summary` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `link_category` varchar(30) DEFAULT NULL COMMENT '环节分类',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `dest_country_code` varchar(30) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市代码',
  `electric_status` int(1) DEFAULT NULL COMMENT '是否带电',
  `customer_code` varchar(50) DEFAULT NULL COMMENT '客户代码',
  `customer_card_code` varchar(50) DEFAULT NULL COMMENT '客户月结卡号',
  `order_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '下单日期',
  `link_batch_code` varchar(50) DEFAULT NULL COMMENT '环节班次编码',
  `pick_up_network_code` varchar(30) DEFAULT NULL COMMENT '收件网点代码',
  `should_pick_up_time` datetime DEFAULT NULL COMMENT '应收时间',
  `order_count` bigint(11) DEFAULT NULL COMMENT '下单票数',
  `quantity` bigint(11) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `pick_up_count` bigint(11) DEFAULT NULL COMMENT '已收票数',
  `no_pick_up_count` bigint(11) DEFAULT NULL COMMENT '未收票数',
  `ontime_pick_up_count` bigint(11) DEFAULT NULL COMMENT '准点已收票数',
  `overtime_pick_up_count` bigint(11) DEFAULT NULL COMMENT '超时已收票数',
  `overtime_no_pick_up_count` bigint(11) DEFAULT NULL COMMENT '超时未收票数',
  `overtime_count` bigint(11) DEFAULT NULL COMMENT '超时票数',
  `warn_count` bigint(11) DEFAULT NULL COMMENT '预警票数',
  `same_day_pick_up_count` bigint(11) DEFAULT NULL COMMENT '当天已收票数',
  `avg_waste_minute` bigint(11) DEFAULT NULL COMMENT '平均耗时（分钟）',
  PRIMARY KEY (`id`,`order_date`),
  UNIQUE KEY `unique_key_01` (`link_category`,`product_code`,`source_city_code`,`dest_city_code`,`electric_status`,`customer_code`,`customer_card_code`,`order_date`,`link_batch_code`,`pick_up_network_code`) USING BTREE,
  KEY `product_code` (`product_code`) USING BTREE,
  KEY `source_country_code` (`source_country_code`) USING BTREE,
  KEY `source_city_code` (`source_city_code`) USING BTREE,
  KEY `source_dept_code` (`source_dept_code`) USING BTREE,
  KEY `source_area_code` (`source_area_code`) USING BTREE,
  KEY `dest_country_code` (`dest_country_code`) USING BTREE,
  KEY `dest_city_code` (`dest_city_code`) USING BTREE,
  KEY `electric_status` (`electric_status`) USING BTREE,
  KEY `customer_code` (`customer_code`) USING BTREE,
  KEY `customer_card_code` (`customer_card_code`) USING BTREE,
  KEY `order_date` (`order_date`) USING BTREE,
  KEY `link_batch_code` (`link_batch_code`) USING BTREE,
  KEY `pick_up_network_code` (`pick_up_network_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=478845 DEFAULT CHARSET=utf8 COMMENT='EX收件环节预警汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(order_date)
(PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-13') ENGINE = InnoDB,
 PARTITION p20190214 VALUES LESS THAN ('2019-02-14') ENGINE = InnoDB,
 PARTITION p20190215 VALUES LESS THAN ('2019-02-15') ENGINE = InnoDB,
 PARTITION p20190216 VALUES LESS THAN ('2019-02-16') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190219 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190220 VALUES LESS THAN ('2019-02-20') ENGINE = InnoDB,
 PARTITION p20190221 VALUES LESS THAN ('2019-02-21') ENGINE = InnoDB,
 PARTITION p20190222 VALUES LESS THAN ('2019-02-22') ENGINE = InnoDB,
 PARTITION p20190223 VALUES LESS THAN ('2019-02-23') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN ('2019-02-27') ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN ('2019-02-28') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190302 VALUES LESS THAN ('2019-03-02') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190306 VALUES LESS THAN ('2019-03-06') ENGINE = InnoDB,
 PARTITION p20190307 VALUES LESS THAN ('2019-03-07') ENGINE = InnoDB,
 PARTITION p20190308 VALUES LESS THAN ('2019-03-08') ENGINE = InnoDB,
 PARTITION p20190309 VALUES LESS THAN ('2019-03-09') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190313 VALUES LESS THAN ('2019-03-13') ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN ('2019-03-14') ENGINE = InnoDB,
 PARTITION p20190315 VALUES LESS THAN ('2019-03-15') ENGINE = InnoDB,
 PARTITION p20190316 VALUES LESS THAN ('2019-03-16') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190320 VALUES LESS THAN ('2019-03-20') ENGINE = InnoDB,
 PARTITION p20190321 VALUES LESS THAN ('2019-03-21') ENGINE = InnoDB,
 PARTITION p20190322 VALUES LESS THAN ('2019-03-22') ENGINE = InnoDB,
 PARTITION p20190323 VALUES LESS THAN ('2019-03-23') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190327 VALUES LESS THAN ('2019-03-27') ENGINE = InnoDB,
 PARTITION p20190328 VALUES LESS THAN ('2019-03-28') ENGINE = InnoDB,
 PARTITION p20190329 VALUES LESS THAN ('2019-03-29') ENGINE = InnoDB,
 PARTITION p20190330 VALUES LESS THAN ('2019-03-30') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190403 VALUES LESS THAN ('2019-04-03') ENGINE = InnoDB,
 PARTITION p20190404 VALUES LESS THAN ('2019-04-04') ENGINE = InnoDB,
 PARTITION p20190405 VALUES LESS THAN ('2019-04-05') ENGINE = InnoDB,
 PARTITION p20190406 VALUES LESS THAN ('2019-04-06') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190410 VALUES LESS THAN ('2019-04-10') ENGINE = InnoDB,
 PARTITION p20190411 VALUES LESS THAN ('2019-04-11') ENGINE = InnoDB,
 PARTITION p20190412 VALUES LESS THAN ('2019-04-12') ENGINE = InnoDB,
 PARTITION p20190413 VALUES LESS THAN ('2019-04-13') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190417 VALUES LESS THAN ('2019-04-17') ENGINE = InnoDB,
 PARTITION p20190418 VALUES LESS THAN ('2019-04-18') ENGINE = InnoDB,
 PARTITION p20190419 VALUES LESS THAN ('2019-04-19') ENGINE = InnoDB,
 PARTITION p20190420 VALUES LESS THAN ('2019-04-20') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190424 VALUES LESS THAN ('2019-04-24') ENGINE = InnoDB,
 PARTITION p20190425 VALUES LESS THAN ('2019-04-25') ENGINE = InnoDB,
 PARTITION p20190426 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_pick_up_network_warning_detail` */

DROP TABLE IF EXISTS `ex_pick_up_network_warning_detail`;

CREATE TABLE `ex_pick_up_network_warning_detail` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `network_category` varchar(30) DEFAULT NULL COMMENT '网点分类',
  `waybill_no` varchar(30) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `dest_country_code` varchar(30) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市代码',
  `plan_export_port` varchar(30) DEFAULT NULL COMMENT '规划出口口岸',
  `electric_status` int(1) DEFAULT NULL COMMENT '是否带电（1：是，0：否）',
  `mix_bag_status` int(1) DEFAULT NULL COMMENT '是否混包（1：是，0：否）',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_card_code` varchar(30) DEFAULT NULL COMMENT '客户月结卡号',
  `quantity` bigint(11) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `cons_content` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `cons_value` double(17,3) DEFAULT NULL COMMENT '声明价值',
  `pick_up_network_code` varchar(30) NOT NULL COMMENT '收件网点代码',
  `pick_up_time` datetime NOT NULL COMMENT '收件时间',
  `pick_up_date` date NOT NULL COMMENT '收件日期',
  `pick_up_batch_code` varchar(30) DEFAULT NULL COMMENT '收件班次编码',
  `pick_up_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '收件班次日期',
  `should_load_time` datetime DEFAULT NULL COMMENT '应发时间',
  `warn_time` datetime DEFAULT NULL COMMENT '预警时间',
  `load_network_code` varchar(30) DEFAULT NULL COMMENT '装车网点代码',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `load_date` date DEFAULT NULL COMMENT '装车日期',
  `same_day_load_status` int(1) DEFAULT NULL COMMENT '是否当天发出（1：是，0：否）',
  `waste_minute` bigint(11) DEFAULT NULL COMMENT '耗时分钟',
  `overtime_warn_minute` bigint(11) DEFAULT NULL COMMENT '超时/预警分钟',
  `overtime_warn_day` bigint(11) DEFAULT NULL COMMENT '超时/预警天数',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_op_code` varchar(50) DEFAULT NULL COMMENT '滞留巴枪操作码',
  `retention_reason` varchar(200) DEFAULT NULL COMMENT '滞留原因',
  `retention_minute` bigint(11) DEFAULT NULL COMMENT '滞留分钟',
  PRIMARY KEY (`id`,`pick_up_batch_date`),
  UNIQUE KEY `waybill_no` (`waybill_no`,`pick_up_batch_date`) USING BTREE,
  KEY `product_code` (`product_code`) USING BTREE,
  KEY `source_country_code` (`source_country_code`) USING BTREE,
  KEY `source_city_code` (`source_city_code`) USING BTREE,
  KEY `source_dept_code` (`source_dept_code`) USING BTREE,
  KEY `source_area_code` (`source_area_code`) USING BTREE,
  KEY `dest_country_code` (`dest_country_code`) USING BTREE,
  KEY `dest_city_code` (`dest_city_code`) USING BTREE,
  KEY `plan_export_port` (`plan_export_port`) USING BTREE,
  KEY `electric_status` (`electric_status`) USING BTREE,
  KEY `customer_code` (`customer_code`) USING BTREE,
  KEY `customer_card_code` (`customer_card_code`) USING BTREE,
  KEY `pick_up_network_code` (`pick_up_network_code`) USING BTREE,
  KEY `pick_up_batch_code` (`pick_up_batch_code`) USING BTREE,
  KEY `pick_up_batch_date` (`pick_up_batch_date`) USING BTREE,
  KEY `load_network_code` (`load_network_code`) USING BTREE,
  KEY `load_date` (`load_date`) USING BTREE,
  KEY `same_day_load_status` (`same_day_load_status`) USING BTREE,
  KEY `overtime_warn_minute` (`overtime_warn_minute`) USING BTREE,
  KEY `retention_time` (`retention_time`) USING BTREE,
  KEY `group_by_column` (`network_category`,`product_code`,`source_city_code`,`dest_city_code`,`plan_export_port`,`electric_status`,`customer_code`,`customer_card_code`,`pick_up_network_code`,`pick_up_batch_code`,`pick_up_batch_date`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2484668 DEFAULT CHARSET=utf8 COMMENT='EX收件网点预警明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(pick_up_batch_date)
(PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_pick_up_network_warning_summary` */

DROP TABLE IF EXISTS `ex_pick_up_network_warning_summary`;

CREATE TABLE `ex_pick_up_network_warning_summary` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `network_category` varchar(30) DEFAULT NULL COMMENT '网点分类',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `dest_country_code` varchar(30) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市代码',
  `plan_export_port` varchar(30) DEFAULT NULL COMMENT '规划出口口岸',
  `electric_status` int(1) DEFAULT NULL COMMENT '是否带电',
  `customer_code` varchar(50) DEFAULT NULL COMMENT '客户代码',
  `customer_card_code` varchar(50) DEFAULT NULL COMMENT '客户月结卡号',
  `pick_up_network_code` varchar(30) NOT NULL COMMENT '收件网点代码',
  `pick_up_batch_code` varchar(30) DEFAULT NULL COMMENT '收件班次编码',
  `pick_up_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '收件班次日期',
  `should_load_time` datetime DEFAULT NULL COMMENT '应发时间',
  `pick_up_count` bigint(11) DEFAULT NULL COMMENT '收件票数',
  `quantity` bigint(11) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `load_count` bigint(11) DEFAULT NULL COMMENT '已发票数',
  `no_load_count` bigint(11) DEFAULT NULL COMMENT '未发票数',
  `ontime_load_count` bigint(11) DEFAULT NULL COMMENT '准点已发票数',
  `overtime_load_count` bigint(11) DEFAULT NULL COMMENT '超时已发票数',
  `overtime_no_load_count` bigint(11) DEFAULT NULL COMMENT '超时未发票数',
  `overtime_count` bigint(11) DEFAULT NULL COMMENT '超时票数',
  `warn_count` bigint(11) DEFAULT NULL COMMENT '预警票数',
  `retention_count` bigint(11) DEFAULT NULL COMMENT '滞留票数',
  `same_day_load_count` bigint(11) DEFAULT NULL COMMENT '当天已发票数',
  `avg_waste_minute` bigint(11) DEFAULT NULL COMMENT '平均耗时（分钟）',
  PRIMARY KEY (`id`,`pick_up_batch_date`),
  UNIQUE KEY `unique_key_01` (`network_category`,`product_code`,`source_city_code`,`dest_city_code`,`plan_export_port`,`electric_status`,`customer_code`,`customer_card_code`,`pick_up_network_code`,`pick_up_batch_code`,`pick_up_batch_date`) USING BTREE,
  KEY `product_code` (`product_code`) USING BTREE,
  KEY `source_country_code` (`source_country_code`) USING BTREE,
  KEY `source_city_code` (`source_city_code`) USING BTREE,
  KEY `source_dept_code` (`source_dept_code`) USING BTREE,
  KEY `source_area_code` (`source_area_code`) USING BTREE,
  KEY `dest_country_code` (`dest_country_code`) USING BTREE,
  KEY `dest_city_code` (`dest_city_code`) USING BTREE,
  KEY `plan_export_port` (`plan_export_port`) USING BTREE,
  KEY `electric_status` (`electric_status`) USING BTREE,
  KEY `customer_code` (`customer_code`) USING BTREE,
  KEY `customer_card_code` (`customer_card_code`) USING BTREE,
  KEY `pick_up_network_code` (`pick_up_network_code`) USING BTREE,
  KEY `pick_up_batch_code` (`pick_up_batch_code`) USING BTREE,
  KEY `pick_up_batch_date` (`pick_up_batch_date`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=440 DEFAULT CHARSET=utf8 COMMENT='EX收件网点预警汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(pick_up_batch_date)
(PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-13') ENGINE = InnoDB,
 PARTITION p20190214 VALUES LESS THAN ('2019-02-14') ENGINE = InnoDB,
 PARTITION p20190215 VALUES LESS THAN ('2019-02-15') ENGINE = InnoDB,
 PARTITION p20190216 VALUES LESS THAN ('2019-02-16') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190219 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190220 VALUES LESS THAN ('2019-02-20') ENGINE = InnoDB,
 PARTITION p20190221 VALUES LESS THAN ('2019-02-21') ENGINE = InnoDB,
 PARTITION p20190222 VALUES LESS THAN ('2019-02-22') ENGINE = InnoDB,
 PARTITION p20190223 VALUES LESS THAN ('2019-02-23') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN ('2019-02-27') ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN ('2019-02-28') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190302 VALUES LESS THAN ('2019-03-02') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190306 VALUES LESS THAN ('2019-03-06') ENGINE = InnoDB,
 PARTITION p20190307 VALUES LESS THAN ('2019-03-07') ENGINE = InnoDB,
 PARTITION p20190308 VALUES LESS THAN ('2019-03-08') ENGINE = InnoDB,
 PARTITION p20190309 VALUES LESS THAN ('2019-03-09') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190313 VALUES LESS THAN ('2019-03-13') ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN ('2019-03-14') ENGINE = InnoDB,
 PARTITION p20190315 VALUES LESS THAN ('2019-03-15') ENGINE = InnoDB,
 PARTITION p20190316 VALUES LESS THAN ('2019-03-16') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190320 VALUES LESS THAN ('2019-03-20') ENGINE = InnoDB,
 PARTITION p20190321 VALUES LESS THAN ('2019-03-21') ENGINE = InnoDB,
 PARTITION p20190322 VALUES LESS THAN ('2019-03-22') ENGINE = InnoDB,
 PARTITION p20190323 VALUES LESS THAN ('2019-03-23') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190327 VALUES LESS THAN ('2019-03-27') ENGINE = InnoDB,
 PARTITION p20190328 VALUES LESS THAN ('2019-03-28') ENGINE = InnoDB,
 PARTITION p20190329 VALUES LESS THAN ('2019-03-29') ENGINE = InnoDB,
 PARTITION p20190330 VALUES LESS THAN ('2019-03-30') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190403 VALUES LESS THAN ('2019-04-03') ENGINE = InnoDB,
 PARTITION p20190404 VALUES LESS THAN ('2019-04-04') ENGINE = InnoDB,
 PARTITION p20190405 VALUES LESS THAN ('2019-04-05') ENGINE = InnoDB,
 PARTITION p20190406 VALUES LESS THAN ('2019-04-06') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190410 VALUES LESS THAN ('2019-04-10') ENGINE = InnoDB,
 PARTITION p20190411 VALUES LESS THAN ('2019-04-11') ENGINE = InnoDB,
 PARTITION p20190412 VALUES LESS THAN ('2019-04-12') ENGINE = InnoDB,
 PARTITION p20190413 VALUES LESS THAN ('2019-04-13') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190417 VALUES LESS THAN ('2019-04-17') ENGINE = InnoDB,
 PARTITION p20190418 VALUES LESS THAN ('2019-04-18') ENGINE = InnoDB,
 PARTITION p20190419 VALUES LESS THAN ('2019-04-19') ENGINE = InnoDB,
 PARTITION p20190420 VALUES LESS THAN ('2019-04-20') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190424 VALUES LESS THAN ('2019-04-24') ENGINE = InnoDB,
 PARTITION p20190425 VALUES LESS THAN ('2019-04-25') ENGINE = InnoDB,
 PARTITION p20190426 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_pick_up_situation_detail` */

DROP TABLE IF EXISTS `ex_pick_up_situation_detail`;

CREATE TABLE `ex_pick_up_situation_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `order_dt` date DEFAULT NULL COMMENT '下单日期',
  `order_tm` datetime DEFAULT NULL COMMENT '下单时间',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `cargo_type` varchar(10) DEFAULT NULL COMMENT '快件内容类型',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `send_dept` varchar(30) DEFAULT NULL COMMENT '寄件本部',
  `send_area` varchar(30) DEFAULT NULL COMMENT '寄件地区',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `send_network` varchar(30) DEFAULT NULL COMMENT '寄件网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `dest_network` varchar(30) DEFAULT NULL COMMENT '目的地网点',
  `customer_waybill_no` varchar(100) DEFAULT NULL COMMENT '客户单号',
  `pick_up_dt` date DEFAULT NULL COMMENT '收件日期',
  `pick_up_tm` datetime DEFAULT NULL COMMENT '收件时间',
  `pick_up_network_load_tm` datetime DEFAULT NULL COMMENT '收件网点装车时间',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `consignment_name` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `is_electric` varchar(5) DEFAULT NULL COMMENT '是否带电',
  `plan_goods_network` varchar(30) DEFAULT NULL COMMENT '规划集货网点',
  `sign_in_network` varchar(30) DEFAULT NULL COMMENT '签入网点',
  `weigh_tm` datetime DEFAULT NULL COMMENT '称重时间',
  `sign_out_dt` date DEFAULT NULL COMMENT '签出日期',
  `sign_out_tm` datetime DEFAULT NULL COMMENT '签出时间',
  `delivery_agent_name` varchar(100) DEFAULT NULL COMMENT '派件代理名称',
  `provider_waybill_no` varchar(100) DEFAULT NULL COMMENT '服务商单号',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包袋号',
  `delivery_network` varchar(30) DEFAULT NULL COMMENT '派件网点',
  `delivery_tm` datetime DEFAULT NULL COMMENT '派件时间',
  `n_days_aging` varchar(10) DEFAULT NULL COMMENT 'N天时效',
  `is_same_day_no_pick_up_count` int(2) DEFAULT '0' COMMENT '是否当天未收，0：是，1：否',
  `is_same_day_no_send_count` int(2) DEFAULT NULL COMMENT '是否当天未发，0：是，1：否',
  `is_no_delivery_count` int(2) DEFAULT NULL COMMENT '是否未派件，0：是，1：否',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_customer_waybill_no` (`customer_waybill_no`) USING HASH COMMENT '客户单号索引',
  KEY `idx_send_country_abb` (`send_country_abb`) USING HASH COMMENT '寄件国家索引',
  KEY `idx_send_dept` (`send_dept`) USING HASH COMMENT '寄件本部索引',
  KEY `idx_send_area` (`send_area`) USING HASH COMMENT '寄件地区索引',
  KEY `idx_send_city` (`send_area`) USING HASH COMMENT '寄件城市索引',
  KEY `idx_send_network` (`send_network`) USING HASH COMMENT '寄件网点索引',
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH COMMENT '目的地国家索引',
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH COMMENT '目的地城市索引',
  KEY `idx_product_code` (`product_code`) USING HASH COMMENT '产品类型索引',
  KEY `idx_sign_out_package_no` (`sign_out_package_no`) USING HASH COMMENT '包袋号索引',
  KEY `idx_pick_up_dt` (`pick_up_dt`) USING BTREE,
  KEY `idx_sign_out_dt` (`sign_out_dt`) USING BTREE,
  KEY `idx_order_dt` (`order_dt`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=190741 DEFAULT CHARSET=utf8 COMMENT='EX收件概况明细表(不用了，拆分其它两张表了)';

/*Table structure for table `ex_pick_up_situation_monitor` */

DROP TABLE IF EXISTS `ex_pick_up_situation_monitor`;

CREATE TABLE `ex_pick_up_situation_monitor` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `order_dt` date DEFAULT NULL COMMENT '下单日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `send_dept` varchar(30) DEFAULT NULL COMMENT '寄件本部',
  `send_area` varchar(30) DEFAULT NULL COMMENT '寄件地区',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `send_network` varchar(30) DEFAULT NULL COMMENT '寄件网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `order_count` int(10) DEFAULT NULL COMMENT '订单量',
  `pickup_count` int(10) DEFAULT NULL COMMENT '收件量',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `same_day_no_pick_up_count` int(10) DEFAULT NULL COMMENT '当天未收量',
  `same_day_no_send_count` int(10) DEFAULT NULL COMMENT '当天未发量',
  `no_delivery_count` int(10) DEFAULT NULL COMMENT '未派件量',
  `delivered_count` int(10) DEFAULT NULL COMMENT '已派件量',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_product_code` (`product_code`) USING HASH COMMENT '产品类型索引',
  KEY `idx_send_country_abb` (`send_country_abb`) USING HASH COMMENT '寄件国家索引',
  KEY `idx_send_dept` (`send_dept`) USING HASH COMMENT '寄件本部索引',
  KEY `idx_send_area` (`send_area`) USING HASH COMMENT '寄件地区索引',
  KEY `idx_send_city` (`send_area`) USING HASH COMMENT '寄件城市索引',
  KEY `idx_send_network` (`send_network`) USING HASH COMMENT '寄件网点索引',
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH COMMENT '目的地国家索引',
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH COMMENT '目的地城市索引',
  KEY `idx_order_dt` (`order_dt`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2639 DEFAULT CHARSET=utf8 COMMENT='EX收件概况监控表';

/*Table structure for table `ex_pick_up_sum` */

DROP TABLE IF EXISTS `ex_pick_up_sum`;

CREATE TABLE `ex_pick_up_sum` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `pick_up_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '收件日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `send_dept` varchar(30) DEFAULT NULL COMMENT '寄件本部',
  `send_area` varchar(30) DEFAULT NULL COMMENT '寄件地区',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `send_network` varchar(30) DEFAULT NULL COMMENT '寄件网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `pickup_count` int(10) DEFAULT NULL COMMENT '收件量',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `same_day_no_send_count` int(10) DEFAULT NULL COMMENT '当天未发量',
  `no_delivery_count` int(10) DEFAULT NULL COMMENT '未派件量',
  `delivered_count` int(10) DEFAULT NULL COMMENT '已派件量',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`pick_up_dt`),
  KEY `idx_product_code` (`product_code`) USING HASH COMMENT '产品类型索引',
  KEY `idx_send_country_abb` (`send_country_abb`) USING HASH COMMENT '寄件国家索引',
  KEY `idx_send_dept` (`send_dept`) USING HASH COMMENT '寄件本部索引',
  KEY `idx_send_area` (`send_area`) USING HASH COMMENT '寄件地区索引',
  KEY `idx_send_city` (`send_area`) USING HASH COMMENT '寄件城市索引',
  KEY `idx_send_network` (`send_network`) USING HASH COMMENT '寄件网点索引',
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH COMMENT '目的地国家索引',
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH COMMENT '目的地城市索引'
) ENGINE=InnoDB AUTO_INCREMENT=332954 DEFAULT CHARSET=utf8 COMMENT='EX收件概况汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(pick_up_dt)
(PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_pick_up_sum_bakup` */

DROP TABLE IF EXISTS `ex_pick_up_sum_bakup`;

CREATE TABLE `ex_pick_up_sum_bakup` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `pick_up_dt` date DEFAULT NULL COMMENT '收件日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `send_country_abb` varchar(30) DEFAULT NULL COMMENT '寄件国家',
  `send_dept` varchar(30) DEFAULT NULL COMMENT '寄件本部',
  `send_area` varchar(30) DEFAULT NULL COMMENT '寄件地区',
  `send_city` varchar(30) DEFAULT NULL COMMENT '寄件城市',
  `send_network` varchar(30) DEFAULT NULL COMMENT '寄件网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `pickup_count` int(10) DEFAULT NULL COMMENT '收件量',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `same_day_no_send_count` int(10) DEFAULT NULL COMMENT '当天未发量',
  `no_delivery_count` int(10) DEFAULT NULL COMMENT '未派件量',
  `delivered_count` int(10) DEFAULT NULL COMMENT '已派件量',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_product_code` (`product_code`) USING HASH COMMENT '产品类型索引',
  KEY `idx_send_country_abb` (`send_country_abb`) USING HASH COMMENT '寄件国家索引',
  KEY `idx_send_dept` (`send_dept`) USING HASH COMMENT '寄件本部索引',
  KEY `idx_send_area` (`send_area`) USING HASH COMMENT '寄件地区索引',
  KEY `idx_send_city` (`send_area`) USING HASH COMMENT '寄件城市索引',
  KEY `idx_send_network` (`send_network`) USING HASH COMMENT '寄件网点索引',
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH COMMENT '目的地国家索引',
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH COMMENT '目的地城市索引',
  KEY `idx_pick_up_dt` (`pick_up_dt`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1908 DEFAULT CHARSET=utf8 COMMENT='EX收件概况汇总表';

/*Table structure for table `ex_plan_flight_link_warning_detail` */

DROP TABLE IF EXISTS `ex_plan_flight_link_warning_detail`;

CREATE TABLE `ex_plan_flight_link_warning_detail` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `waybill_no` varchar(30) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_network_code` varchar(30) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(30) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部代码',
  `dest_area_code` varchar(30) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(30) DEFAULT NULL COMMENT '目的地网点代码',
  `electric_status` int(1) DEFAULT NULL COMMENT '是否带电（1：是，0：否）',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_card_code` varchar(30) DEFAULT NULL COMMENT '客户月结卡号',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包袋号',
  `plan_import_port` varchar(30) DEFAULT NULL COMMENT '规划进口口岸',
  `quantity` bigint(11) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `cons_content` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `cons_value` double(17,3) DEFAULT NULL COMMENT '声明价值',
  `load_network_code` varchar(30) NOT NULL COMMENT '装车网点代码',
  `load_contnr_code` varchar(30) NOT NULL COMMENT '装车车标',
  `load_op_attach_info` varchar(30) DEFAULT NULL COMMENT '装车线路编码',
  `load_time` datetime NOT NULL COMMENT '装车时间',
  `load_date` date NOT NULL COMMENT '装车日期',
  `plan_flight_link_batch_code` varchar(30) DEFAULT NULL COMMENT '排仓环节班次编码',
  `plan_flight_link_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '排仓环节班次日期',
  `should_fly_time` datetime DEFAULT NULL COMMENT '应起飞时间',
  `warn_time` datetime DEFAULT NULL COMMENT '预警时间',
  `main_carry_no` varchar(30) DEFAULT NULL COMMENT '主提单号',
  `plan_end_place_code` varchar(30) DEFAULT NULL COMMENT '规划结束地代码',
  `plan_end_place_type` varchar(30) DEFAULT NULL COMMENT '规划结束地类型',
  `flight_no` varchar(30) DEFAULT NULL COMMENT '航班号',
  `capacity_type` varchar(30) DEFAULT NULL COMMENT '运力类型:全货机,散航班',
  `declare_batch_code` varchar(30) DEFAULT NULL COMMENT '报关批次编码',
  `export_country_code` varchar(30) DEFAULT NULL COMMENT '出口国家代码',
  `export_port_code` varchar(30) DEFAULT NULL COMMENT '出口口岸代码',
  `import_country_code` varchar(30) DEFAULT NULL COMMENT '进口国家代码',
  `import_port_code` varchar(30) DEFAULT NULL COMMENT '进口口岸代码',
  `plan_fly_time` datetime DEFAULT NULL COMMENT '计划起飞时间',
  `actual_fly_time` datetime DEFAULT NULL COMMENT '实际起飞时间',
  `actual_fly_date` date DEFAULT NULL COMMENT '实际起飞日期',
  `send_exception_time` datetime DEFAULT NULL COMMENT '发货异常时间',
  `send_exception_reason` varchar(100) DEFAULT NULL COMMENT '发货异常原因',
  `same_day_fly_status` int(1) DEFAULT NULL COMMENT '是否当天配载（1：是，0：否）',
  `same_network_send_status` int(1) DEFAULT NULL COMMENT '是否符合规划（1：是，0：否）',
  `waste_minute` bigint(11) DEFAULT NULL COMMENT '耗时分钟',
  `overtime_warn_minute` bigint(11) DEFAULT NULL COMMENT '超时/预警分钟',
  `overtime_warn_day` bigint(11) DEFAULT NULL COMMENT '超时/预警天数',
  PRIMARY KEY (`id`,`plan_flight_link_batch_date`),
  UNIQUE KEY `waybill_no` (`waybill_no`,`plan_flight_link_batch_date`) USING BTREE,
  KEY `product_code` (`product_code`) USING BTREE,
  KEY `source_country_code` (`source_country_code`) USING BTREE,
  KEY `source_city_code` (`source_city_code`) USING BTREE,
  KEY `source_dept_code` (`source_dept_code`) USING BTREE,
  KEY `source_area_code` (`source_area_code`) USING BTREE,
  KEY `source_network_code` (`source_network_code`) USING BTREE,
  KEY `dest_country_code` (`dest_country_code`) USING BTREE,
  KEY `dest_city_code` (`dest_city_code`) USING BTREE,
  KEY `dest_dept_code` (`dest_dept_code`) USING BTREE,
  KEY `dest_area_code` (`dest_area_code`) USING BTREE,
  KEY `dest_network_code` (`dest_network_code`) USING BTREE,
  KEY `electric_status` (`electric_status`) USING BTREE,
  KEY `customer_code` (`customer_code`) USING BTREE,
  KEY `customer_card_code` (`customer_card_code`) USING BTREE,
  KEY `sign_out_package_no` (`sign_out_package_no`) USING BTREE,
  KEY `plan_import_port` (`plan_import_port`) USING BTREE,
  KEY `load_network_code` (`load_network_code`) USING BTREE,
  KEY `load_contnr_code` (`load_contnr_code`) USING BTREE,
  KEY `plan_flight_link_batch_code` (`plan_flight_link_batch_code`) USING BTREE,
  KEY `plan_flight_link_batch_date` (`plan_flight_link_batch_date`) USING BTREE,
  KEY `main_carry_no` (`main_carry_no`) USING BTREE,
  KEY `flight_no` (`flight_no`) USING BTREE,
  KEY `capacity_type` (`capacity_type`) USING BTREE,
  KEY `declare_batch_code` (`declare_batch_code`) USING BTREE,
  KEY `export_country_code` (`export_country_code`) USING BTREE,
  KEY `export_port_code` (`export_port_code`) USING BTREE,
  KEY `import_country_code` (`import_country_code`) USING BTREE,
  KEY `import_port_code` (`import_port_code`) USING BTREE,
  KEY `actual_fly_date` (`actual_fly_date`) USING BTREE,
  KEY `send_exception_time` (`send_exception_time`) USING BTREE,
  KEY `same_day_fly_status` (`same_day_fly_status`) USING BTREE,
  KEY `same_network_send_status` (`same_network_send_status`) USING BTREE,
  KEY `overtime_warn_minute` (`overtime_warn_minute`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=60 DEFAULT CHARSET=utf8 COMMENT='EX排仓环节预警明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(plan_flight_link_batch_date)
(PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_plan_flight_link_warning_summary` */

DROP TABLE IF EXISTS `ex_plan_flight_link_warning_summary`;

CREATE TABLE `ex_plan_flight_link_warning_summary` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_network_code` varchar(30) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(30) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部代码',
  `dest_area_code` varchar(30) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(30) DEFAULT NULL COMMENT '目的地网点代码',
  `electric_status` int(1) DEFAULT NULL COMMENT '是否带电',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_card_code` varchar(30) DEFAULT NULL COMMENT '客户月结卡号',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包袋号',
  `plan_import_port` varchar(30) DEFAULT NULL COMMENT '规划进口口岸',
  `load_network_code` varchar(30) NOT NULL COMMENT '装车网点代码',
  `load_contnr_code` varchar(30) NOT NULL COMMENT '装车车标',
  `plan_flight_link_batch_code` varchar(30) DEFAULT NULL COMMENT '排仓环节班次编码',
  `plan_flight_link_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '排仓环节班次日期',
  `should_fly_time` datetime DEFAULT NULL COMMENT '应起飞时间',
  `warn_time` datetime DEFAULT NULL COMMENT '预警时间',
  `main_carry_no` varchar(30) DEFAULT NULL COMMENT '主提单号',
  `flight_no` varchar(30) DEFAULT NULL COMMENT '航班号',
  `capacity_type` varchar(30) DEFAULT NULL COMMENT '运力类型:全货机,散航班',
  `declare_batch_code` varchar(30) DEFAULT NULL COMMENT '报关批次编码',
  `export_country_code` varchar(30) DEFAULT NULL COMMENT '出口国家代码',
  `export_port_code` varchar(30) DEFAULT NULL COMMENT '出口口岸代码',
  `import_country_code` varchar(30) DEFAULT NULL COMMENT '进口国家代码',
  `import_port_code` varchar(30) DEFAULT NULL COMMENT '进口口岸代码',
  `load_count` bigint(11) DEFAULT NULL COMMENT '装车票数',
  `quantity` bigint(11) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `flight_count` bigint(11) DEFAULT NULL COMMENT '已配载票数',
  `no_flight_count` bigint(11) DEFAULT NULL COMMENT '未配载票数',
  `no_flight_real_weight_qty` double(17,3) DEFAULT NULL COMMENT '未配载实际重量',
  `no_flight_meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '未配载计费重量',
  `ontime_flight_count` bigint(11) DEFAULT NULL COMMENT '准点已配载票数',
  `ontime_flight_real_weight_qty` double(17,3) DEFAULT NULL COMMENT '准点已配载实际重量',
  `ontime_flight_meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '准点已配载计费重量',
  `overtime_flight_count` bigint(11) DEFAULT NULL COMMENT '超时已配载票数',
  `overtime_no_flight_count` bigint(11) DEFAULT NULL COMMENT '超时未配载票数',
  `overtime_count` bigint(11) DEFAULT NULL COMMENT '超时票数',
  `overtime_real_weight_qty` double(17,3) DEFAULT NULL COMMENT '超时实际重量',
  `overtime_meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '超时计费重量',
  `warn_count` bigint(11) DEFAULT NULL COMMENT '预警票数',
  `send_exception_count` bigint(11) DEFAULT NULL COMMENT '发货异常票数',
  `diff_network_send_count` bigint(11) DEFAULT NULL COMMENT '不符合规划票数',
  `same_day_flight_count` bigint(11) DEFAULT NULL COMMENT '当天已配载票数',
  `avg_waste_minute` bigint(11) DEFAULT NULL COMMENT '平均耗时（分钟）',
  PRIMARY KEY (`id`,`plan_flight_link_batch_date`),
  KEY `product_code` (`product_code`) USING BTREE,
  KEY `source_country_code` (`source_country_code`) USING BTREE,
  KEY `source_city_code` (`source_city_code`) USING BTREE,
  KEY `source_dept_code` (`source_dept_code`) USING BTREE,
  KEY `source_area_code` (`source_area_code`) USING BTREE,
  KEY `source_network_code` (`source_network_code`) USING BTREE,
  KEY `dest_country_code` (`dest_country_code`) USING BTREE,
  KEY `dest_city_code` (`dest_city_code`) USING BTREE,
  KEY `dest_dept_code` (`dest_dept_code`) USING BTREE,
  KEY `dest_area_code` (`dest_area_code`) USING BTREE,
  KEY `dest_network_code` (`dest_network_code`) USING BTREE,
  KEY `electric_status` (`electric_status`) USING BTREE,
  KEY `customer_code` (`customer_code`) USING BTREE,
  KEY `customer_card_code` (`customer_card_code`) USING BTREE,
  KEY `sign_out_package_no` (`sign_out_package_no`) USING BTREE,
  KEY `plan_import_port` (`plan_import_port`) USING BTREE,
  KEY `load_network_code` (`load_network_code`) USING BTREE,
  KEY `load_contnr_code` (`load_contnr_code`) USING BTREE,
  KEY `plan_flight_link_batch_code` (`plan_flight_link_batch_code`) USING BTREE,
  KEY `plan_flight_link_batch_date` (`plan_flight_link_batch_date`) USING BTREE,
  KEY `main_carry_no` (`main_carry_no`) USING BTREE,
  KEY `flight_no` (`flight_no`) USING BTREE,
  KEY `capacity_type` (`capacity_type`) USING BTREE,
  KEY `declare_batch_code` (`declare_batch_code`) USING BTREE,
  KEY `export_country_code` (`export_country_code`) USING BTREE,
  KEY `export_port_code` (`export_port_code`) USING BTREE,
  KEY `import_country_code` (`import_country_code`) USING BTREE,
  KEY `import_port_code` (`import_port_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=104 DEFAULT CHARSET=utf8 COMMENT='EX排仓环节预警汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(plan_flight_link_batch_date)
(PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-13') ENGINE = InnoDB,
 PARTITION p20190214 VALUES LESS THAN ('2019-02-14') ENGINE = InnoDB,
 PARTITION p20190215 VALUES LESS THAN ('2019-02-15') ENGINE = InnoDB,
 PARTITION p20190216 VALUES LESS THAN ('2019-02-16') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190219 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190220 VALUES LESS THAN ('2019-02-20') ENGINE = InnoDB,
 PARTITION p20190221 VALUES LESS THAN ('2019-02-21') ENGINE = InnoDB,
 PARTITION p20190222 VALUES LESS THAN ('2019-02-22') ENGINE = InnoDB,
 PARTITION p20190223 VALUES LESS THAN ('2019-02-23') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN ('2019-02-27') ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN ('2019-02-28') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190302 VALUES LESS THAN ('2019-03-02') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190306 VALUES LESS THAN ('2019-03-06') ENGINE = InnoDB,
 PARTITION p20190307 VALUES LESS THAN ('2019-03-07') ENGINE = InnoDB,
 PARTITION p20190308 VALUES LESS THAN ('2019-03-08') ENGINE = InnoDB,
 PARTITION p20190309 VALUES LESS THAN ('2019-03-09') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190313 VALUES LESS THAN ('2019-03-13') ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN ('2019-03-14') ENGINE = InnoDB,
 PARTITION p20190315 VALUES LESS THAN ('2019-03-15') ENGINE = InnoDB,
 PARTITION p20190316 VALUES LESS THAN ('2019-03-16') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190320 VALUES LESS THAN ('2019-03-20') ENGINE = InnoDB,
 PARTITION p20190321 VALUES LESS THAN ('2019-03-21') ENGINE = InnoDB,
 PARTITION p20190322 VALUES LESS THAN ('2019-03-22') ENGINE = InnoDB,
 PARTITION p20190323 VALUES LESS THAN ('2019-03-23') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190327 VALUES LESS THAN ('2019-03-27') ENGINE = InnoDB,
 PARTITION p20190328 VALUES LESS THAN ('2019-03-28') ENGINE = InnoDB,
 PARTITION p20190329 VALUES LESS THAN ('2019-03-29') ENGINE = InnoDB,
 PARTITION p20190330 VALUES LESS THAN ('2019-03-30') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190403 VALUES LESS THAN ('2019-04-03') ENGINE = InnoDB,
 PARTITION p20190404 VALUES LESS THAN ('2019-04-04') ENGINE = InnoDB,
 PARTITION p20190405 VALUES LESS THAN ('2019-04-05') ENGINE = InnoDB,
 PARTITION p20190406 VALUES LESS THAN ('2019-04-06') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190410 VALUES LESS THAN ('2019-04-10') ENGINE = InnoDB,
 PARTITION p20190411 VALUES LESS THAN ('2019-04-11') ENGINE = InnoDB,
 PARTITION p20190412 VALUES LESS THAN ('2019-04-12') ENGINE = InnoDB,
 PARTITION p20190413 VALUES LESS THAN ('2019-04-13') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190417 VALUES LESS THAN ('2019-04-17') ENGINE = InnoDB,
 PARTITION p20190418 VALUES LESS THAN ('2019-04-18') ENGINE = InnoDB,
 PARTITION p20190419 VALUES LESS THAN ('2019-04-19') ENGINE = InnoDB,
 PARTITION p20190420 VALUES LESS THAN ('2019-04-20') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190424 VALUES LESS THAN ('2019-04-24') ENGINE = InnoDB,
 PARTITION p20190425 VALUES LESS THAN ('2019-04-25') ENGINE = InnoDB,
 PARTITION p20190426 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_port2_port_link_detail_common` */

DROP TABLE IF EXISTS `ex_port2_port_link_detail_common`;

CREATE TABLE `ex_port2_port_link_detail_common` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `main_waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `product_code` varchar(30) DEFAULT NULL COMMENT '产品类型',
  `electric_status` int(1) DEFAULT NULL COMMENT '是否带电 1：是 0：否',
  `cons_qty` int(5) DEFAULT NULL COMMENT '件数',
  `real_weight` double(17,3) DEFAULT NULL COMMENT ' 实际重量',
  `charged_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `start_network` varchar(30) DEFAULT '' COMMENT '发出网点',
  `plan_arrive_network` varchar(30) DEFAULT NULL COMMENT '规划到达网点',
  `arrive_network` varchar(30) DEFAULT NULL COMMENT '实际到达网点',
  `cons_content` varchar(500) DEFAULT '' COMMENT '托寄物',
  `aging_standard` datetime DEFAULT NULL COMMENT '中转时效标准',
  `checkout_pack_num` varchar(100) DEFAULT '' COMMENT '签出包号',
  `clearance_batch` varchar(100) DEFAULT '' COMMENT '报关批次',
  `clearance_time` datetime DEFAULT NULL COMMENT '报关时间',
  `cons_value` double(17,3) DEFAULT NULL COMMENT '声明价值',
  `customer_card_code` varchar(50) DEFAULT '' COMMENT '客户月结卡号',
  `customer_code` varchar(50) DEFAULT '' COMMENT '客户编码',
  `dest_area_code` varchar(30) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目标城市代码',
  `dest_country_code` varchar(30) DEFAULT NULL COMMENT '目标国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目标地区编码',
  `dest_network_code` varchar(30) DEFAULT NULL COMMENT '目标地网点',
  `monitor_status` int(1) DEFAULT NULL COMMENT ' 监控状态 （0：无标准，1：未预警，2：已预警，3：已超时，4：已达成）',
  `link_category` varchar(30) DEFAULT NULL COMMENT '环节类型（二级分类）',
  `retention_op_code` varchar(30) DEFAULT NULL COMMENT '滞留巴枪操作码',
  `retention_reason` varchar(500) DEFAULT NULL COMMENT '滞留原因',
  `first_retention_length` int(10) DEFAULT NULL COMMENT '首次滞留时长(min)',
  `first_retention_time` datetime DEFAULT NULL COMMENT '首次滞留时间',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_time_str` varchar(255) DEFAULT NULL COMMENT '滞留原因列表',
  `same_day_arrive_status` int(1) DEFAULT NULL COMMENT '是否当天到达（1：是，0：否）',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家',
  `source_network_code` varchar(30) DEFAULT NULL COMMENT '原寄地网点',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地区部',
  `duration_hours` double(10,3) DEFAULT NULL COMMENT '耗时H',
  `overtime_warn_minute` double(17,3) DEFAULT NULL COMMENT '超时/预警分钟 (当前时间-时效时间)',
  `warn_deta_hours_str` varchar(10) DEFAULT NULL COMMENT ' 预警/超时（h）',
  `warn_deta_days_str` varchar(10) DEFAULT NULL COMMENT ' 预警/超时（d）',
  PRIMARY KEY (`id`,`insert_time`) USING BTREE,
  KEY `main_waybill_no` (`main_waybill_no`),
  KEY `dest_area_code` (`dest_area_code`),
  KEY `dest_city_code` (`dest_city_code`),
  KEY `dest_country_code` (`dest_country_code`),
  KEY `dest_dept_code` (`dest_dept_code`),
  KEY `source_area_code` (`source_area_code`),
  KEY `source_city_code` (`source_city_code`),
  KEY `source_country_code` (`source_country_code`),
  KEY `source_dept_code` (`source_dept_code`),
  KEY `product_code` (`product_code`),
  KEY `start_network` (`start_network`),
  KEY `plan_arrive_network` (`plan_arrive_network`),
  KEY `arrive_network` (`arrive_network`),
  KEY `customer_code` (`customer_code`),
  KEY `customer_card_code` (`customer_card_code`),
  KEY `electric_status` (`electric_status`),
  KEY `same_day_arrive_status` (`same_day_arrive_status`),
  KEY `clearance_batch` (`clearance_batch`),
  KEY `checkout_pack_num` (`checkout_pack_num`),
  KEY `monitor_status` (`monitor_status`),
  KEY `dest_network_code` (`dest_network_code`),
  KEY `insert_time` (`insert_time`),
  KEY `insert_time_2` (`insert_time`)
) ENGINE=InnoDB AUTO_INCREMENT=84 DEFAULT CHARSET=utf8mb4 COMMENT='ex口岸到口岸环节common表'
/*!50500 PARTITION BY RANGE  COLUMNS(insert_time)
(PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190512 VALUES LESS THAN ('2019-05-12') ENGINE = InnoDB,
 PARTITION p20190519 VALUES LESS THAN ('2019-05-19') ENGINE = InnoDB,
 PARTITION p20190526 VALUES LESS THAN ('2019-05-26') ENGINE = InnoDB,
 PARTITION p20190602 VALUES LESS THAN ('2019-06-02') ENGINE = InnoDB,
 PARTITION p20190609 VALUES LESS THAN ('2019-06-09') ENGINE = InnoDB,
 PARTITION p20190616 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_port2_port_link_detail_in` */

DROP TABLE IF EXISTS `ex_port2_port_link_detail_in`;

CREATE TABLE `ex_port2_port_link_detail_in` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `batch_date` datetime NOT NULL COMMENT '中转班次日期',
  `main_waybill_no` varchar(50) NOT NULL DEFAULT '' COMMENT '运单号',
  `batch_code` varchar(50) DEFAULT '' COMMENT '中转班次',
  `line_code` varchar(50) DEFAULT '' COMMENT '线路编码',
  `load_time` datetime NOT NULL COMMENT '发出时间',
  `load_vehicle_logo` varchar(100) DEFAULT '' COMMENT '发出车标',
  `plan_arrive_network` varchar(30) DEFAULT NULL COMMENT '规划到达网点',
  `start_network` varchar(30) DEFAULT '' COMMENT '发出网点',
  `pre_warn_hour` double(10,3) DEFAULT NULL COMMENT '提前预警量（单位 hour）, 生成批次的时候插入',
  PRIMARY KEY (`id`,`batch_date`) USING BTREE,
  KEY `main_waybill_no` (`main_waybill_no`),
  KEY `batch_code` (`batch_code`),
  KEY `load_vehicle_logo` (`load_vehicle_logo`),
  KEY `plan_arrive_network` (`plan_arrive_network`),
  KEY `start_network` (`start_network`),
  KEY `batch_date` (`batch_date`),
  KEY `batch_date_2` (`batch_date`)
) ENGINE=InnoDB AUTO_INCREMENT=84 DEFAULT CHARSET=utf8mb4 COMMENT='ex口岸到口岸环节装车表'
/*!50500 PARTITION BY RANGE  COLUMNS(batch_date)
(PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190512 VALUES LESS THAN ('2019-05-12') ENGINE = InnoDB,
 PARTITION p20190519 VALUES LESS THAN ('2019-05-19') ENGINE = InnoDB,
 PARTITION p20190526 VALUES LESS THAN ('2019-05-26') ENGINE = InnoDB,
 PARTITION p20190602 VALUES LESS THAN ('2019-06-02') ENGINE = InnoDB,
 PARTITION p20190609 VALUES LESS THAN ('2019-06-09') ENGINE = InnoDB,
 PARTITION p20190616 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_port2_port_link_detail_out` */

DROP TABLE IF EXISTS `ex_port2_port_link_detail_out`;

CREATE TABLE `ex_port2_port_link_detail_out` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `unload_time` datetime NOT NULL COMMENT '实际到达时间, 卸车时间',
  `is_plan_network` int(1) DEFAULT NULL COMMENT '是否规划网点 1：是 0：否',
  `main_waybill_no` varchar(50) NOT NULL DEFAULT '' COMMENT '运单号',
  `start_network` varchar(30) DEFAULT '' COMMENT '发出网点',
  `arrive_network` varchar(30) DEFAULT NULL COMMENT '实际到达网点',
  `plan_arrive_network` varchar(30) DEFAULT NULL COMMENT '规划到达网点',
  PRIMARY KEY (`id`,`unload_time`) USING BTREE,
  KEY `main_waybill_no` (`main_waybill_no`),
  KEY `unload_time` (`unload_time`),
  KEY `start_network` (`start_network`),
  KEY `is_plan_network` (`is_plan_network`),
  KEY `arrive_network` (`arrive_network`),
  KEY `plan_arrive_network` (`plan_arrive_network`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8mb4 COMMENT='ex口岸到口岸环节卸车表'
/*!50500 PARTITION BY RANGE  COLUMNS(unload_time)
(PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190512 VALUES LESS THAN ('2019-05-12') ENGINE = InnoDB,
 PARTITION p20190519 VALUES LESS THAN ('2019-05-19') ENGINE = InnoDB,
 PARTITION p20190526 VALUES LESS THAN ('2019-05-26') ENGINE = InnoDB,
 PARTITION p20190602 VALUES LESS THAN ('2019-06-02') ENGINE = InnoDB,
 PARTITION p20190609 VALUES LESS THAN ('2019-06-09') ENGINE = InnoDB,
 PARTITION p20190616 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_port2_port_link_sum` */

DROP TABLE IF EXISTS `ex_port2_port_link_sum`;

CREATE TABLE `ex_port2_port_link_sum` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `batch_date` date NOT NULL COMMENT '班次日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `customer_card_code` varchar(50) DEFAULT '' COMMENT '客户月结卡号',
  `customer_code` varchar(50) DEFAULT '' COMMENT '客户代码',
  `electric_status` int(1) DEFAULT NULL COMMENT '是否带电 1：Y 0：N',
  `load_vehicle_logo` varchar(100) DEFAULT '' COMMENT '车标号：装车车标',
  `checkout_pack_num` varchar(100) DEFAULT '' COMMENT '签出包号',
  `clearance_batch` varchar(100) DEFAULT '' COMMENT '报关批次',
  `batch_code` varchar(50) DEFAULT '' COMMENT '中转班次',
  `start_network` varchar(30) DEFAULT '' COMMENT '发出网点',
  `plan_arrive_network` varchar(30) DEFAULT NULL COMMENT '规划到达网点',
  `arrive_network` varchar(30) DEFAULT NULL COMMENT '到达网点：实际到达网点',
  `actual_load_count` int(10) DEFAULT '0' COMMENT '发件量：实际件量',
  `cons_qty` int(5) DEFAULT NULL COMMENT '件数',
  `real_weight` double(17,3) DEFAULT NULL COMMENT ' 实际重量',
  `charged_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家',
  `source_network_code` varchar(30) DEFAULT NULL COMMENT '原寄地网点',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地区部',
  `dest_area_code` varchar(30) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目标城市代码',
  `dest_country_code` varchar(30) DEFAULT NULL COMMENT '目标国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目标地区编码',
  `dest_network_code` varchar(30) DEFAULT NULL COMMENT '目标地网点',
  `ontime_unload_count` bigint(11) DEFAULT '0' COMMENT '准点到件量',
  `warn_count` bigint(11) DEFAULT '0' COMMENT '预警量',
  `record_count` bigint(11) DEFAULT '0' COMMENT ' 汇总的记录条数',
  `overtime_to_unload_count` bigint(11) DEFAULT '0' COMMENT '超时到件总量:等于超时已到+超时未到',
  `overtime_unload_count` bigint(11) DEFAULT '0' COMMENT '超时已到，票数',
  `overtime_not_unload_count` bigint(11) DEFAULT '0' COMMENT '超时未到，票数',
  `retention_count` int(10) DEFAULT '0' COMMENT '滞留量:滞留票数',
  `same_day_arrive_count` bigint(11) DEFAULT '0' COMMENT '当天已到票数',
  `unload_count` bigint(11) DEFAULT '0' COMMENT '累计已到',
  `not_unload_count` bigint(11) DEFAULT '0' COMMENT '累计未到',
  `abnormal_unload_network_count` bigint(11) DEFAULT '0' COMMENT '异常网点票数',
  `duration_hours` double(17,3) DEFAULT '0.000' COMMENT ' 耗时（小时）(总耗时)',
  PRIMARY KEY (`id`,`batch_date`) USING BTREE,
  KEY `product_code` (`product_code`) USING BTREE,
  KEY `customer_code` (`customer_code`) USING BTREE,
  KEY `customer_card_code` (`customer_card_code`) USING BTREE,
  KEY `load_vehicle_logo` (`load_vehicle_logo`) USING BTREE,
  KEY `checkout_pack_num` (`checkout_pack_num`) USING BTREE,
  KEY `clearance_batch` (`clearance_batch`) USING BTREE,
  KEY `batch_code` (`batch_code`) USING BTREE,
  KEY `start_network` (`start_network`) USING BTREE,
  KEY `plan_arrive_network` (`plan_arrive_network`) USING BTREE,
  KEY `source_country_code` (`source_country_code`) USING BTREE,
  KEY `arrive_network` (`arrive_network`) USING BTREE,
  KEY `source_city_code` (`source_city_code`) USING BTREE,
  KEY `source_dept_code` (`source_dept_code`) USING BTREE,
  KEY `source_network_code` (`source_network_code`) USING BTREE,
  KEY `source_area_code` (`source_area_code`) USING BTREE,
  KEY `dest_area_code` (`dest_area_code`) USING BTREE,
  KEY `dest_city_code` (`dest_city_code`) USING BTREE,
  KEY `dest_country_code` (`dest_country_code`) USING BTREE,
  KEY `dest_dept_code` (`dest_dept_code`) USING BTREE,
  KEY `dest_network_code` (`dest_network_code`) USING BTREE,
  KEY `electric_status` (`electric_status`),
  KEY `batch_date` (`batch_date`),
  KEY `batch_date_2` (`batch_date`)
) ENGINE=InnoDB AUTO_INCREMENT=262163 DEFAULT CHARSET=utf8 COMMENT='ex操作口岸到口岸明细汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(batch_date)
(PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190512 VALUES LESS THAN ('2019-05-12') ENGINE = InnoDB,
 PARTITION p20190519 VALUES LESS THAN ('2019-05-19') ENGINE = InnoDB,
 PARTITION p20190526 VALUES LESS THAN ('2019-05-26') ENGINE = InnoDB,
 PARTITION p20190602 VALUES LESS THAN ('2019-06-02') ENGINE = InnoDB,
 PARTITION p20190609 VALUES LESS THAN ('2019-06-09') ENGINE = InnoDB,
 PARTITION p20190616 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_sign_in` */

DROP TABLE IF EXISTS `ex_sign_in`;

CREATE TABLE `ex_sign_in` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `sign_in_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '签入日期',
  `sign_in_tm` datetime DEFAULT NULL COMMENT '签入时间',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `problem_code` varchar(30) DEFAULT NULL COMMENT '异常问题件代码',
  `problem_desc` varchar(4000) DEFAULT NULL COMMENT '异常件描述',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`,`sign_in_dt`),
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH COMMENT '运单号索引',
  KEY `idx_sign_in_dt` (`sign_in_dt`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1411 DEFAULT CHARSET=utf8 COMMENT='EX签入表'
/*!50500 PARTITION BY RANGE  COLUMNS(sign_in_dt)
(PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN ('2019-11-04') ENGINE = InnoDB,
 PARTITION p20191111 VALUES LESS THAN ('2019-11-11') ENGINE = InnoDB,
 PARTITION p20191118 VALUES LESS THAN ('2019-11-18') ENGINE = InnoDB,
 PARTITION p20191125 VALUES LESS THAN ('2019-11-25') ENGINE = InnoDB,
 PARTITION p20191202 VALUES LESS THAN ('2019-12-02') ENGINE = InnoDB,
 PARTITION p20191209 VALUES LESS THAN ('2019-12-09') ENGINE = InnoDB,
 PARTITION p20191216 VALUES LESS THAN ('2019-12-16') ENGINE = InnoDB,
 PARTITION p20191223 VALUES LESS THAN ('2019-12-23') ENGINE = InnoDB,
 PARTITION p20191230 VALUES LESS THAN ('2019-12-30') ENGINE = InnoDB,
 PARTITION p20200106 VALUES LESS THAN ('2020-01-06') ENGINE = InnoDB,
 PARTITION p20200113 VALUES LESS THAN ('2020-01-13') ENGINE = InnoDB,
 PARTITION p20200120 VALUES LESS THAN ('2020-01-20') ENGINE = InnoDB,
 PARTITION p20200127 VALUES LESS THAN ('2020-01-27') ENGINE = InnoDB,
 PARTITION p20200203 VALUES LESS THAN ('2020-02-03') ENGINE = InnoDB,
 PARTITION p20200210 VALUES LESS THAN ('2020-02-10') ENGINE = InnoDB,
 PARTITION p20200217 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_sign_in_before_transfer_link_monitor_detail` */

DROP TABLE IF EXISTS `ex_sign_in_before_transfer_link_monitor_detail`;

CREATE TABLE `ex_sign_in_before_transfer_link_monitor_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `transfer_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '中转班次日期',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `link_type` varchar(30) DEFAULT NULL COMMENT '环节分类',
  `unique_str` varchar(100) DEFAULT NULL COMMENT '唯一数据的字符串',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_acct_no` varchar(50) DEFAULT NULL COMMENT '月结卡号',
  `is_electric` varchar(2) DEFAULT NULL COMMENT '是否带电',
  `transfer_batch_code` varchar(30) DEFAULT NULL COMMENT '中转班次',
  `send_network_code` varchar(30) DEFAULT NULL COMMENT '发出网点',
  `line_code` varchar(30) DEFAULT NULL COMMENT '线路编码',
  `plan_arrival_network_code` varchar(30) DEFAULT NULL COMMENT '规划到达网点',
  `actual_arrival_network_code` varchar(30) DEFAULT NULL COMMENT '实际到达网点',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `mailing` varchar(200) DEFAULT NULL COMMENT '托寄物',
  `value` double(17,3) DEFAULT NULL COMMENT '价值',
  `send_vehicle` varchar(30) DEFAULT NULL COMMENT '发出车标',
  `send_tm` datetime DEFAULT NULL COMMENT '发出时间',
  `transfer_aging_standard` datetime DEFAULT NULL COMMENT '中转时效标准',
  `actual_arrival_tm` datetime DEFAULT NULL COMMENT '实际到达时间',
  `retention_time` varchar(300) DEFAULT NULL COMMENT '滞留时间',
  `retention_bar_code` varchar(150) DEFAULT NULL COMMENT '滞留巴枪码',
  `retention_reason` varchar(300) DEFAULT NULL COMMENT '滞留原因',
  `is_plan_same` varchar(2) DEFAULT NULL COMMENT '是否规划相符(Y/N)',
  `time_consuming` varchar(10) DEFAULT NULL COMMENT '耗时(h)',
  `warning_overtime_h` varchar(10) DEFAULT NULL COMMENT '预警/超时(h)',
  `warning_overtime_d` varchar(10) DEFAULT NULL COMMENT '预警/超时(d)',
  `is_same_day_arrival` varchar(2) DEFAULT NULL COMMENT '是否当天到达(Y/N)',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `is_ontime_arrival` varchar(2) DEFAULT NULL COMMENT '是否准点到件(Y/N)',
  `is_warning` varchar(2) DEFAULT NULL COMMENT '是否预警(Y/N)',
  `is_timeout_arrived` varchar(2) DEFAULT NULL COMMENT '是否超时已到(Y/N)',
  `is_timeout_no_arrival` varchar(2) DEFAULT NULL COMMENT '是否超时未到(Y/N)',
  `is_retention` varchar(2) DEFAULT NULL COMMENT '是否滞留(Y/N)',
  `is_same_day_arrived` varchar(2) DEFAULT NULL COMMENT '是否当天已到(Y/N)',
  `is_total_no_arrival` varchar(2) DEFAULT NULL COMMENT '是否累计未到(Y/N)',
  `is_total_arrived` varchar(2) DEFAULT NULL COMMENT '是否累计已到(Y/N)',
  `is_network_plan_no_same` varchar(2) DEFAULT NULL COMMENT '是否网点规划不符(Y/N)',
  `server_ip` varchar(30) DEFAULT NULL COMMENT '服务器运行IP',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `retention_length` varchar(10) DEFAULT NULL COMMENT '滞留时长(小时为单位，保留一位小数点)',
  `first_retention_tm` datetime DEFAULT NULL COMMENT '首次滞留时间',
  PRIMARY KEY (`id`,`transfer_batch_date`),
  KEY `idx_transfer_batch_date` (`transfer_batch_date`) USING BTREE,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_send_network_code` (`send_network_code`) USING HASH,
  KEY `idx_actual_arrival_network_code` (`actual_arrival_network_code`) USING HASH,
  KEY `idx_transfer_batch_code` (`transfer_batch_code`) USING HASH,
  KEY `idx_plan_arrival_network_code` (`plan_arrival_network_code`) USING HASH,
  KEY `idx_send_vehicle` (`send_vehicle`) USING HASH,
  KEY `idx_source_country_code` (`source_country_code`) USING HASH,
  KEY `idx_source_dept_code` (`source_dept_code`) USING HASH,
  KEY `idx_source_area_code` (`source_area_code`) USING HASH,
  KEY `idx_source_city_code` (`source_city_code`) USING HASH,
  KEY `idx_source_network_code` (`source_network_code`) USING HASH,
  KEY `idx_dest_country_code` (`dest_country_code`) USING HASH,
  KEY `idx_dest_dept_code` (`dest_dept_code`) USING HASH,
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH,
  KEY `idx_dest_area_code` (`dest_area_code`) USING HASH,
  KEY `idx_dest_network_code` (`dest_network_code`) USING HASH,
  KEY `idx_customer_code` (`customer_code`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_customer_acct_no` (`customer_acct_no`) USING HASH,
  KEY `idx_is_plan_same` (`is_plan_same`) USING HASH,
  KEY `idx_is_same_day_arrival` (`is_same_day_arrival`) USING HASH,
  KEY `idx_is_electric` (`is_electric`) USING HASH,
  KEY `idx_is_retention` (`is_retention`) USING HASH,
  KEY `idx_actual_arrival_tm` (`actual_arrival_tm`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=43 DEFAULT CHARSET=utf8 COMMENT='EX签入前中转环节监控明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(transfer_batch_date)
(PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN ('2019-11-04') ENGINE = InnoDB,
 PARTITION p20191111 VALUES LESS THAN ('2019-11-11') ENGINE = InnoDB,
 PARTITION p20191118 VALUES LESS THAN ('2019-11-18') ENGINE = InnoDB,
 PARTITION p20191125 VALUES LESS THAN ('2019-11-25') ENGINE = InnoDB,
 PARTITION p20191202 VALUES LESS THAN ('2019-12-02') ENGINE = InnoDB,
 PARTITION p20191209 VALUES LESS THAN ('2019-12-09') ENGINE = InnoDB,
 PARTITION p20191216 VALUES LESS THAN ('2019-12-16') ENGINE = InnoDB,
 PARTITION p20191223 VALUES LESS THAN ('2019-12-23') ENGINE = InnoDB,
 PARTITION p20191230 VALUES LESS THAN ('2019-12-30') ENGINE = InnoDB,
 PARTITION p20200106 VALUES LESS THAN ('2020-01-06') ENGINE = InnoDB,
 PARTITION p20200113 VALUES LESS THAN ('2020-01-13') ENGINE = InnoDB,
 PARTITION p20200120 VALUES LESS THAN ('2020-01-20') ENGINE = InnoDB,
 PARTITION p20200127 VALUES LESS THAN ('2020-01-27') ENGINE = InnoDB,
 PARTITION p20200203 VALUES LESS THAN ('2020-02-03') ENGINE = InnoDB,
 PARTITION p20200210 VALUES LESS THAN ('2020-02-10') ENGINE = InnoDB,
 PARTITION p20200217 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_sign_in_before_transfer_link_monitor_sum` */

DROP TABLE IF EXISTS `ex_sign_in_before_transfer_link_monitor_sum`;

CREATE TABLE `ex_sign_in_before_transfer_link_monitor_sum` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `transfer_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '中转班次日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `link_type` varchar(30) DEFAULT NULL COMMENT '环节分类',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_acct_no` varchar(50) DEFAULT NULL COMMENT '月结卡号',
  `is_electric` varchar(2) DEFAULT NULL COMMENT '是否带电',
  `transfer_batch_code` varchar(30) DEFAULT NULL COMMENT '中转班次',
  `send_network_code` varchar(30) DEFAULT NULL COMMENT '发出网点',
  `send_vehicle` varchar(30) DEFAULT NULL COMMENT '发出车标',
  `actual_arrival_network_code` varchar(30) DEFAULT NULL COMMENT '实际到达网点',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `send_count` int(10) DEFAULT NULL COMMENT '发件量',
  `ontime_arrival_count` int(10) DEFAULT NULL COMMENT '准时到件量',
  `warning_count` int(10) DEFAULT NULL COMMENT '预警量',
  `timeout_arrived_count` int(10) DEFAULT NULL COMMENT '超时已到量',
  `timeout_no_arrival_count` int(10) DEFAULT NULL COMMENT '超时未到量',
  `retention_count` int(10) DEFAULT NULL COMMENT '滞留量',
  `same_day_arrived_count` int(10) DEFAULT NULL COMMENT '当天已到量',
  `total_no_arrival_count` int(10) DEFAULT NULL COMMENT '累计未到量',
  `total_arrived_count` int(10) DEFAULT NULL COMMENT '累计已到量',
  `network_plan_no_same_count` int(10) DEFAULT NULL COMMENT '规划不符网点票数',
  `avg_time_consuming` double(10,2) DEFAULT NULL COMMENT '平均耗时',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `server_ip` varchar(30) DEFAULT NULL COMMENT '服务器运行IP',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`transfer_batch_date`),
  KEY `transfer_batch_date` (`transfer_batch_date`) USING BTREE,
  KEY `idx_source_country_code` (`source_country_code`) USING HASH,
  KEY `idx_source_dept_code` (`source_dept_code`) USING HASH,
  KEY `idx_source_area_code` (`source_area_code`) USING HASH,
  KEY `idx_source_city_code` (`source_city_code`) USING HASH,
  KEY `idx_source_network_code` (`source_network_code`) USING HASH,
  KEY `idx_dest_country_code` (`dest_country_code`) USING HASH,
  KEY `idx_dest_dept_code` (`dest_dept_code`) USING HASH,
  KEY `idx_dest_city_code` (`dest_city_code`) USING HASH,
  KEY `idx_dest_area_code` (`dest_area_code`) USING HASH,
  KEY `idx_dest_network_code` (`dest_network_code`) USING HASH,
  KEY `idx_customer_code` (`customer_code`) USING HASH,
  KEY `customer_acct_no` (`customer_acct_no`) USING HASH,
  KEY `is_electric` (`is_electric`) USING HASH,
  KEY `transfer_batch_code` (`transfer_batch_code`) USING HASH,
  KEY `send_network_code` (`send_network_code`) USING HASH,
  KEY `send_vehicle` (`send_vehicle`) USING HASH,
  KEY `actual_arrival_network_code` (`actual_arrival_network_code`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=6715 DEFAULT CHARSET=utf8 COMMENT='EX签入前中转环节监控汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(transfer_batch_date)
(PARTITION p20190223 VALUES LESS THAN ('2019-02-23') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN ('2019-02-27') ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN ('2019-02-28') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190302 VALUES LESS THAN ('2019-03-02') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190306 VALUES LESS THAN ('2019-03-06') ENGINE = InnoDB,
 PARTITION p20190307 VALUES LESS THAN ('2019-03-07') ENGINE = InnoDB,
 PARTITION p20190308 VALUES LESS THAN ('2019-03-08') ENGINE = InnoDB,
 PARTITION p20190309 VALUES LESS THAN ('2019-03-09') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190313 VALUES LESS THAN ('2019-03-13') ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN ('2019-03-14') ENGINE = InnoDB,
 PARTITION p20190315 VALUES LESS THAN ('2019-03-15') ENGINE = InnoDB,
 PARTITION p20190316 VALUES LESS THAN ('2019-03-16') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190320 VALUES LESS THAN ('2019-03-20') ENGINE = InnoDB,
 PARTITION p20190321 VALUES LESS THAN ('2019-03-21') ENGINE = InnoDB,
 PARTITION p20190322 VALUES LESS THAN ('2019-03-22') ENGINE = InnoDB,
 PARTITION p20190323 VALUES LESS THAN ('2019-03-23') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190327 VALUES LESS THAN ('2019-03-27') ENGINE = InnoDB,
 PARTITION p20190328 VALUES LESS THAN ('2019-03-28') ENGINE = InnoDB,
 PARTITION p20190329 VALUES LESS THAN ('2019-03-29') ENGINE = InnoDB,
 PARTITION p20190330 VALUES LESS THAN ('2019-03-30') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190403 VALUES LESS THAN ('2019-04-03') ENGINE = InnoDB,
 PARTITION p20190404 VALUES LESS THAN ('2019-04-04') ENGINE = InnoDB,
 PARTITION p20190405 VALUES LESS THAN ('2019-04-05') ENGINE = InnoDB,
 PARTITION p20190406 VALUES LESS THAN ('2019-04-06') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190410 VALUES LESS THAN ('2019-04-10') ENGINE = InnoDB,
 PARTITION p20190411 VALUES LESS THAN ('2019-04-11') ENGINE = InnoDB,
 PARTITION p20190412 VALUES LESS THAN ('2019-04-12') ENGINE = InnoDB,
 PARTITION p20190413 VALUES LESS THAN ('2019-04-13') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190417 VALUES LESS THAN ('2019-04-17') ENGINE = InnoDB,
 PARTITION p20190418 VALUES LESS THAN ('2019-04-18') ENGINE = InnoDB,
 PARTITION p20190419 VALUES LESS THAN ('2019-04-19') ENGINE = InnoDB,
 PARTITION p20190420 VALUES LESS THAN ('2019-04-20') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190424 VALUES LESS THAN ('2019-04-24') ENGINE = InnoDB,
 PARTITION p20190425 VALUES LESS THAN ('2019-04-25') ENGINE = InnoDB,
 PARTITION p20190426 VALUES LESS THAN ('2019-04-26') ENGINE = InnoDB,
 PARTITION p20190427 VALUES LESS THAN ('2019-04-27') ENGINE = InnoDB,
 PARTITION p20190428 VALUES LESS THAN ('2019-04-28') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190430 VALUES LESS THAN ('2019-04-30') ENGINE = InnoDB,
 PARTITION p20190501 VALUES LESS THAN ('2019-05-01') ENGINE = InnoDB,
 PARTITION p20190502 VALUES LESS THAN ('2019-05-02') ENGINE = InnoDB,
 PARTITION p20190503 VALUES LESS THAN ('2019-05-03') ENGINE = InnoDB,
 PARTITION p20190504 VALUES LESS THAN ('2019-05-04') ENGINE = InnoDB,
 PARTITION p20190505 VALUES LESS THAN ('2019-05-05') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190507 VALUES LESS THAN ('2019-05-07') ENGINE = InnoDB,
 PARTITION p20190508 VALUES LESS THAN ('2019-05-08') ENGINE = InnoDB,
 PARTITION p20190509 VALUES LESS THAN ('2019-05-09') ENGINE = InnoDB,
 PARTITION p20190510 VALUES LESS THAN ('2019-05-10') ENGINE = InnoDB,
 PARTITION p20190511 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_sign_out` */

DROP TABLE IF EXISTS `ex_sign_out`;

CREATE TABLE `ex_sign_out` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `sign_out_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '签出日期',
  `sign_out_tm` datetime DEFAULT NULL COMMENT '签出时间',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `provider_waybill_no` varchar(100) DEFAULT NULL COMMENT '服务商单号',
  `provider_code` varchar(100) DEFAULT NULL COMMENT '服务商代码',
  `provider_name` varchar(200) DEFAULT NULL COMMENT '服务商名称',
  `sign_out_package_no` varchar(30) DEFAULT NULL COMMENT '签出包袋号',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`,`sign_out_dt`),
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH COMMENT '运单号索引',
  KEY `idx_sign_out_dt` (`sign_out_dt`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=700 DEFAULT CHARSET=utf8 COMMENT='EX签出表'
/*!50500 PARTITION BY RANGE  COLUMNS(sign_out_dt)
(PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN ('2019-11-04') ENGINE = InnoDB,
 PARTITION p20191111 VALUES LESS THAN ('2019-11-11') ENGINE = InnoDB,
 PARTITION p20191118 VALUES LESS THAN ('2019-11-18') ENGINE = InnoDB,
 PARTITION p20191125 VALUES LESS THAN ('2019-11-25') ENGINE = InnoDB,
 PARTITION p20191202 VALUES LESS THAN ('2019-12-02') ENGINE = InnoDB,
 PARTITION p20191209 VALUES LESS THAN ('2019-12-09') ENGINE = InnoDB,
 PARTITION p20191216 VALUES LESS THAN ('2019-12-16') ENGINE = InnoDB,
 PARTITION p20191223 VALUES LESS THAN ('2019-12-23') ENGINE = InnoDB,
 PARTITION p20191230 VALUES LESS THAN ('2019-12-30') ENGINE = InnoDB,
 PARTITION p20200106 VALUES LESS THAN ('2020-01-06') ENGINE = InnoDB,
 PARTITION p20200113 VALUES LESS THAN ('2020-01-13') ENGINE = InnoDB,
 PARTITION p20200120 VALUES LESS THAN ('2020-01-20') ENGINE = InnoDB,
 PARTITION p20200127 VALUES LESS THAN ('2020-01-27') ENGINE = InnoDB,
 PARTITION p20200203 VALUES LESS THAN ('2020-02-03') ENGINE = InnoDB,
 PARTITION p20200210 VALUES LESS THAN ('2020-02-10') ENGINE = InnoDB,
 PARTITION p20200217 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_submit_prediction` */

DROP TABLE IF EXISTS `ex_submit_prediction`;

CREATE TABLE `ex_submit_prediction` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `order_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '下单日期',
  `order_tm` datetime DEFAULT NULL COMMENT '下单时间',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `customer_code` varchar(30) DEFAULT NULL COMMENT '客户代码',
  `customer_name` varchar(100) DEFAULT NULL COMMENT '客户名称',
  `cargo_type_code` varchar(30) DEFAULT NULL COMMENT '快件内容代码',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `is_electric` varchar(1) DEFAULT NULL COMMENT '是否带电',
  `pieces` int(10) DEFAULT NULL COMMENT '件数',
  `en_name_declare` varchar(100) DEFAULT NULL COMMENT '英文申报品名',
  `total_declared_value` double(17,3) DEFAULT NULL COMMENT '申报价值总价',
  `customer_weight` double(17,3) DEFAULT NULL COMMENT '客户重量',
  `overseas_import_port` varchar(600) DEFAULT NULL COMMENT '海外进口口岸',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`,`order_dt`),
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH COMMENT '运单号索引',
  KEY `idx_order_dt` (`order_dt`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=11283 DEFAULT CHARSET=utf8 COMMENT='EX提交预报表'
/*!50500 PARTITION BY RANGE  COLUMNS(order_dt)
(PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN ('2019-11-04') ENGINE = InnoDB,
 PARTITION p20191111 VALUES LESS THAN ('2019-11-11') ENGINE = InnoDB,
 PARTITION p20191118 VALUES LESS THAN ('2019-11-18') ENGINE = InnoDB,
 PARTITION p20191125 VALUES LESS THAN ('2019-11-25') ENGINE = InnoDB,
 PARTITION p20191202 VALUES LESS THAN ('2019-12-02') ENGINE = InnoDB,
 PARTITION p20191209 VALUES LESS THAN ('2019-12-09') ENGINE = InnoDB,
 PARTITION p20191216 VALUES LESS THAN ('2019-12-16') ENGINE = InnoDB,
 PARTITION p20191223 VALUES LESS THAN ('2019-12-23') ENGINE = InnoDB,
 PARTITION p20191230 VALUES LESS THAN ('2019-12-30') ENGINE = InnoDB,
 PARTITION p20200106 VALUES LESS THAN ('2020-01-06') ENGINE = InnoDB,
 PARTITION p20200113 VALUES LESS THAN ('2020-01-13') ENGINE = InnoDB,
 PARTITION p20200120 VALUES LESS THAN ('2020-01-20') ENGINE = InnoDB,
 PARTITION p20200127 VALUES LESS THAN ('2020-01-27') ENGINE = InnoDB,
 PARTITION p20200203 VALUES LESS THAN ('2020-02-03') ENGINE = InnoDB,
 PARTITION p20200210 VALUES LESS THAN ('2020-02-10') ENGINE = InnoDB,
 PARTITION p20200217 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_track_rule_config` */

DROP TABLE IF EXISTS `ex_track_rule_config`;

CREATE TABLE `ex_track_rule_config` (
  `id` bigint(15) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `source_type` varchar(1) DEFAULT NULL COMMENT '始发地类型 0:地区 1:网点',
  `source_place` varchar(50) DEFAULT NULL COMMENT '始发地',
  `source_place_area_code` varchar(20) DEFAULT NULL COMMENT '始发地地区',
  `dest_type` varchar(1) DEFAULT NULL COMMENT '目的地类型 0:地区 1:网点',
  `dest_place` varchar(50) DEFAULT NULL COMMENT '规划目的地',
  `dest_place_area_code` varchar(20) DEFAULT NULL COMMENT '目的地地区',
  `link_type` varchar(20) DEFAULT NULL COMMENT '根据二级代码配置',
  `product_code` varchar(20) DEFAULT NULL COMMENT '产品类型',
  `is_electric` varchar(1) DEFAULT NULL COMMENT '是否带电 0:否 1:是',
  `import_port` varchar(20) DEFAULT NULL COMMENT '进口口岸',
  `work_day` varchar(8) DEFAULT NULL COMMENT '适用工作日',
  `is_display` varchar(1) DEFAULT NULL COMMENT '该数据是否在前台展示 0:否 1:是',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_src_place` (`source_place`) USING HASH,
  KEY `idx_dest_place` (`dest_place`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=2211336 DEFAULT CHARSET=utf8 COMMENT='EX路由规则配置';

/*Table structure for table `ex_two_level_config` */

DROP TABLE IF EXISTS `ex_two_level_config`;

CREATE TABLE `ex_two_level_config` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `one_level_code` varchar(50) DEFAULT NULL COMMENT '一级分类代码',
  `two_level_code` varchar(50) DEFAULT NULL COMMENT '二级分类代码',
  `cn_describe` varchar(50) DEFAULT NULL COMMENT '中文描述',
  `en_describe` varchar(100) DEFAULT NULL COMMENT '英文描述',
  `update_user` varchar(50) DEFAULT NULL COMMENT '修改用户',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '添加时间',
  PRIMARY KEY (`id`),
  KEY `index_one_level_code` (`one_level_code`) USING HASH,
  KEY `index_two_level_code` (`two_level_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=54 DEFAULT CHARSET=utf8mb4 COMMENT='二级分类配置';

/*Table structure for table `ex_whole_process_config` */

DROP TABLE IF EXISTS `ex_whole_process_config`;

CREATE TABLE `ex_whole_process_config` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `process_monitor_name` varchar(50) DEFAULT NULL COMMENT '固定全流程',
  `start_place_type` smallint(5) DEFAULT NULL COMMENT '起始地类型-国家 0 地区 1',
  `start_place` varchar(30) DEFAULT NULL COMMENT '起始地',
  `end_place_type` smallint(5) DEFAULT NULL COMMENT '结束地类型-国家 0 地区 1',
  `end_place` varchar(30) DEFAULT NULL COMMENT '结束地',
  `aging_type` smallint(5) DEFAULT NULL COMMENT '时效类型(0 工作日 1 自然日)',
  `aging_day` int(5) DEFAULT NULL COMMENT '时效天数',
  `product_type` varchar(5) DEFAULT NULL COMMENT '产品类型（EXP,EXW,EXD）',
  `is_electric` char(1) DEFAULT NULL COMMENT '是否带电 Y:是带电,N:没有带电',
  `work_day` varchar(10) DEFAULT NULL COMMENT '适用工作日1表示周一,2表示周二...''',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_start_place` (`start_place`) USING HASH,
  KEY `idx_product type` (`product_type`) USING HASH,
  KEY `idx_work_day` (`work_day`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=190 DEFAULT CHARSET=utf8mb4 COMMENT='EX全流程配置';

/*Table structure for table `ex_whole_process_monitor` */

DROP TABLE IF EXISTS `ex_whole_process_monitor`;

CREATE TABLE `ex_whole_process_monitor` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `order_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '下单日期',
  `product_code` varchar(20) DEFAULT NULL COMMENT '产品类型',
  `customer_code` varchar(20) DEFAULT NULL COMMENT '客户代码',
  `customer_acct_code` varchar(50) DEFAULT NULL COMMENT '付款客户卡号（月结卡号）',
  `is_battery` varchar(10) DEFAULT NULL COMMENT '是否带电',
  `source_country` varchar(30) DEFAULT NULL COMMENT '原寄地国家',
  `source_dept` varchar(30) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(30) DEFAULT NULL COMMENT '原寄地地区',
  `source_city` varchar(30) DEFAULT NULL COMMENT '原寄地城市',
  `source_network` varchar(30) DEFAULT NULL COMMENT '原寄地网点',
  `dest_country` varchar(30) DEFAULT NULL COMMENT '目的地国家',
  `dest_city` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `delivery_network` varchar(20) DEFAULT NULL COMMENT '派送网点编码',
  `order_count` int(11) DEFAULT NULL COMMENT '订单量',
  `received_count` int(11) DEFAULT NULL COMMENT '收件量',
  `package_count` int(11) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,5) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,5) DEFAULT NULL COMMENT '计费重量',
  `sign_out_count` int(11) DEFAULT NULL COMMENT '签出量',
  `warning_count` int(11) DEFAULT NULL COMMENT '预警派件量',
  `not_delivery_count` int(11) DEFAULT NULL COMMENT '未派件量',
  `delivery_count` int(11) DEFAULT NULL COMMENT '派件量',
  `dayn_reached_count` int(11) DEFAULT NULL COMMENT ' N天（自然日）达成票数',
  `dayn_not_reached_count` int(11) DEFAULT NULL COMMENT 'N天（自然日）未达成票数',
  `reached_count` int(11) DEFAULT NULL COMMENT '产品时效达成票数',
  `reached_rate` varchar(20) DEFAULT NULL COMMENT '产品时效达成率',
  `not_reached_count` int(11) DEFAULT NULL COMMENT '产品时效未达成票数',
  `timeout_not_reached_count` int(11) DEFAULT NULL COMMENT '超时未完成票数',
  `timeout_reached_count` int(11) DEFAULT NULL COMMENT '超时已完成票数',
  `pick_up_tache_timeout_count` int(11) DEFAULT NULL COMMENT '收件环节超时量',
  `pick_up_net_timeout_count` int(11) DEFAULT NULL COMMENT '收件网点超时量',
  `before_signin_transfer_tache_timeout_count` int(11) DEFAULT NULL COMMENT '签入前中转环节超时量',
  `center_transfer_tache_timeout_count` int(11) DEFAULT NULL COMMENT '中心中转环节超时量',
  `operate_center_net_timeout_count` int(11) DEFAULT NULL COMMENT '操作中心超时量 ',
  `center_to_port_tache_timeout_count` int(11) DEFAULT NULL COMMENT '中心至口岸环节超时量',
  `export_port_timeout_count` int(11) DEFAULT NULL COMMENT '出口口岸超时量',
  `port_transfer_tache_timeout_count` int(11) DEFAULT NULL COMMENT '口岸中转环节超时量',
  `out_warehouse_tache_timeout_count` int(11) DEFAULT NULL COMMENT '排仓环节超时量',
  `flight_tache_timeout_count` int(11) DEFAULT NULL COMMENT '运力环节超时量',
  `take_tache_timeout_count` int(11) DEFAULT NULL COMMENT '提货环节超时',
  `import_tache_timeout_count` int(11) DEFAULT NULL COMMENT '进口环节超时量',
  `handover_net_timeout_count` int(11) DEFAULT NULL COMMENT '交接节点超时量',
  `delivery_net_timeout_count` int(11) DEFAULT NULL COMMENT '派送节点超时量',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(30) DEFAULT NULL COMMENT '目的地地区',
  `dest_network` varchar(30) DEFAULT NULL COMMENT '目的地网点',
  `planned_export_port` varchar(30) DEFAULT NULL COMMENT '规划出口口岸',
  `planned_entry_port` varchar(30) DEFAULT NULL COMMENT '规划进口口岸',
  PRIMARY KEY (`id`,`order_dt`),
  KEY `idx_order_dt` (`order_dt`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE,
  KEY `idx_source_network` (`source_network`) USING BTREE,
  KEY `idx_dest_city` (`dest_city`) USING BTREE,
  KEY `idx_is_battery` (`is_battery`) USING BTREE,
  KEY `idx_customer_acct_code` (`customer_acct_code`) USING BTREE,
  KEY `idx_source_city` (`source_city`) USING BTREE,
  KEY `idx_delivery_network` (`delivery_network`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=754 DEFAULT CHARSET=utf8 COMMENT='EX派件全流程监控统计表'
/*!50500 PARTITION BY RANGE  COLUMNS(order_dt)
(PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-13') ENGINE = InnoDB,
 PARTITION p20190214 VALUES LESS THAN ('2019-02-14') ENGINE = InnoDB,
 PARTITION p20190215 VALUES LESS THAN ('2019-02-15') ENGINE = InnoDB,
 PARTITION p20190216 VALUES LESS THAN ('2019-02-16') ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN ('2019-02-17') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190219 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190220 VALUES LESS THAN ('2019-02-20') ENGINE = InnoDB,
 PARTITION p20190221 VALUES LESS THAN ('2019-02-21') ENGINE = InnoDB,
 PARTITION p20190222 VALUES LESS THAN ('2019-02-22') ENGINE = InnoDB,
 PARTITION p20190223 VALUES LESS THAN ('2019-02-23') ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN ('2019-02-24') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN ('2019-02-27') ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN ('2019-02-28') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190302 VALUES LESS THAN ('2019-03-02') ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN ('2019-03-03') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190306 VALUES LESS THAN ('2019-03-06') ENGINE = InnoDB,
 PARTITION p20190307 VALUES LESS THAN ('2019-03-07') ENGINE = InnoDB,
 PARTITION p20190308 VALUES LESS THAN ('2019-03-08') ENGINE = InnoDB,
 PARTITION p20190309 VALUES LESS THAN ('2019-03-09') ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN ('2019-03-10') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190313 VALUES LESS THAN ('2019-03-13') ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN ('2019-03-14') ENGINE = InnoDB,
 PARTITION p20190315 VALUES LESS THAN ('2019-03-15') ENGINE = InnoDB,
 PARTITION p20190316 VALUES LESS THAN ('2019-03-16') ENGINE = InnoDB,
 PARTITION p20190317 VALUES LESS THAN ('2019-03-17') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190320 VALUES LESS THAN ('2019-03-20') ENGINE = InnoDB,
 PARTITION p20190321 VALUES LESS THAN ('2019-03-21') ENGINE = InnoDB,
 PARTITION p20190322 VALUES LESS THAN ('2019-03-22') ENGINE = InnoDB,
 PARTITION p20190323 VALUES LESS THAN ('2019-03-23') ENGINE = InnoDB,
 PARTITION p20190324 VALUES LESS THAN ('2019-03-24') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190327 VALUES LESS THAN ('2019-03-27') ENGINE = InnoDB,
 PARTITION p20190328 VALUES LESS THAN ('2019-03-28') ENGINE = InnoDB,
 PARTITION p20190329 VALUES LESS THAN ('2019-03-29') ENGINE = InnoDB,
 PARTITION p20190330 VALUES LESS THAN ('2019-03-30') ENGINE = InnoDB,
 PARTITION p20190331 VALUES LESS THAN ('2019-03-31') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190403 VALUES LESS THAN ('2019-04-03') ENGINE = InnoDB,
 PARTITION p20190404 VALUES LESS THAN ('2019-04-04') ENGINE = InnoDB,
 PARTITION p20190405 VALUES LESS THAN ('2019-04-05') ENGINE = InnoDB,
 PARTITION p20190406 VALUES LESS THAN ('2019-04-06') ENGINE = InnoDB,
 PARTITION p20190407 VALUES LESS THAN ('2019-04-07') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190410 VALUES LESS THAN ('2019-04-10') ENGINE = InnoDB,
 PARTITION p20190411 VALUES LESS THAN ('2019-04-11') ENGINE = InnoDB,
 PARTITION p20190412 VALUES LESS THAN ('2019-04-12') ENGINE = InnoDB,
 PARTITION p20190413 VALUES LESS THAN ('2019-04-13') ENGINE = InnoDB,
 PARTITION p20190414 VALUES LESS THAN ('2019-04-14') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190417 VALUES LESS THAN ('2019-04-17') ENGINE = InnoDB,
 PARTITION p20190418 VALUES LESS THAN ('2019-04-18') ENGINE = InnoDB,
 PARTITION p20190419 VALUES LESS THAN ('2019-04-19') ENGINE = InnoDB,
 PARTITION p20190420 VALUES LESS THAN ('2019-04-20') ENGINE = InnoDB,
 PARTITION p20190421 VALUES LESS THAN ('2019-04-21') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190424 VALUES LESS THAN ('2019-04-24') ENGINE = InnoDB,
 PARTITION p20190425 VALUES LESS THAN ('2019-04-25') ENGINE = InnoDB,
 PARTITION p20190426 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `ex_whole_process_monitor_detail` */

DROP TABLE IF EXISTS `ex_whole_process_monitor_detail`;

CREATE TABLE `ex_whole_process_monitor_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `order_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '下单日期',
  `order_tm` datetime DEFAULT NULL COMMENT '下单时间',
  `main_waybill_no` varchar(64) DEFAULT NULL COMMENT '运单号',
  `source_country` varchar(32) DEFAULT NULL COMMENT '原寄地国家',
  `source_dept` varchar(32) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(32) DEFAULT NULL COMMENT '原寄地地区',
  `source_city` varchar(32) DEFAULT NULL COMMENT '原寄地城市',
  `source_network` varchar(32) DEFAULT NULL COMMENT '原寄地网点',
  `dest_country` varchar(32) DEFAULT NULL COMMENT '目的地国家',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(64) DEFAULT NULL COMMENT '目的地地区',
  `dest_city` varchar(64) DEFAULT NULL COMMENT '目的地城市',
  `source_consign_time` datetime DEFAULT NULL COMMENT '收件时间',
  `source_loading_time` datetime DEFAULT NULL COMMENT '收件装车时间。收件网点装车时间',
  `customer_code` varchar(64) DEFAULT NULL COMMENT '客户代码',
  `customer_acct_code` varchar(64) DEFAULT NULL COMMENT '付款客户卡号（月结卡号）',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `is_battery` int(1) DEFAULT '0' COMMENT '是否带电 0：否，1：是',
  `planned_collect_network` varchar(32) DEFAULT NULL COMMENT '规划集货网点',
  `planned_export_port` varchar(32) DEFAULT NULL COMMENT '规划出口口岸',
  `planned_entry_port` varchar(32) DEFAULT NULL COMMENT '规划进口口岸',
  `sign_in_network` varchar(32) DEFAULT NULL COMMENT '签入网点',
  `weigh_tm` datetime DEFAULT NULL COMMENT '称重时间',
  `sign_out_tm` datetime DEFAULT NULL COMMENT '签出时间',
  `delivery_agent_name` varchar(64) DEFAULT NULL COMMENT '派件代理名称',
  `delivery_agent_code` varchar(64) DEFAULT NULL COMMENT '派件代理代码',
  `provider_waybill_no` varchar(100) DEFAULT NULL COMMENT '服务商单号',
  `sign_out_package_no` varchar(32) DEFAULT NULL COMMENT '签出包号',
  `consignment_name` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `cons_value` double(16,2) DEFAULT NULL COMMENT '声明价值',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `main_number` varchar(15) DEFAULT NULL COMMENT '主提单号',
  `delivery_network` varchar(32) DEFAULT NULL COMMENT '派送网点编码',
  `delivery_time` datetime DEFAULT NULL COMMENT '派送时间',
  `product_aging_deadline` datetime DEFAULT NULL COMMENT '产品时效标准',
  `n_workday_aging` int(10) DEFAULT NULL COMMENT 'N天时效（工作日）。单位：天',
  `is_workday_reached` int(1) DEFAULT '0' COMMENT 'N天达成（工作日）。0：否，1：是',
  `natural_day_aging_deadline` datetime DEFAULT NULL COMMENT 'N天自然日时效标准',
  `natural_day_aging` int(10) DEFAULT NULL COMMENT 'N天时效（自然日）。单位：天',
  `is_natural_reached` int(1) DEFAULT '0' COMMENT 'N天达成（自然日）。0：否，1：是',
  `abnormal_link_count` varchar(10) DEFAULT NULL COMMENT '异常环节数',
  `warning_timeout_hours` varchar(32) DEFAULT NULL COMMENT '预警/超时（h）',
  `warning_timeout_days` varchar(32) DEFAULT NULL COMMENT '预警/超时（d）',
  `newest_process` varchar(32) DEFAULT NULL COMMENT '当前环节',
  `newest_zone_code` varchar(32) DEFAULT NULL COMMENT '当前网点',
  `newest_state` varchar(32) DEFAULT NULL COMMENT '当前状态',
  `server_ip` varchar(32) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(255) DEFAULT NULL COMMENT '错误原因备注',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `pick_up_tache_timeout_count` int(11) DEFAULT NULL COMMENT '收件环节超时量',
  `pick_up_net_timeout_count` int(11) DEFAULT NULL COMMENT '收件网点超时量',
  `before_signin_transfer_tache_timeout_count` int(11) DEFAULT NULL COMMENT '签入前中转环节超时量',
  `center_transfer_tache_timeout_count` int(11) DEFAULT NULL COMMENT '中心中转环节超时量',
  `operate_center_net_timeout_count` int(11) DEFAULT NULL COMMENT '操作中心超时量',
  `center_to_port_tache_timeout_count` int(11) DEFAULT NULL COMMENT '中心至口岸环节超时量',
  `export_port_timeout_count` int(11) DEFAULT NULL COMMENT '出口口岸超时量',
  `port_transfer_tache_timeout_count` int(11) DEFAULT NULL COMMENT '口岸中转环节超时量',
  `out_warehouse_tache_timeout_count` int(11) DEFAULT NULL COMMENT '排仓环节超时量',
  `flight_tache_timeout_count` int(11) DEFAULT NULL COMMENT '运力环节超时量',
  `take_tache_timeout_count` int(11) DEFAULT NULL COMMENT '提货环节超时',
  `import_tache_timeout_count` int(11) DEFAULT NULL COMMENT '进口环节超时量',
  `handover_net_timeout_count` int(11) DEFAULT NULL COMMENT '交接节点超时量',
  `delivery_net_timeout_count` int(11) DEFAULT NULL COMMENT '派送节点超时量',
  `aging_type` int(11) DEFAULT NULL COMMENT '时效类型(0 工作日 1 自然日)',
  `aging_day` int(11) DEFAULT NULL COMMENT '时效天数',
  `dest_network` varchar(30) DEFAULT NULL COMMENT '目的地网点',
  PRIMARY KEY (`id`,`order_dt`),
  KEY `idx_order_dt` (`order_dt`) USING BTREE,
  KEY `idx_delivery_network` (`delivery_network`) USING BTREE,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING BTREE,
  KEY `idx_source_network` (`source_network`) USING BTREE,
  KEY `idx_source_city` (`source_city`) USING BTREE,
  KEY `idx_is_battery` (`is_battery`) USING BTREE,
  KEY `idx_dest_city` (`dest_city`) USING BTREE,
  KEY `idx_customer_acct_code` (`customer_acct_code`) USING BTREE,
  KEY `idx_sign_out_package_no` (`sign_out_package_no`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=12394 DEFAULT CHARSET=utf8 COMMENT='EX派件全流程监控明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(order_dt)
(PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190115 VALUES LESS THAN ('2019-01-15') ENGINE = InnoDB,
 PARTITION p20190116 VALUES LESS THAN ('2019-01-16') ENGINE = InnoDB,
 PARTITION p20190117 VALUES LESS THAN ('2019-01-17') ENGINE = InnoDB,
 PARTITION p20190118 VALUES LESS THAN ('2019-01-18') ENGINE = InnoDB,
 PARTITION p20190119 VALUES LESS THAN ('2019-01-19') ENGINE = InnoDB,
 PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190122 VALUES LESS THAN ('2019-01-22') ENGINE = InnoDB,
 PARTITION p20190123 VALUES LESS THAN ('2019-01-23') ENGINE = InnoDB,
 PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN ('2019-02-12') ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN ('2019-02-19') ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN ('2019-02-26') ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN ('2019-03-05') ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN ('2019-03-12') ENGINE = InnoDB,
 PARTITION p20190319 VALUES LESS THAN ('2019-03-19') ENGINE = InnoDB,
 PARTITION p20190326 VALUES LESS THAN ('2019-03-26') ENGINE = InnoDB,
 PARTITION p20190402 VALUES LESS THAN ('2019-04-02') ENGINE = InnoDB,
 PARTITION p20190409 VALUES LESS THAN ('2019-04-09') ENGINE = InnoDB,
 PARTITION p20190416 VALUES LESS THAN ('2019-04-16') ENGINE = InnoDB,
 PARTITION p20190423 VALUES LESS THAN ('2019-04-23') ENGINE = InnoDB,
 PARTITION p20190430 VALUES LESS THAN ('2019-04-30') ENGINE = InnoDB,
 PARTITION p20190507 VALUES LESS THAN ('2019-05-07') ENGINE = InnoDB,
 PARTITION p20190514 VALUES LESS THAN ('2019-05-14') ENGINE = InnoDB,
 PARTITION p20190521 VALUES LESS THAN ('2019-05-21') ENGINE = InnoDB,
 PARTITION p20190528 VALUES LESS THAN ('2019-05-28') ENGINE = InnoDB,
 PARTITION p20190604 VALUES LESS THAN ('2019-06-04') ENGINE = InnoDB,
 PARTITION p20190611 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `express_type` */

DROP TABLE IF EXISTS `express_type`;

CREATE TABLE `express_type` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `aging_type` varchar(64) DEFAULT NULL COMMENT '时效类型',
  `bsp_express_type` varchar(64) DEFAULT NULL COMMENT '对应BSP产品编码',
  `product_code` varchar(50) DEFAULT NULL COMMENT '产品类型代码',
  `cargo_type` varchar(64) DEFAULT NULL COMMENT '货物类型',
  `is_selected` int(1) NOT NULL DEFAULT '0' COMMENT '是否已经被产品类型选用,否:0,是:1,默认:否:0',
  `detail` varchar(255) DEFAULT NULL COMMENT '描述',
  `express_type` varchar(64) DEFAULT NULL COMMENT '产品编码',
  `product_type` varchar(64) DEFAULT NULL COMMENT '快件类型',
  `monitor_status` int(1) unsigned DEFAULT '1' COMMENT '监控标记。 0：监控 1：不监控 ， 默认为不监控',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `updater` varchar(64) DEFAULT NULL COMMENT '更新人',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_union_key` (`aging_type`,`bsp_express_type`,`cargo_type`,`express_type`,`product_type`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=29996 DEFAULT CHARSET=utf8 COMMENT='快件类型表';

/*Table structure for table `full_waybill_info` */

DROP TABLE IF EXISTS `full_waybill_info`;

CREATE TABLE `full_waybill_info` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `stms_insert_time` datetime NOT NULL COMMENT 'STMS插入时间',
  `waybill_id` varchar(50) DEFAULT NULL COMMENT '运单ID',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `source_zone_code` varchar(50) DEFAULT NULL COMMENT '原寄地（网点代码）',
  `dest_zone_code` varchar(50) DEFAULT NULL COMMENT '目的地（城市代码）',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费总重量',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `quantity` double(16,2) DEFAULT NULL COMMENT '包裹总件数',
  `consignee_emp_code` varchar(50) DEFAULT NULL COMMENT '收件员',
  `consigned_tm` timestamp NULL DEFAULT NULL COMMENT '寄件时间',
  `deliver_emp_code` varchar(50) DEFAULT NULL COMMENT '派件员',
  `subscriber_name` varchar(100) DEFAULT NULL COMMENT '签收人',
  `signin_tm` timestamp NULL DEFAULT NULL COMMENT '签收时间',
  `cargo_type_code` varchar(32) DEFAULT NULL COMMENT '快件内容类型',
  `limit_type_code` varchar(32) DEFAULT NULL COMMENT '时效类型',
  `distance_type_code` varchar(32) DEFAULT NULL COMMENT '区域类型 ',
  `transport_type_code` varchar(25) DEFAULT NULL COMMENT '运输方式',
  `express_type_code` varchar(32) DEFAULT NULL COMMENT '业务类型 ',
  `ackbill_type_code` varchar(32) DEFAULT NULL COMMENT '回单类型',
  `volume` double(16,2) DEFAULT NULL COMMENT '总体积',
  `bill_long` double(16,4) DEFAULT NULL COMMENT '总长',
  `bill_width` double(16,4) DEFAULT NULL COMMENT '总宽',
  `bill_high` double(16,4) DEFAULT NULL COMMENT '总高',
  `version_no` varchar(10) DEFAULT NULL COMMENT '版本号',
  `lock_version_no` varchar(10) DEFAULT NULL COMMENT '锁版本号',
  `unit_weight` varchar(24) DEFAULT NULL COMMENT '重量计量单位',
  `cons_value` double(17,6) DEFAULT NULL COMMENT '声明价值',
  `cons_value_currency_code` varchar(32) DEFAULT NULL COMMENT '声明价值币种 ',
  `other_node_flg` varchar(10) DEFAULT NULL COMMENT '是否来自其他节点的同步数据',
  `product_code` varchar(32) DEFAULT NULL COMMENT '产品代码',
  `input_tm` timestamp NULL DEFAULT NULL COMMENT '创建时间 ',
  `inputer_emp_code` varchar(25) DEFAULT NULL COMMENT '创建人工号 ',
  `modified_tm` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  `modified_emp_code` varchar(32) DEFAULT NULL COMMENT '修改人 ',
  `waybill_remark` varchar(600) DEFAULT NULL COMMENT '备注',
  `list_audited_flg` varchar(10) DEFAULT NULL COMMENT '寄方是否允许结算',
  `receipt_audited_flg` varchar(10) DEFAULT NULL COMMENT '到方是否允许结算',
  `third_audited_flg` varchar(10) DEFAULT NULL COMMENT '第三方是否允许结算',
  `audited_tm` timestamp NULL DEFAULT NULL COMMENT '审核时间',
  `auditer_emp_code` varchar(32) DEFAULT NULL COMMENT '审核员',
  `waybill_status` varchar(10) DEFAULT NULL COMMENT '运单状态',
  `order_no` varchar(50) DEFAULT NULL COMMENT '顺丰订单号',
  `ext_attr` varchar(1000) DEFAULT NULL COMMENT '其他属性',
  `list_version_no` varchar(10) DEFAULT NULL COMMENT '清单审核版本号',
  `receipt_version_no` varchar(10) DEFAULT NULL COMMENT '回单审核版本号',
  `third_version_no` varchar(10) DEFAULT NULL COMMENT '第三方审核版本号',
  `last_operation` varchar(10) DEFAULT NULL COMMENT '最后操作',
  `source_city_code` varchar(10) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_dept_code` varchar(10) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_city_code` varchar(10) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_dept_code` varchar(10) DEFAULT NULL COMMENT '目的地网点代码（一般为null）',
  `source_hq_code` varchar(10) DEFAULT NULL COMMENT '原寄地经营本部',
  `source_area_code` varchar(10) DEFAULT NULL COMMENT '原寄地地区代码',
  `dest_area_code` varchar(10) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_hq_code` varchar(10) DEFAULT NULL COMMENT '目的地经营本部',
  `product_type` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `sub_status` varchar(2) DEFAULT '0' COMMENT '订阅状态 0:为订阅 ，1:已订阅',
  `sub_time` timestamp NULL DEFAULT NULL COMMENT '订阅时间',
  `update_tm` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  `expect_start_tm` timestamp NULL DEFAULT NULL COMMENT '预约派件开始时间',
  `expect_finish_tm` timestamp NULL DEFAULT NULL COMMENT '预约派件结束时间',
  `provider` varchar(100) DEFAULT NULL COMMENT '提供者',
  `dyn_expc_delivery_tm` timestamp NULL DEFAULT NULL COMMENT '动态预计派件时间',
  `update_source` longtext COMMENT '更新源',
  `action_json` longtext COMMENT 'action动作json串',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_waybill_no` (`waybill_no`) USING BTREE COMMENT '运单号唯一索引',
  KEY `idx_sub_time` (`sub_time`) USING BTREE,
  KEY `idx_input_tm` (`input_tm`) USING BTREE,
  KEY `idx_stms_insert_time` (`stms_insert_time`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=37031 DEFAULT CHARSET=utf8 COMMENT='全量运单信息表';

/*Table structure for table `full_waybill_monitor` */

DROP TABLE IF EXISTS `full_waybill_monitor`;

CREATE TABLE `full_waybill_monitor` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '序号',
  `waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `source_country_code` varchar(10) DEFAULT NULL COMMENT '原寄地国家代码',
  `dest_country_code` varchar(10) NOT NULL COMMENT '目的地国家代码',
  `monitor_status` varchar(1) DEFAULT NULL COMMENT '运单时效监控状态。0：监控，1：不监控',
  `insert_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '监控状态更新时间',
  PRIMARY KEY (`id`,`insert_time`),
  KEY `index_dest_country_code_monitor_status` (`dest_country_code`,`monitor_status`) USING BTREE,
  KEY `index_waybill_no` (`waybill_no`)
) ENGINE=InnoDB AUTO_INCREMENT=41929 DEFAULT CHARSET=utf8 COMMENT='全量运单监控状态表'
/*!50100 PARTITION BY LIST (DAYOFYEAR(insert_time))
(PARTITION p1 VALUES IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15) ENGINE = InnoDB,
 PARTITION p2 VALUES IN (16,17,18,19,20,21,22,23,24,25,26,27,28,29,30) ENGINE = InnoDB,
 PARTITION p3 VALUES IN (31,32,33,34,35,36,37,38,39,40,41,42,43,44,45) ENGINE = InnoDB,
 PARTITION p4 VALUES IN (46,47,48,49,50,51,52,53,54,55,56,57,58,59,60) ENGINE = InnoDB,
 PARTITION p5 VALUES IN (61,62,63,64,65,66,67,68,69,70,71,72,73,74,75) ENGINE = InnoDB,
 PARTITION p6 VALUES IN (76,77,78,79,80,81,82,83,84,85,86,87,88,89,90) ENGINE = InnoDB,
 PARTITION p7 VALUES IN (91,92,93,94,95,96,97,98,99,100,101,102,103,104,105) ENGINE = InnoDB,
 PARTITION p8 VALUES IN (106,107,108,109,110,111,112,113,114,115,116,117,118,119,120) ENGINE = InnoDB,
 PARTITION p9 VALUES IN (121,122,123,124,125,126,127,128,129,130,131,132,133,134,135) ENGINE = InnoDB,
 PARTITION p10 VALUES IN (136,137,138,139,140,141,142,143,144,145,146,147,148,149,150) ENGINE = InnoDB,
 PARTITION p11 VALUES IN (151,152,153,154,155,156,157,158,159,160,161,162,163,164,165) ENGINE = InnoDB,
 PARTITION p12 VALUES IN (166,167,168,169,170,171,172,173,174,175,176,177,178,179,180) ENGINE = InnoDB,
 PARTITION p13 VALUES IN (181,182,183,184,185,186,187,188,189,190,191,192,193,194,195) ENGINE = InnoDB,
 PARTITION p14 VALUES IN (196,197,198,199,200,201,202,203,204,205,206,207,208,209,210) ENGINE = InnoDB,
 PARTITION p15 VALUES IN (211,212,213,214,215,216,217,218,219,220,221,222,223,224,225) ENGINE = InnoDB,
 PARTITION p16 VALUES IN (226,227,228,229,230,231,232,233,234,235,236,237,238,239,240) ENGINE = InnoDB,
 PARTITION p17 VALUES IN (241,242,243,244,245,246,247,248,249,250,251,252,253,254,255) ENGINE = InnoDB,
 PARTITION p18 VALUES IN (256,257,258,259,260,261,262,263,264,265,266,267,268,269,270) ENGINE = InnoDB,
 PARTITION p19 VALUES IN (271,272,273,274,275,276,277,278,279,280,281,282,283,284,285) ENGINE = InnoDB,
 PARTITION p20 VALUES IN (286,287,288,289,290,291,292,293,294,295,296,297,298,299,300) ENGINE = InnoDB,
 PARTITION p21 VALUES IN (301,302,303,304,305,306,307,308,309,310,311,312,313,314,315) ENGINE = InnoDB,
 PARTITION p22 VALUES IN (316,317,318,319,320,321,322,323,324,325,326,327,328,329,330) ENGINE = InnoDB,
 PARTITION p23 VALUES IN (331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348) ENGINE = InnoDB,
 PARTITION p24 VALUES IN (349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366) ENGINE = InnoDB) */;

/*Table structure for table `fvp_node_config` */

DROP TABLE IF EXISTS `fvp_node_config`;

CREATE TABLE `fvp_node_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `op_code` varchar(50) NOT NULL COMMENT '操作码',
  `op_name` varchar(100) DEFAULT NULL COMMENT '操作名称（中文）',
  `op_name_en` varchar(255) DEFAULT NULL COMMENT '操作名称（英文）',
  `seem_lost_node` varchar(50) DEFAULT NULL COMMENT '疑似遗失节点',
  `track_link` varchar(50) DEFAULT NULL COMMENT '路由环节',
  `retention_node` varchar(50) DEFAULT NULL COMMENT '滞留节点: 0:滞留 1:完结',
  `delivery_node` varchar(50) DEFAULT NULL COMMENT '派件节点:  0:上门派件',
  `op_link` varchar(50) DEFAULT NULL COMMENT '操作环节',
  `track_show_status` int(1) DEFAULT NULL COMMENT '路由是否显示（0：是，1：否）',
  `remarks` varchar(500) DEFAULT NULL COMMENT '备注',
  `enable_status` int(1) DEFAULT NULL COMMENT '是否有效（0：是。1：否）',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `index_op_code` (`op_code`) USING BTREE COMMENT '操作码唯一索引',
  UNIQUE KEY `index_op_name` (`op_name`) USING BTREE COMMENT '操作名称（中文）唯一索引',
  KEY `index_op_name_en` (`op_name_en`) USING HASH COMMENT '操作名称（英文）'
) ENGINE=InnoDB AUTO_INCREMENT=214 DEFAULT CHARSET=utf8 COMMENT='FVP节点配置表';

/*Table structure for table `import_template_upload` */

DROP TABLE IF EXISTS `import_template_upload`;

CREATE TABLE `import_template_upload` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT 'id主键',
  `module_code` varchar(50) NOT NULL COMMENT '菜单编码',
  `module_name` varchar(50) DEFAULT NULL COMMENT '菜单名称',
  `file_path` varchar(500) DEFAULT NULL COMMENT '文件路径',
  `file_name` varchar(100) DEFAULT NULL COMMENT '文件名',
  `status` int(1) DEFAULT NULL COMMENT '状态，0：待完成，1：已完成，2：异常',
  `operator` varchar(50) DEFAULT NULL COMMENT '操作人',
  `operation_time` datetime DEFAULT NULL COMMENT '操作时间',
  `update_status_time` datetime DEFAULT NULL COMMENT '更新状态时间',
  `exception_info` text COMMENT '异常信息',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uq_idx_module_code` (`module_code`) USING HASH,
  UNIQUE KEY `uq_idx_file_name` (`file_name`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=299 DEFAULT CHARSET=utf8 COMMENT='导入模板上传表';

/*Table structure for table `mainland_aging_warning_detailed` */

DROP TABLE IF EXISTS `mainland_aging_warning_detailed`;

CREATE TABLE `mainland_aging_warning_detailed` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '序号',
  `stms_insert_time` datetime DEFAULT NULL COMMENT 'STMS入库时间',
  `stms_update_time` datetime DEFAULT NULL COMMENT 'STMS更新时间',
  `main_waybill_no` varchar(150) NOT NULL COMMENT '运单号',
  `monitor_status` varchar(1) DEFAULT NULL COMMENT '监控状态。0：监控  1：不监控',
  `send_date` datetime DEFAULT NULL COMMENT '寄件日期',
  `source_net_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `source_country_code` varchar(10) DEFAULT NULL COMMENT '原寄地国家代码',
  `dest_country` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `product_code` varchar(50) DEFAULT NULL COMMENT '产品类型代码',
  `cons_value` double(16,2) DEFAULT NULL COMMENT '声明价值',
  `cons_value_currency_code` varchar(32) DEFAULT NULL COMMENT '声明价值币种',
  `consign_content` text COMMENT '托寄物内容',
  `consignor_comp_name` varchar(100) DEFAULT NULL COMMENT '寄件客户名称',
  `consignor_monthly_account_number` varchar(200) DEFAULT NULL COMMENT '寄件客户月结账号',
  `cons_qty` int(11) DEFAULT NULL COMMENT '件数（字母件中的子件数量）',
  `real_weight_qty` decimal(10,4) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` decimal(10,4) DEFAULT NULL COMMENT '计费重量',
  `consignee_emp_code` varchar(150) DEFAULT NULL COMMENT '员工工号,50巴枪操作员',
  `source_consign_time` datetime DEFAULT NULL COMMENT '收件时间',
  `source_load_time_plan` datetime DEFAULT NULL COMMENT '计划原寄地装车时间',
  `source_load_time_act` datetime DEFAULT NULL COMMENT '实际原寄地装车时间',
  `mainland_consign_aging_standard` double(5,1) DEFAULT NULL COMMENT '大陆收件时效标准（h/mm）',
  `mainland_consign_time_consume` varchar(20) DEFAULT NULL COMMENT '大陆收件环节耗时(h/mm)',
  `mainland_consign_overtime` varchar(20) DEFAULT NULL COMMENT '大陆收件超时分钟数 (h/mm)',
  `consign_status` varchar(2) DEFAULT NULL COMMENT '大陆收件环节超时标记  0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `transfer_track_number` int(11) DEFAULT NULL COMMENT '途径中转网点数量',
  `first_port_code` varchar(50) DEFAULT NULL COMMENT '第一个清关口岸',
  `port_unload_time_plan` datetime DEFAULT NULL COMMENT '计划口岸卸车时间',
  `port_unload_time_act` datetime DEFAULT NULL COMMENT '实际口岸卸车时间',
  `mainland_transfer_aging_standard` double(5,1) DEFAULT NULL COMMENT '大陆中转时效标准(h/mm)',
  `mainland_transfer_time_consume` varchar(20) DEFAULT NULL COMMENT '大陆中转环节耗时(h/mm)',
  `mainland_transfer_overtime` varchar(20) DEFAULT NULL COMMENT '大陆中转超时分钟数(h/mm)',
  `transfer_status` varchar(2) DEFAULT NULL COMMENT '中转环节超时标记。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `transfer_port_num` int(11) DEFAULT NULL COMMENT '清关口岸转运次数',
  `last_port_code` varchar(50) DEFAULT NULL COMMENT '出口清关口岸',
  `port_load_time_plan` datetime DEFAULT NULL COMMENT ' 计划口岸装车时间（在最后一个口岸装车）',
  `port_load_time_act` datetime DEFAULT NULL COMMENT ' 实际口岸装车时间（在最后一个口岸装车）',
  `mainland_port_aging_standard` double(5,1) DEFAULT NULL COMMENT '大陆口岸时效标准(h/mm) ',
  `mainland_port_time_consume` varchar(20) DEFAULT NULL COMMENT '大陆口岸环节耗时(h/mm)',
  `mainland_port_overtime` varchar(20) DEFAULT NULL COMMENT '大陆口岸超时分钟数(h/mm)',
  `port_status` varchar(2) DEFAULT NULL COMMENT '大陆口岸环节超时标记。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `first_port_code_begintime` datetime DEFAULT NULL COMMENT '第一个口岸清关开始时间',
  `export_clearance_completion_time` datetime DEFAULT NULL COMMENT '出口清关完成时间',
  `master_airway_bill_no` varchar(100) DEFAULT NULL COMMENT '主提单号',
  `contnr_code` varchar(50) DEFAULT NULL COMMENT '始发口岸车标号',
  `flight_departure_city` varchar(50) DEFAULT NULL COMMENT '航班起飞城市',
  `flight_departure_time_planned` datetime DEFAULT NULL COMMENT '计划航班起飞时间 ',
  `flight_departure_time_act` datetime DEFAULT NULL COMMENT '实际航班起飞时间 ',
  `mainland_to_take_off_standard` double(5,1) DEFAULT NULL COMMENT '大陆待起飞时效标准(h/mm)',
  `mainland_to_take_off_consume` varchar(20) DEFAULT NULL COMMENT '大陆待起飞环节耗时(h/mm)',
  `mainland_to_take_off_overtime` varchar(20) DEFAULT NULL COMMENT '大陆待起飞环节超时分钟数(h/mm)',
  `take_off_status` varchar(2) DEFAULT NULL COMMENT '大陆待起飞环节超时标记。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `flight_no` varchar(32) DEFAULT NULL COMMENT '航班号',
  `flight_landing_time_planned_local` datetime DEFAULT NULL COMMENT '计划航班落地时间（当地时间）',
  `flight_landing_time_planned_beijing` datetime DEFAULT NULL COMMENT '计划航班落地时间（北京时间）',
  `flight_landing_time_act_local` datetime DEFAULT NULL COMMENT '实际航班落地时间（当地时间）',
  `flight_landing_time_act_beijing` datetime DEFAULT NULL COMMENT '实际航班落地时间（北京时间）',
  `flight_landing_city` varchar(50) DEFAULT NULL COMMENT '航班落地城市',
  `mainland_to_abroad_standard` double(5,1) DEFAULT NULL COMMENT '大陆到海外飞行时效标准(h/mm)',
  `mainland_to_abroad_consume` varchar(20) DEFAULT NULL COMMENT '大陆到海外飞行环节耗时 (h/mm)',
  `mainland_to_abroad_overtime` varchar(20) DEFAULT NULL COMMENT '大陆到海外飞行超时分钟数 (h/mm)',
  `mainland_to_abroad_status` varchar(2) DEFAULT NULL COMMENT '大陆到海外飞行环节超时标记。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `mainland_full_standard` double(5,1) DEFAULT NULL COMMENT '大陆端整体时效标准',
  `mainland_wholetime` double(10,2) DEFAULT NULL COMMENT '大陆端整体耗时',
  `mainland_all_overtime` varchar(20) DEFAULT NULL COMMENT '大陆端整体超时分钟数',
  `wholetime_consume_status` varchar(2) DEFAULT NULL COMMENT '大陆端整体耗时超时标记。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `flight_planned` varchar(20) DEFAULT NULL COMMENT '计划配载航班',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_mainwaybillno_key` (`main_waybill_no`) USING HASH,
  KEY `send_date_key` (`send_date`) USING BTREE,
  KEY `dest_country_key` (`dest_country`) USING BTREE,
  KEY `master_airway_bill_no_key` (`master_airway_bill_no`) USING BTREE,
  KEY `source_net_code_key` (`source_net_code`) USING BTREE,
  KEY `product_code_key` (`product_code`) USING BTREE,
  KEY `index_monitor_status_dest_country` (`monitor_status`,`dest_country`),
  KEY `idx_union_four` (`send_date`,`source_net_code`,`dest_country`,`product_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=70037584080 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='大陆端时效预警明细表';

/*Table structure for table `mainland_aging_warning_monitor` */

DROP TABLE IF EXISTS `mainland_aging_warning_monitor`;

CREATE TABLE `mainland_aging_warning_monitor` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `send_date` date DEFAULT NULL COMMENT '寄件日期',
  `source_net_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country` varchar(50) DEFAULT NULL COMMENT '目的地国家',
  `product_code` varchar(50) DEFAULT NULL COMMENT '产品类型代码',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(12,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(12,3) DEFAULT NULL COMMENT '计费重量',
  `take_over_warning` int(10) DEFAULT NULL COMMENT '大陆收件环节预警',
  `transit_warning` int(10) DEFAULT NULL COMMENT '大陆中转环节预警',
  `port_warning` int(10) DEFAULT NULL COMMENT '大陆口岸环节预警',
  `take_off_warning` int(10) DEFAULT NULL COMMENT '大陆待起飞环节预警',
  `oversea_warning` int(10) DEFAULT NULL COMMENT '大陆到海外飞行环节预警',
  `whole_warning` int(10) DEFAULT NULL COMMENT '大陆端整体时效预警',
  `avg_hours` double(10,3) DEFAULT NULL COMMENT '大陆端平均耗时(四舍五入保留3位小数)',
  `ontime_poll` int(10) DEFAULT NULL COMMENT '准点票数',
  `nobreak_poll` int(10) DEFAULT NULL COMMENT '未超时票数',
  `break_poll` int(10) DEFAULT NULL COMMENT '异常票数',
  `insert_time` datetime DEFAULT NULL COMMENT 'STMS入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_comb` (`send_date`,`source_net_code`,`dest_country`,`product_code`) USING HASH,
  KEY `idx_send_date` (`send_date`) USING HASH,
  KEY `idx_net_code` (`source_net_code`) USING HASH,
  KEY `idx_dest_country` (`dest_country`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=33785665 DEFAULT CHARSET=utf8 COMMENT='大陆端时效预警监控A';

/*Table structure for table `mainland_transfer_net` */

DROP TABLE IF EXISTS `mainland_transfer_net`;

CREATE TABLE `mainland_transfer_net` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `waybill_no` varchar(150) DEFAULT NULL COMMENT '运单号',
  `send_date` datetime DEFAULT NULL COMMENT '寄件日期',
  `source_net_code` varchar(50) DEFAULT NULL COMMENT '原基地网点代码',
  `source_net_load_time_act` datetime DEFAULT NULL COMMENT '原基地网点装车时间',
  `transfer_net_code` varchar(50) DEFAULT NULL COMMENT '中转网点代码',
  `transfer_net_load_time` datetime DEFAULT NULL COMMENT '中转网点装车时间',
  `transfer_net_unload_time` datetime DEFAULT NULL COMMENT '中转网点卸车时间',
  `stms_insert_time` datetime NOT NULL COMMENT 'STMS入库时间',
  PRIMARY KEY (`id`,`stms_insert_time`),
  KEY `waybill_no_key` (`waybill_no`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=70037838721 DEFAULT CHARSET=utf8 COMMENT='大陆中转网点'
/*!50500 PARTITION BY RANGE  COLUMNS(stms_insert_time)
(PARTITION p1 VALUES LESS THAN ('2018-02-01') ENGINE = InnoDB,
 PARTITION p2 VALUES LESS THAN ('2018-03-01') ENGINE = InnoDB,
 PARTITION p3 VALUES LESS THAN ('2018-04-01') ENGINE = InnoDB,
 PARTITION p4 VALUES LESS THAN ('2018-05-01') ENGINE = InnoDB,
 PARTITION p5 VALUES LESS THAN ('2018-06-01') ENGINE = InnoDB,
 PARTITION p6 VALUES LESS THAN ('2018-07-01') ENGINE = InnoDB,
 PARTITION p7 VALUES LESS THAN ('2018-08-01') ENGINE = InnoDB,
 PARTITION p8 VALUES LESS THAN ('2018-09-01') ENGINE = InnoDB,
 PARTITION p9 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p10 VALUES LESS THAN ('2018-11-01') ENGINE = InnoDB,
 PARTITION p11 VALUES LESS THAN ('2018-12-01') ENGINE = InnoDB,
 PARTITION p12 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `mainland_transfer_port` */

DROP TABLE IF EXISTS `mainland_transfer_port`;

CREATE TABLE `mainland_transfer_port` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `waybill_no` varchar(150) DEFAULT NULL COMMENT '运单号',
  `send_date` datetime DEFAULT NULL COMMENT '寄件日期',
  `source_net_code` varchar(50) DEFAULT NULL COMMENT '原基地网点代码',
  `source_net_load_time_act` datetime DEFAULT NULL COMMENT '原寄地网点装车时间',
  `transfer_port_code` varchar(50) DEFAULT NULL COMMENT '中转口岸代码',
  `transfer_port_load_time` datetime DEFAULT NULL COMMENT '中转口岸装车时间',
  `transfer_port_unload_time` datetime DEFAULT NULL COMMENT '中转口岸卸车时间',
  `stms_insert_time` datetime NOT NULL COMMENT 'STMS入库时间',
  PRIMARY KEY (`id`,`stms_insert_time`),
  KEY `waybill_no_key` (`waybill_no`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=715739 DEFAULT CHARSET=utf8 COMMENT='大陆中转口岸'
/*!50500 PARTITION BY RANGE  COLUMNS(stms_insert_time)
(PARTITION p1 VALUES LESS THAN ('2018-02-01') ENGINE = InnoDB,
 PARTITION p2 VALUES LESS THAN ('2018-03-01') ENGINE = InnoDB,
 PARTITION p3 VALUES LESS THAN ('2018-04-01') ENGINE = InnoDB,
 PARTITION p4 VALUES LESS THAN ('2018-05-01') ENGINE = InnoDB,
 PARTITION p5 VALUES LESS THAN ('2018-06-01') ENGINE = InnoDB,
 PARTITION p6 VALUES LESS THAN ('2018-07-01') ENGINE = InnoDB,
 PARTITION p7 VALUES LESS THAN ('2018-08-01') ENGINE = InnoDB,
 PARTITION p8 VALUES LESS THAN ('2018-09-01') ENGINE = InnoDB,
 PARTITION p9 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p10 VALUES LESS THAN ('2018-11-01') ENGINE = InnoDB,
 PARTITION p11 VALUES LESS THAN ('2018-12-01') ENGINE = InnoDB,
 PARTITION p12 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `mention_delivery_exception_management` */

DROP TABLE IF EXISTS `mention_delivery_exception_management`;

CREATE TABLE `mention_delivery_exception_management` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `master_airway_bill_no` varchar(100) DEFAULT NULL COMMENT '主提单号',
  `status` int(5) DEFAULT NULL COMMENT '状态,0未处理，1处理中，2 待审核，3 完结',
  `abnormal_record_number` varchar(200) DEFAULT NULL COMMENT '异常记录号',
  `flight_no` varchar(100) DEFAULT NULL COMMENT '航班号',
  `depart_city_code` varchar(50) DEFAULT NULL COMMENT '始发地',
  `arrive_city_code` varchar(50) DEFAULT NULL COMMENT '目的地',
  `takeOff_time` datetime DEFAULT NULL COMMENT '起飞时间',
  `landing_time` datetime DEFAULT NULL COMMENT '落地时间',
  `mention_time` datetime DEFAULT NULL COMMENT '提货时间',
  `delivery_tickets_number` int(11) DEFAULT NULL COMMENT '发货票数',
  `delivery_numbers` int(11) DEFAULT NULL COMMENT '发货件数',
  `mention_tickets_number` int(11) DEFAULT NULL COMMENT '提货票数',
  `mention_numbers` int(11) DEFAULT NULL COMMENT '提货件数',
  `abnormal_duty` varchar(100) DEFAULT NULL COMMENT '责任处室',
  `unfinished_number` int(11) DEFAULT NULL COMMENT '未完结件数',
  `lastest_progress` varchar(255) DEFAULT NULL COMMENT '最新进展',
  `abnormal_happen_time` datetime DEFAULT NULL COMMENT '异常发现日期',
  `lead_to_result` varchar(255) DEFAULT NULL COMMENT '异常结果',
  `follow_up_time` datetime DEFAULT NULL COMMENT '跟进时间',
  `lastest_abnormal_tickets_number` int(11) DEFAULT NULL COMMENT '异常票数(更新)',
  `lastest_abnormal_numbers` int(11) DEFAULT NULL COMMENT '异常件数（更新）',
  `lastest_lost_tickets_number` int(11) DEFAULT NULL COMMENT '遗失票数',
  `lastest_lost_numbers` int(11) DEFAULT NULL COMMENT '遗失件数（更新)',
  `is_lost` int(5) DEFAULT NULL COMMENT '是否遗失,0是 1否',
  `remark` varchar(1000) DEFAULT NULL COMMENT '备注',
  `enter_employee_number` varchar(100) DEFAULT NULL COMMENT '录入员工工号',
  `enter_dept` varchar(200) DEFAULT NULL COMMENT '录入部门',
  `follow_up_number` int(5) unsigned zerofill DEFAULT NULL COMMENT '跟进次数',
  `proposer` varchar(100) DEFAULT NULL COMMENT '申请人',
  `application_time` datetime DEFAULT NULL COMMENT '申请时间',
  `finish_audit_time` datetime DEFAULT NULL COMMENT '完结审核时间',
  `finish_audit_perpson` varchar(200) DEFAULT NULL COMMENT '完结审核人',
  `mention_net_code` varchar(100) DEFAULT NULL COMMENT '提货网点',
  `delivery_net_code` varchar(100) DEFAULT NULL COMMENT '发货网点',
  `task_id` varchar(40) DEFAULT NULL COMMENT '提发货任务ID',
  `exception_id` varchar(30) DEFAULT NULL COMMENT '提发货异常id',
  `exception_dt` datetime DEFAULT NULL COMMENT '异常产生日期',
  `exception_module` varchar(100) DEFAULT NULL COMMENT '异常模块',
  `send_id` varchar(500) DEFAULT NULL COMMENT '发货id',
  `get_id` varchar(500) DEFAULT NULL COMMENT '提货id',
  `main_number` varchar(500) DEFAULT NULL COMMENT '发提货单号',
  `business_type` int(2) DEFAULT NULL COMMENT '异常分类 (1 提货、2发货)',
  `line_code` varchar(200) DEFAULT NULL COMMENT '线路编码',
  `capacity_name` varchar(200) DEFAULT NULL COMMENT '运力名称',
  `overdue_tickets` int(11) DEFAULT NULL COMMENT '逾限票数',
  `exception_result` varchar(500) DEFAULT NULL COMMENT '异常结果',
  `exception_cause` varchar(500) DEFAULT NULL COMMENT '异常原因',
  `exception_content` varchar(500) DEFAULT NULL COMMENT '异常内容',
  `exception_remark` varchar(500) DEFAULT NULL COMMENT '异常描述取TCMS航班提发货异常统计表的提货异常备注；',
  `exception_tickets` int(11) DEFAULT NULL COMMENT '异常票数',
  `exception_count` int(11) DEFAULT NULL COMMENT '异常件数',
  `created_emp_code` varchar(100) DEFAULT NULL COMMENT '创建人',
  `created_tm` datetime DEFAULT NULL COMMENT '创建时间',
  `mark_number` varchar(1000) DEFAULT NULL COMMENT '车标号',
  `send_date` datetime DEFAULT NULL COMMENT '发货日期',
  `modified_emp_code` varchar(100) DEFAULT NULL COMMENT '修改人',
  `modified_tm` datetime DEFAULT NULL COMMENT '修改时间',
  `modified_exception_ticket` varchar(500) DEFAULT NULL COMMENT '更新异常情况',
  `exp_type` int(5) DEFAULT NULL COMMENT '异常类型   1新增异常  2新增异常补登',
  `capacty_id` varchar(200) DEFAULT NULL COMMENT '拉货后转机运力id',
  `process_result` int(5) DEFAULT NULL COMMENT '处理结果1 转运  2 退运',
  `tranfer_date` datetime DEFAULT NULL COMMENT '转运发货日期',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_record_key` (`abnormal_record_number`) USING BTREE,
  UNIQUE KEY `idx_task_id_exception_id` (`task_id`,`exception_id`) USING BTREE,
  KEY `key_depart_code` (`depart_city_code`) USING BTREE,
  KEY `key_arrive_ocde` (`arrive_city_code`) USING BTREE,
  KEY `key_master` (`master_airway_bill_no`) USING BTREE,
  KEY `key_mark_num` (`abnormal_duty`) USING BTREE,
  KEY `key_exception_dt` (`exception_dt`) USING BTREE,
  KEY `key_flight` (`flight_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2355 DEFAULT CHARSET=utf8 COMMENT='提发货异常明细';

/*Table structure for table `mention_delivery_exception_mics` */

DROP TABLE IF EXISTS `mention_delivery_exception_mics`;

CREATE TABLE `mention_delivery_exception_mics` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `transport_sate` varchar(30) DEFAULT NULL COMMENT '运力状态（中文）、状态',
  `customs_date` datetime DEFAULT NULL COMMENT '报关日期',
  `cus_batch` varchar(50) DEFAULT NULL COMMENT '报关批次',
  `velist` varchar(50) DEFAULT NULL COMMENT '车次',
  `gate_type` varchar(5) DEFAULT NULL COMMENT '报关类型',
  `flight_no` varchar(300) DEFAULT NULL COMMENT '车牌/航班号',
  `schedule_flight_type` int(5) DEFAULT NULL COMMENT '时效性航班类型:1 早航班,2 午航班,3 晚航班',
  `main_number` varchar(15) NOT NULL COMMENT '主提单号',
  `aweight` decimal(50,5) DEFAULT NULL COMMENT '实际重量',
  `mark_number` varchar(200) DEFAULT NULL COMMENT '车标号',
  `depart_country_code` varchar(30) DEFAULT NULL COMMENT '始发地国家',
  `depart_city_code` varchar(30) DEFAULT NULL COMMENT '始发地城市代码',
  `depart_thr_letter_code` varchar(3) DEFAULT NULL COMMENT '始发地机场三字码',
  `send_dept_code` varchar(40) DEFAULT NULL COMMENT '发货网点代码',
  `arrive_country_code` varchar(30) DEFAULT NULL COMMENT '目的地国家',
  `arrive_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市代码',
  `arrive_thr_letter_code` varchar(3) DEFAULT NULL COMMENT '目的地机场三字码',
  `arrive_dept_code` varchar(40) DEFAULT NULL COMMENT '提货网点代码',
  `pcs` int(50) DEFAULT NULL COMMENT '件数、开单件数',
  `actual_fly_date` datetime DEFAULT NULL COMMENT '实际起飞日期,格式“yyyy-mm-dd”如：2018-08-15 09:12',
  `actual_arrive_date` datetime DEFAULT NULL COMMENT '实际到达日期,格式“yyyy-mm-dd”如：2018-08-15 09:12',
  `send_date` datetime DEFAULT NULL COMMENT '确认发货时间',
  `send_delivery` int(10) DEFAULT NULL COMMENT '发货票数',
  `send_number` int(10) DEFAULT NULL COMMENT '发货件数',
  `take_bill_date` datetime DEFAULT NULL COMMENT '提货日期,格式“yyyy-mm-dd”如：2018-08-15',
  `take_bill_count` int(10) DEFAULT NULL COMMENT '提货件数',
  `take_bill_delivery` int(10) DEFAULT NULL COMMENT '提货票数',
  `exception_type` int(5) DEFAULT NULL COMMENT '异常类型(0无,1提货，2发货，3发提货异常)',
  `synchronized_tm` datetime DEFAULT NULL COMMENT '同步时间',
  `stms_insert_tm` datetime DEFAULT NULL COMMENT 'stms系统入库时间',
  `send_exception_time` datetime DEFAULT NULL COMMENT '异常发生时间',
  `send_round` smallint(6) DEFAULT NULL COMMENT '发货环节，1正常、2超时',
  `send_exception_check_dept` varchar(100) DEFAULT NULL COMMENT '发货异常核查网点',
  `send_exception_check_times` int(11) DEFAULT NULL COMMENT '发货异常核查次数',
  `send_handle_status` smallint(6) DEFAULT NULL COMMENT '发货处理状态：1已发货、2未发货',
  `take_exception_time` datetime DEFAULT NULL COMMENT '提货异常产生时间',
  `take_round` smallint(6) DEFAULT NULL COMMENT '提货环节，1正常、2超时',
  `take_exception_check_dept` varchar(100) DEFAULT NULL COMMENT '提货异常核查网点',
  `take_exception_check_times` int(11) DEFAULT NULL COMMENT '提货异常核查次数',
  `take_handle_status` smallint(6) DEFAULT NULL COMMENT '提货处理状态，1已提货。2未提货',
  `affairs_count` int(10) DEFAULT NULL COMMENT '关务件数',
  `affairs_votes` int(10) DEFAULT NULL COMMENT '关务票数',
  `order_gross` decimal(50,5) DEFAULT NULL COMMENT '开单毛重',
  `bill_weight` decimal(50,5) DEFAULT NULL COMMENT '开单计费重量',
  PRIMARY KEY (`id`),
  KEY `idx_main_number` (`main_number`) USING BTREE,
  KEY `idx_customs_date` (`customs_date`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=172 DEFAULT CHARSET=utf8 COMMENT='发提货异常信息-mics（ais&ams数据整合，根据主提单号进行）';

/*Table structure for table `mention_delivery_follow_detail` */

DROP TABLE IF EXISTS `mention_delivery_follow_detail`;

CREATE TABLE `mention_delivery_follow_detail` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `abnormal_record_number` varchar(100) DEFAULT NULL COMMENT '异常记录号',
  `abnormal_duty` varchar(100) DEFAULT NULL COMMENT '责任处室',
  `abnormal_happen_time` datetime DEFAULT NULL COMMENT '异常发现日期',
  `lastest_abnormal_tickets_number` int(11) DEFAULT NULL COMMENT '异常票数(更新)',
  `lastest_abnormal_number` int(11) DEFAULT NULL COMMENT '异常件数(更新)',
  `lastest_lost_tickest_number` int(11) DEFAULT NULL COMMENT '遗失票数(更新) ',
  `lastest_lost_number` int(11) DEFAULT NULL COMMENT '遗失件数(更新)',
  `unfinish_number` int(11) DEFAULT NULL COMMENT '未完结件数',
  `is_lost` int(2) DEFAULT NULL COMMENT '是否遗失,0是 1否',
  `status` int(2) DEFAULT NULL COMMENT '状态,0未处理，1处理中，2 待审核，3 完结',
  `lastest_follow_up` varchar(500) DEFAULT NULL COMMENT '最新进展',
  `hand_remark` varchar(500) DEFAULT NULL COMMENT '处理备注',
  `enter_employee_number` varchar(100) DEFAULT NULL COMMENT '录入员工工号',
  `enter_net_code` varchar(100) DEFAULT NULL COMMENT '录入网点',
  `exception_dt` datetime DEFAULT NULL COMMENT '异常产生日期（计算跟进时长）',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  KEY `key_abrecord` (`abnormal_record_number`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=73 DEFAULT CHARSET=utf8 COMMENT='提发货异常跟进';

/*Table structure for table `mention_delivery_result` */

DROP TABLE IF EXISTS `mention_delivery_result`;

CREATE TABLE `mention_delivery_result` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `abnormal_record_number` varchar(100) DEFAULT NULL COMMENT '异常记录号',
  `proposer` varchar(100) DEFAULT NULL COMMENT '申请人',
  `application_time` datetime DEFAULT NULL COMMENT '申请时间',
  `audit_perpson` varchar(100) DEFAULT NULL COMMENT '审核人',
  `audit_result` varchar(100) DEFAULT NULL COMMENT '审核结果',
  `audit_opinion` varchar(200) DEFAULT NULL COMMENT '审核意见',
  `audit_time` datetime DEFAULT NULL COMMENT '审核时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  KEY `key_record` (`abnormal_record_number`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=42 DEFAULT CHARSET=utf8 COMMENT='提发货异常结果';

/*Table structure for table `network_type_belong_link_config` */

DROP TABLE IF EXISTS `network_type_belong_link_config`;

CREATE TABLE `network_type_belong_link_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `network_type` varchar(100) DEFAULT NULL COMMENT '网点类型',
  `abnormal_link` varchar(100) DEFAULT NULL COMMENT '异常环节(1:分点部,2:中转场,3:关务,4:散航)',
  `enable_status` int(1) DEFAULT NULL COMMENT '是否有效（0：是，1：否）',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  KEY `index_network_type` (`network_type`) USING BTREE,
  KEY `index_abnormal_link` (`abnormal_link`) USING BTREE,
  KEY `index_update_time` (`update_time`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8mb4 COMMENT='网点类型归属环节配置表';

/*Table structure for table `newest_track` */

DROP TABLE IF EXISTS `newest_track`;

CREATE TABLE `newest_track` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `stms_insert_time` datetime NOT NULL COMMENT '插入时间',
  `stms_update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `is_smd_complete` int(11) NOT NULL DEFAULT '0' COMMENT '是否计算完疑似遗失---0未完成，1完成',
  `track_json_string` text NOT NULL COMMENT '运单对应最新track的jsonString',
  PRIMARY KEY (`id`,`stms_insert_time`),
  UNIQUE KEY `idx_unique_main_waybill_no_stms_insert_time` (`main_waybill_no`,`stms_insert_time`) USING HASH,
  KEY `is_smd_complete` (`is_smd_complete`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=517617 DEFAULT CHARSET=utf8 COMMENT='存放运单的最新track的jsonString'
/*!50100 PARTITION BY LIST (DAYOFYEAR(stms_insert_time))
(PARTITION p1 VALUES IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15) ENGINE = InnoDB,
 PARTITION p2 VALUES IN (16,17,18,19,20,21,22,23,24,25,26,27,28,29,30) ENGINE = InnoDB,
 PARTITION p3 VALUES IN (31,32,33,34,35,36,37,38,39,40,41,42,43,44,45) ENGINE = InnoDB,
 PARTITION p4 VALUES IN (46,47,48,49,50,51,52,53,54,55,56,57,58,59,60) ENGINE = InnoDB,
 PARTITION p5 VALUES IN (61,62,63,64,65,66,67,68,69,70,71,72,73,74,75) ENGINE = InnoDB,
 PARTITION p6 VALUES IN (76,77,78,79,80,81,82,83,84,85,86,87,88,89,90) ENGINE = InnoDB,
 PARTITION p7 VALUES IN (91,92,93,94,95,96,97,98,99,100,101,102,103,104,105) ENGINE = InnoDB,
 PARTITION p8 VALUES IN (106,107,108,109,110,111,112,113,114,115,116,117,118,119,120) ENGINE = InnoDB,
 PARTITION p9 VALUES IN (121,122,123,124,125,126,127,128,129,130,131,132,133,134,135) ENGINE = InnoDB,
 PARTITION p10 VALUES IN (136,137,138,139,140,141,142,143,144,145,146,147,148,149,150) ENGINE = InnoDB,
 PARTITION p11 VALUES IN (151,152,153,154,155,156,157,158,159,160,161,162,163,164,165) ENGINE = InnoDB,
 PARTITION p12 VALUES IN (166,167,168,169,170,171,172,173,174,175,176,177,178,179,180) ENGINE = InnoDB,
 PARTITION p13 VALUES IN (181,182,183,184,185,186,187,188,189,190,191,192,193,194,195) ENGINE = InnoDB,
 PARTITION p14 VALUES IN (196,197,198,199,200,201,202,203,204,205,206,207,208,209,210) ENGINE = InnoDB,
 PARTITION p15 VALUES IN (211,212,213,214,215,216,217,218,219,220,221,222,223,224,225) ENGINE = InnoDB,
 PARTITION p16 VALUES IN (226,227,228,229,230,231,232,233,234,235,236,237,238,239,240) ENGINE = InnoDB,
 PARTITION p17 VALUES IN (241,242,243,244,245,246,247,248,249,250,251,252,253,254,255) ENGINE = InnoDB,
 PARTITION p18 VALUES IN (256,257,258,259,260,261,262,263,264,265,266,267,268,269,270) ENGINE = InnoDB,
 PARTITION p19 VALUES IN (271,272,273,274,275,276,277,278,279,280,281,282,283,284,285) ENGINE = InnoDB,
 PARTITION p20 VALUES IN (286,287,288,289,290,291,292,293,294,295,296,297,298,299,300) ENGINE = InnoDB,
 PARTITION p21 VALUES IN (301,302,303,304,305,306,307,308,309,310,311,312,313,314,315) ENGINE = InnoDB,
 PARTITION p22 VALUES IN (316,317,318,319,320,321,322,323,324,325,326,327,328,329,330) ENGINE = InnoDB,
 PARTITION p23 VALUES IN (331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348) ENGINE = InnoDB,
 PARTITION p24 VALUES IN (349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366) ENGINE = InnoDB) */;

/*Table structure for table `old_delivery_situation_detail` */

DROP TABLE IF EXISTS `old_delivery_situation_detail`;

CREATE TABLE `old_delivery_situation_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `arrival_network_date` date DEFAULT NULL COMMENT '到达网点的日期',
  `network_handle_date` date DEFAULT NULL COMMENT '网点处理（出仓/交接）日期',
  `main_waybill_no` varchar(64) DEFAULT NULL COMMENT '运单号',
  `dest_country` varchar(32) DEFAULT NULL COMMENT '目的地国家',
  `dest_dept` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(64) DEFAULT NULL COMMENT '目的地地区',
  `dest_city` varchar(64) DEFAULT NULL COMMENT '目的地城市',
  `unload_network` varchar(32) DEFAULT NULL COMMENT '卸车网点编码',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `packages_count` int(10) DEFAULT NULL COMMENT '件数',
  `delivery_mode` int(1) DEFAULT NULL COMMENT '派送模式 0：自营 1：代理',
  `actual_delivery_network` varchar(32) DEFAULT NULL COMMENT '实际派送网点编码',
  `agent_waybill_no` varchar(64) DEFAULT NULL COMMENT '代理单号',
  `agent_product` varchar(32) DEFAULT NULL COMMENT '代理产品',
  `unload_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `handover_time` datetime DEFAULT NULL COMMENT '交接时间。首次巴枪“208>44”的时间',
  `warehouse_out_time` datetime DEFAULT NULL COMMENT '出仓时间。首次巴枪204的时间',
  `delivery_time` datetime DEFAULT NULL COMMENT '派送时间',
  `is_multiple` int(1) DEFAULT NULL COMMENT '是否属于当天的多发件。0 : 是 ，1：否',
  `network_handle_to_delivery_days` int(5) DEFAULT '0' COMMENT '网点处理（出仓/交接）至派送的天数',
  `network_handle_to_job_days` int(5) DEFAULT '0' COMMENT '网点处理（出仓/交接）至跑Job的天数',
  `retention_reason_code` varchar(64) DEFAULT NULL COMMENT '滞留原因代码',
  `retention_reason` varchar(64) DEFAULT NULL COMMENT '滞留原因',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_mode` int(1) DEFAULT NULL COMMENT '滞留模式。0：自营滞留，1：代理滞留',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_unique_key` (`main_waybill_no`) USING BTREE,
  KEY `idx_upload_network` (`unload_network`) USING HASH,
  KEY `idx_dest_country` (`dest_country`) USING HASH,
  KEY `idx_date` (`arrival_network_date`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=21403 DEFAULT CHARSET=utf8 COMMENT='派件概况明细表';

/*Table structure for table `oversea_port_aging_info` */

DROP TABLE IF EXISTS `oversea_port_aging_info`;

CREATE TABLE `oversea_port_aging_info` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `landing_date` date DEFAULT NULL COMMENT '落地日期',
  `waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `cons_value` double(10,0) DEFAULT NULL COMMENT '声明价值',
  `cargo_type_code` varchar(50) DEFAULT NULL COMMENT '快件内容类型',
  `quantity` int(10) DEFAULT NULL COMMENT '包裹总件数',
  `real_weight` double(10,0) DEFAULT NULL COMMENT '实际重量',
  `billing_weight` double(10,0) DEFAULT NULL COMMENT '计费重量',
  `destination_country` varchar(25) DEFAULT NULL COMMENT '目的地国家',
  `product_name` varchar(25) DEFAULT NULL COMMENT '产品名称',
  `consignor_comp_name` varchar(50) DEFAULT NULL COMMENT '寄件客户名称',
  `customer_acct_code` varchar(50) DEFAULT NULL COMMENT '寄件客户月结卡号',
  `receiver_name` varchar(100) DEFAULT NULL COMMENT '收件客户名称',
  `master_airway_bill_no` varchar(50) DEFAULT NULL COMMENT '国际航班主提单',
  `first_port_contnr_code` varchar(255) DEFAULT NULL COMMENT '始发口岸车标号',
  `flight_no` varchar(25) DEFAULT NULL COMMENT '航班号',
  `flight_landing_city` varchar(25) DEFAULT NULL COMMENT '航班落地城市',
  `import_customs_code` varchar(25) DEFAULT NULL COMMENT '进口清关口岸网点',
  `customs_agent_network` varchar(255) DEFAULT NULL COMMENT '(清关代理网点)',
  `customs_model` varchar(10) DEFAULT NULL COMMENT '清关模式',
  `customs_type` int(255) DEFAULT NULL COMMENT '报关类型',
  `flight_landing_time` datetime DEFAULT NULL COMMENT '航班落地时间',
  `utc_time` datetime DEFAULT NULL COMMENT '时效标准',
  `plan_port_load_time` datetime DEFAULT NULL COMMENT '计划口岸装车时间',
  `real_port_load_time` datetime DEFAULT NULL COMMENT '实际口岸装车时间',
  `plan_customs_release_time` datetime DEFAULT NULL COMMENT '计划货件已放行时间',
  `real_customs_release_time` datetime DEFAULT NULL COMMENT '实际货件已放行时间',
  `overtime` datetime DEFAULT NULL COMMENT '超时分钟数',
  `cfs_customs_time` datetime DEFAULT NULL COMMENT 'CFS清关时间',
  `customs_temporary_time` datetime DEFAULT NULL COMMENT '暂存口岸待申报时间',
  `customs_check_time` datetime DEFAULT NULL COMMENT '海关查验时间',
  `customs_hold_time` datetime DEFAULT NULL COMMENT '海关扣件时间',
  `formal_clearance_time` datetime DEFAULT NULL COMMENT '正式报关时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='海外端口岸时效详情';

/*Table structure for table `overseas_aging_warning_detailed_a` */

DROP TABLE IF EXISTS `overseas_aging_warning_detailed_a`;

CREATE TABLE `overseas_aging_warning_detailed_a` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `stms_insert_time` datetime DEFAULT NULL COMMENT 'STMS插入数据库时间',
  `stms_update_time` datetime DEFAULT NULL COMMENT 'STMS更新时间',
  `main_waybill_no` varchar(100) NOT NULL COMMENT '运单号',
  `monitor_status` varchar(1) DEFAULT NULL COMMENT '监控状态。0：监控 1：不监控',
  `send_date` datetime DEFAULT NULL COMMENT '寄件日期 ',
  `source_net_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `source_country_code` varchar(10) DEFAULT NULL COMMENT '原寄地国家代码',
  `last_port_code` varchar(50) DEFAULT NULL COMMENT '出口清关口岸网点',
  `dest_city` varchar(50) DEFAULT NULL COMMENT '目的地城市(代码)',
  `dest_country_code` varchar(10) DEFAULT NULL COMMENT '目的地国家代码',
  `product_type` varchar(50) DEFAULT NULL COMMENT '产品类型',
  `product_code` varchar(20) DEFAULT NULL COMMENT '产品代码',
  `cons_value` double(16,2) DEFAULT NULL COMMENT '声明价值',
  `cons_value_currency_code` varchar(32) DEFAULT NULL COMMENT '声明价值币种',
  `consign_content` text COMMENT '托寄物内容',
  `consignor_addr_native` varchar(100) DEFAULT NULL COMMENT '寄方客户编码',
  `consignor_monthly_account_number` varchar(200) DEFAULT NULL COMMENT ' 寄件客户月结账号',
  `consignor_comp_name` varchar(200) DEFAULT NULL COMMENT '寄件客户名称',
  `receiver_name` varchar(100) DEFAULT NULL COMMENT '收件客户名称',
  `cons_qty` int(11) DEFAULT NULL COMMENT '件数 ',
  `real_weight_qty` decimal(10,4) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` decimal(10,4) DEFAULT NULL COMMENT '计费重量 ',
  `customs_clearance_pattern` varchar(20) DEFAULT NULL COMMENT '清关模式',
  `is_customs` varchar(20) DEFAULT NULL COMMENT '正式/非正式报关',
  `delivery_mode` varchar(20) DEFAULT NULL COMMENT '派送模式（代理或自营）',
  `agent_no` varchar(150) DEFAULT NULL COMMENT '代理单号',
  `agent_product` varchar(50) DEFAULT NULL COMMENT '代理产品',
  `master_airway_bill_no` varchar(100) DEFAULT NULL COMMENT '国际航班主提单',
  `contnr_code` varchar(50) DEFAULT NULL COMMENT '始发口岸车标号',
  `flight_no` varchar(50) DEFAULT NULL COMMENT '航班号',
  `flight_departure_city` varchar(50) DEFAULT NULL COMMENT '航班起飞城市',
  `flight_landing_city` varchar(50) DEFAULT NULL COMMENT '航班落地城市',
  `flight_arrival_time` datetime DEFAULT NULL COMMENT '落地时间',
  `import_customs_code` varchar(50) DEFAULT NULL COMMENT '进口清关口岸网点',
  `tally_port_code` varchar(50) DEFAULT NULL COMMENT '美国理货网点',
  `dest_unload_network_code` varchar(50) DEFAULT NULL COMMENT '目的地卸车网点',
  `delivery_network_code` varchar(50) DEFAULT NULL COMMENT '派送网点代码',
  `clearance_time` datetime DEFAULT NULL COMMENT 'CFS清关时间',
  `brokerage_hold_time` datetime DEFAULT NULL COMMENT '暂存口岸待申报时间',
  `customs_inspection_time` datetime DEFAULT NULL COMMENT '海关查验时间',
  `customs_hold_time` datetime DEFAULT NULL COMMENT '海关扣件时间',
  `formal_clearance_time` datetime DEFAULT NULL COMMENT '正式报关时间',
  `customs_release_time_planed` datetime DEFAULT NULL COMMENT '计划货件已放行时间',
  `customs_release_time_act` datetime DEFAULT NULL COMMENT '实际货件已放行时间 ',
  `port_load_time_plan` datetime DEFAULT NULL COMMENT '计划口岸装车时间',
  `port_load_time_act` datetime DEFAULT NULL COMMENT '实际口岸装车时间 ',
  `abroad_port_standard_static` double(5,1) DEFAULT NULL COMMENT '海外口岸静态时效标准(h/mm)',
  `abroad_port_standard` varchar(20) DEFAULT NULL COMMENT '海外口岸时效标准(h/mm)',
  `abroad_port_time_consume` varchar(20) DEFAULT NULL COMMENT '海外口岸环节耗时(h/mm) ',
  `abroad_port_overtime` varchar(20) DEFAULT NULL COMMENT '海外口岸超时分钟数(h/mm)',
  `port_status` varchar(20) DEFAULT NULL COMMENT '海外口岸环节超时状态。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `destination_unload_time_plan` datetime DEFAULT NULL COMMENT '计划目的地分点部卸车时间',
  `destination_unload_time_act` datetime DEFAULT NULL COMMENT '实际目的地分点部卸车时间',
  `abroad_transfer_standard_static` double(5,1) DEFAULT NULL COMMENT '海外中转静态时效标准(h/mm)',
  `abroad_transfer_standard` varchar(20) DEFAULT NULL COMMENT '海外中转时效标准(h/mm)',
  `abroad_transfer_time_consume` varchar(20) DEFAULT NULL COMMENT '海外中转环节耗时(h/mm)',
  `abroad_transfer_overtime` varchar(20) DEFAULT NULL COMMENT '海外中转超时分钟数(h/mm)',
  `transfer_status` varchar(2) DEFAULT NULL COMMENT '海外中转环节超时状态。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `abroad_handover_shift` varchar(32) DEFAULT NULL COMMENT '海外交接班次',
  `handover_time_plan` datetime DEFAULT NULL COMMENT '计划快件交接时间 (自营) / 代理交接时间 (代理)',
  `handover_time_act` datetime DEFAULT NULL COMMENT '实际快件交接时间 (自营) / 代理交接时间 (代理) ',
  `abroad_handover_standard_static` double(5,1) DEFAULT NULL COMMENT '海外交接静态时效标准(h/mm)',
  `abroad_handover_standard` varchar(20) DEFAULT NULL COMMENT '海外交接时效标准(h/mm)',
  `abroad_handover_time_consume` varchar(20) DEFAULT NULL COMMENT '海外交接环节耗时(h/mm) ',
  `abroad_handover_timeout` varchar(20) DEFAULT NULL COMMENT '海外交接超时分钟数(h/mm)',
  `handover_status` varchar(2) DEFAULT NULL COMMENT '海外交接环节超时状态。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `first_problem_shipment_checkpoint_time` datetime DEFAULT NULL COMMENT '第一个问题件巴枪时间',
  `first_problem_shipment_reason_code` varchar(32) DEFAULT NULL COMMENT '第一个问题件原因代码',
  `last_problem_shipment_checkpoint_time` datetime DEFAULT NULL COMMENT '最后一个问题件巴枪时间',
  `last_problem_shipment_reason_code` varchar(32) DEFAULT NULL,
  `last_detained_checkpoint_time` datetime DEFAULT NULL COMMENT '最后一个滞留件巴枪时间',
  `detained_time_consume` varchar(20) DEFAULT NULL COMMENT '滞留件时长(h/mm)',
  `last_shipment_handover_time` datetime DEFAULT NULL COMMENT '最后一个快件交接时间 (自营) / 代理交接时间 (代理) ',
  `delivery_time_plan` datetime DEFAULT NULL COMMENT '计划上门派件时间 ',
  `delivery_time_act` datetime DEFAULT NULL,
  `delivery_staff_no` varchar(150) DEFAULT NULL COMMENT '派件员工号',
  `abroad_delivery_standard_static` double(5,1) DEFAULT NULL COMMENT '海外派件静态时效标准(h/mm)',
  `abroad_delivery_standard` varchar(20) DEFAULT NULL COMMENT '海外派件时效标准(h/mm)',
  `abroad_delivery_time_consume` varchar(20) DEFAULT NULL COMMENT '海外派件环节耗时(h/mm) ',
  `abroad_delivery_overtime` varchar(20) DEFAULT NULL COMMENT '海外派件超时分钟数(h/mm)',
  `delivery_status` varchar(2) DEFAULT NULL COMMENT '海外派件环节超时状态。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `abroad_wholetime` double(10,2) DEFAULT NULL COMMENT '海外端整体耗时',
  `wholetime_consume_status` varchar(2) DEFAULT NULL COMMENT '海外整体耗时超时标记。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_main_waybill_no` (`main_waybill_no`) USING BTREE,
  KEY `idx_source_country_code` (`source_country_code`) USING BTREE,
  KEY `idx_product_type` (`product_type`) USING BTREE,
  KEY `idx_dest_country_code` (`dest_country_code`) USING BTREE,
  KEY `idx_send_date` (`send_date`) USING BTREE,
  KEY `idx_flight_arrival_time` (`flight_arrival_time`) USING BTREE,
  KEY `idx_destination_unload_time_act` (`destination_unload_time_act`) USING BTREE,
  KEY `idx_last_port_code` (`last_port_code`) USING BTREE,
  KEY `idx_import_customs_code` (`import_customs_code`) USING BTREE,
  KEY `idx_source_net_code` (`source_net_code`) USING BTREE,
  KEY `idx_dest_country_code_monitor_status` (`monitor_status`,`dest_country_code`) USING BTREE,
  KEY `idx_union_six` (`flight_arrival_time`,`source_country_code`,`dest_country_code`,`last_port_code`,`import_customs_code`,`product_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=21682 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='海外时效预警明细表_A线';

/*Table structure for table `overseas_aging_warning_detailed_b` */

DROP TABLE IF EXISTS `overseas_aging_warning_detailed_b`;

CREATE TABLE `overseas_aging_warning_detailed_b` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `stms_insert_time` datetime DEFAULT NULL COMMENT 'STMS插入数据库时间',
  `stms_update_time` datetime DEFAULT NULL COMMENT 'STMS更新时间',
  `main_waybill_no` varchar(100) NOT NULL COMMENT '运单号',
  `monitor_status` varchar(1) DEFAULT NULL COMMENT '监控状态。0：监控 1：不监控',
  `send_date` datetime DEFAULT NULL COMMENT '寄件日期 ',
  `source_net_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `source_country_code` varchar(10) DEFAULT NULL COMMENT '原寄地国家代码',
  `last_port_code` varchar(50) DEFAULT NULL COMMENT '出口清关口岸网点',
  `dest_city` varchar(50) DEFAULT NULL COMMENT '目的地城市(代码)',
  `dest_country_code` varchar(10) DEFAULT NULL COMMENT '目的地国家代码',
  `product_type` varchar(50) DEFAULT NULL COMMENT '产品类型',
  `product_code` varchar(20) DEFAULT NULL COMMENT '产品代码',
  `cons_value` double(16,2) DEFAULT NULL COMMENT '声明价值',
  `cons_value_currency_code` varchar(32) DEFAULT NULL COMMENT '声明价值币种',
  `consign_content` text COMMENT '托寄物内容',
  `consignor_addr_native` varchar(100) DEFAULT NULL COMMENT '寄方客户编码',
  `consignor_monthly_account_number` varchar(200) DEFAULT NULL COMMENT ' 寄件客户月结账号',
  `consignor_comp_name` varchar(200) DEFAULT NULL COMMENT '寄件客户名称',
  `receiver_name` varchar(100) DEFAULT NULL COMMENT '收件客户名称',
  `cons_qty` int(11) DEFAULT NULL COMMENT '件数 ',
  `real_weight_qty` decimal(10,4) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` decimal(10,4) DEFAULT NULL COMMENT '计费重量 ',
  `customs_clearance_pattern` varchar(20) DEFAULT NULL COMMENT '清关模式',
  `is_customs` varchar(20) DEFAULT NULL COMMENT '正式/非正式报关',
  `delivery_mode` varchar(20) DEFAULT NULL COMMENT '派送模式（代理或自营）',
  `agent_no` varchar(150) DEFAULT NULL COMMENT '代理单号',
  `agent_product` varchar(50) DEFAULT NULL COMMENT '代理产品',
  `master_airway_bill_no` varchar(100) DEFAULT NULL COMMENT '国际航班主提单',
  `contnr_code` varchar(50) DEFAULT NULL COMMENT '始发口岸车标号',
  `flight_no` varchar(50) DEFAULT NULL COMMENT '航班号',
  `flight_departure_city` varchar(50) DEFAULT NULL COMMENT '航班起飞城市',
  `flight_landing_city` varchar(50) DEFAULT NULL COMMENT '航班落地城市',
  `flight_arrival_time` datetime DEFAULT NULL COMMENT '落地时间',
  `import_customs_code` varchar(50) DEFAULT NULL COMMENT '进口清关口岸网点',
  `tally_port_code` varchar(50) DEFAULT NULL COMMENT '美国理货网点',
  `dest_unload_network_code` varchar(50) DEFAULT NULL COMMENT '目的地卸车网点',
  `delivery_network_code` varchar(50) DEFAULT NULL COMMENT '派送网点代码',
  `clearance_time` datetime DEFAULT NULL COMMENT 'CFS清关时间',
  `brokerage_hold_time` datetime DEFAULT NULL COMMENT '暂存口岸待申报时间',
  `customs_inspection_time` datetime DEFAULT NULL COMMENT '海关查验时间',
  `customs_hold_time` datetime DEFAULT NULL COMMENT '海关扣件时间',
  `formal_clearance_time` datetime DEFAULT NULL COMMENT '正式报关时间',
  `customs_release_time_planed` datetime DEFAULT NULL COMMENT '计划货件已放行时间',
  `customs_release_time_act` datetime DEFAULT NULL COMMENT '实际货件已放行时间 ',
  `port_load_time_plan` datetime DEFAULT NULL COMMENT '计划口岸装车时间',
  `port_load_time_act` datetime DEFAULT NULL COMMENT '实际口岸装车时间 ',
  `abroad_port_standard_static` double(5,1) DEFAULT NULL COMMENT '海外口岸静态时效标准(h/mm)',
  `abroad_port_standard` varchar(20) DEFAULT NULL COMMENT '海外口岸时效标准(h/mm)',
  `abroad_port_time_consume` varchar(20) DEFAULT NULL COMMENT '海外口岸环节耗时(h/mm) ',
  `abroad_port_overtime` varchar(20) DEFAULT NULL COMMENT '海外口岸超时分钟数(h/mm)',
  `port_status` varchar(20) DEFAULT NULL COMMENT '海外口岸环节超时状态。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `destination_unload_time_plan` datetime DEFAULT NULL COMMENT '计划目的地分点部卸车时间',
  `destination_unload_time_act` datetime DEFAULT NULL COMMENT '实际目的地分点部卸车时间',
  `abroad_transfer_standard_static` double(5,1) DEFAULT NULL COMMENT '海外中转静态时效标准(h/mm)',
  `abroad_transfer_standard` varchar(20) DEFAULT NULL COMMENT '海外中转时效标准(h/mm)',
  `abroad_transfer_time_consume` varchar(20) DEFAULT NULL COMMENT '海外中转环节耗时(h/mm)',
  `abroad_transfer_overtime` varchar(20) DEFAULT NULL COMMENT '海外中转超时分钟数(h/mm)',
  `transfer_status` varchar(2) DEFAULT NULL COMMENT '海外中转环节超时状态。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `abroad_handover_shift` varchar(32) DEFAULT NULL COMMENT '海外交接班次',
  `handover_time_plan` datetime DEFAULT NULL COMMENT '计划快件交接时间 (自营) / 代理交接时间 (代理)',
  `handover_time_act` datetime DEFAULT NULL COMMENT '实际快件交接时间 (自营) / 代理交接时间 (代理)(第一个) ',
  `abroad_handover_standard_static` double(5,1) DEFAULT NULL COMMENT '海外交接静态时效标准(h/mm)',
  `abroad_handover_standard` varchar(20) DEFAULT NULL COMMENT '海外交接时效标准(h/mm)',
  `abroad_handover_time_consume` varchar(20) DEFAULT NULL COMMENT '海外交接环节耗时(h/mm) ',
  `abroad_handover_timeout` varchar(20) DEFAULT NULL COMMENT '海外交接超时分钟数(h/mm)',
  `handover_status` varchar(2) DEFAULT NULL COMMENT '海外交接环节超时状态。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `first_problem_shipment_checkpoint_time` datetime DEFAULT NULL COMMENT '第一个问题件巴枪时间',
  `first_problem_shipment_reason_code` varchar(32) DEFAULT NULL COMMENT '第一个问题件原因代码',
  `last_problem_shipment_checkpoint_time` datetime DEFAULT NULL COMMENT '最后一个问题件巴枪时间',
  `last_problem_shipment_reason_code` varchar(32) DEFAULT NULL COMMENT '最后一个问题件原因代码',
  `last_detained_checkpoint_time` datetime DEFAULT NULL COMMENT '最后一个滞留件巴枪时间',
  `detained_time_consume` varchar(20) DEFAULT NULL COMMENT '滞留件时长(h/mm)',
  `last_shipment_handover_time` datetime DEFAULT NULL COMMENT '最后一个快件交接时间 (自营) / 代理交接时间 (代理) ',
  `delivery_time_plan` datetime DEFAULT NULL COMMENT '计划上门派件时间 ',
  `delivery_time_act` datetime DEFAULT NULL COMMENT '实际上门派件时间',
  `delivery_staff_no` varchar(150) DEFAULT NULL COMMENT '派件员工号',
  `abroad_delivery_standard_static` double(5,1) DEFAULT NULL COMMENT '海外派件静态时效标准(h/mm)',
  `abroad_delivery_standard` varchar(20) DEFAULT NULL COMMENT '海外派件时效标准(h/mm)',
  `abroad_delivery_time_consume` varchar(20) DEFAULT NULL COMMENT '海外派件环节耗时(h/mm) ',
  `abroad_delivery_overtime` varchar(20) DEFAULT NULL COMMENT '海外派件超时分钟数(h/mm)',
  `delivery_status` varchar(2) DEFAULT NULL COMMENT '海外派件环节超时状态。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `wholetime_consume_status` varchar(2) DEFAULT NULL COMMENT '海外整体耗时超时标记。0：准点，1:未超时，2：有节点超时，3：无节点超时',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_main_waybill_no` (`main_waybill_no`) USING BTREE,
  KEY `idx_send_date` (`send_date`) USING BTREE,
  KEY `idx_flight_arrival_time` (`flight_arrival_time`) USING BTREE,
  KEY `idx_destination_unload_time_act` (`destination_unload_time_act`) USING BTREE,
  KEY `idx_last_port_code` (`last_port_code`) USING BTREE,
  KEY `idx_import_customs_code` (`import_customs_code`) USING BTREE,
  KEY `idx_source_net_code` (`source_net_code`) USING BTREE,
  KEY `idx_dest_country_code_monitor_status` (`monitor_status`,`dest_country_code`) USING BTREE,
  KEY `idx_source_country_code` (`source_country_code`) USING BTREE,
  KEY `idx_product_type` (`product_type`) USING BTREE,
  KEY `idx_dest_country_code` (`dest_country_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=21931 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='海外时效预警明细表_B线';

/*Table structure for table `overseas_aging_warning_sum_a` */

DROP TABLE IF EXISTS `overseas_aging_warning_sum_a`;

CREATE TABLE `overseas_aging_warning_sum_a` (
  `id` int(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `flight_landing_time` date DEFAULT NULL COMMENT '航班落地时间',
  `source_country_abb` varchar(10) DEFAULT NULL COMMENT '原寄地国家简写',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品代码',
  `exit_port` varchar(10) DEFAULT NULL COMMENT '出口口岸',
  `dest_port` varchar(10) DEFAULT NULL COMMENT '目的地口岸',
  `take_over_total` int(10) DEFAULT NULL COMMENT '收件票数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `abroad_port_warning_count` int(10) DEFAULT NULL COMMENT '海外口岸环节预警数量',
  `abroad_transfer_warning_count` int(10) DEFAULT NULL COMMENT '海外中转环节预警数量',
  `abroad_handover_warning_count` int(10) DEFAULT NULL COMMENT '海外交接环节预警数量',
  `abroad_delivery_warning_count` int(10) DEFAULT NULL COMMENT '海外派送环节预警数量',
  `abroad_total_count` int(10) DEFAULT NULL COMMENT '海外端整体时效预警数量',
  `abroad_avg` double(10,3) DEFAULT NULL COMMENT '海外端平均耗时',
  `on_time_piece` int(10) DEFAULT NULL COMMENT '准点票数',
  `no_time_out_piece` int(10) DEFAULT NULL COMMENT '未超时票数',
  `exception_piece` int(10) DEFAULT NULL COMMENT '异常票数',
  `achieving_rate` double(10,3) DEFAULT NULL COMMENT '时效达成率',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_flight_landing_time` (`flight_landing_time`) USING BTREE,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_exit_port` (`exit_port`) USING HASH,
  KEY `idx_dest_port` (`dest_port`) USING HASH,
  KEY `idx_source_country_abb` (`source_country_abb`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=75500 DEFAULT CHARSET=utf8 COMMENT='海外整体时效监控A线';

/*Table structure for table `overseas_port_warning_detail` */

DROP TABLE IF EXISTS `overseas_port_warning_detail`;

CREATE TABLE `overseas_port_warning_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `date` date DEFAULT NULL COMMENT '日期',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `export_country` varchar(10) DEFAULT NULL COMMENT '出口国家',
  `export_port` varchar(10) DEFAULT NULL COMMENT '出口口岸',
  `import_country` varchar(10) DEFAULT NULL COMMENT '进口国家',
  `import_port` varchar(10) DEFAULT NULL COMMENT '进口口岸',
  `overseas_port` varchar(10) DEFAULT NULL COMMENT '海外口岸网点',
  `batch_code` varchar(30) DEFAULT NULL COMMENT '班次编码',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `mailing` varchar(200) DEFAULT NULL COMMENT '托寄物',
  `value` double(17,3) DEFAULT NULL COMMENT '价值',
  `flight_code` varchar(30) DEFAULT NULL COMMENT '航班号',
  `air_waybill_number` varchar(30) DEFAULT NULL COMMENT '航空主运单号',
  `flight_arrival_time` datetime DEFAULT NULL COMMENT '航班落地当地时间',
  `arrival_vehicle` varchar(30) DEFAULT NULL COMMENT '到车车标',
  `declare_mode` varchar(30) DEFAULT NULL COMMENT '报关模式',
  `clearance_mode` varchar(30) DEFAULT NULL COMMENT '清关模式',
  `clearance_aging_standard` datetime DEFAULT NULL COMMENT '清关时效标准',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `load_vehicle` varchar(30) DEFAULT NULL COMMENT '装车车标',
  `retention_time` varchar(500) DEFAULT NULL COMMENT '滞留时间',
  `retention_bar_code` varchar(20) DEFAULT NULL COMMENT '滞留巴枪操作码',
  `actual_batch` varchar(30) DEFAULT NULL COMMENT '实际发出班次',
  `overtime_warning` bigint(20) DEFAULT NULL COMMENT '超时预警',
  `overtime` bigint(20) DEFAULT NULL COMMENT '超时',
  `next_network_code` varchar(30) DEFAULT NULL COMMENT '下环节网点',
  `next_network_code_batch` varchar(30) DEFAULT NULL COMMENT '下环节网点班次',
  `is_in` varchar(5) DEFAULT NULL COMMENT '是否在场 0:否 1:是',
  `is_excess` varchar(5) DEFAULT NULL COMMENT '是否多发 0:否 1:是',
  `load_vehicle_batch` varchar(30) DEFAULT NULL COMMENT '实际装车班次',
  `is_real_time` varchar(5) DEFAULT NULL COMMENT '是否实时发出 0:否 1:是',
  `is_should_send` int(1) DEFAULT NULL COMMENT '是否应发 0:否 1:是',
  `insert_time` datetime DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  `is_real_flight_tm` char(1) DEFAULT NULL COMMENT '是否是真实的航班时间，0：否，1：是',
  `set_end_tm` datetime DEFAULT NULL COMMENT '规定结束时间',
  `promise_aging` datetime DEFAULT NULL COMMENT '产品承诺时效',
  `customs_batch` varchar(30) DEFAULT NULL COMMENT '报关批次',
  `plan_flight_arrival_tm` datetime DEFAULT NULL COMMENT '航班计划到达时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_uq_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_flight_arrival_date` (`flight_arrival_time`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_export_country` (`export_country`) USING HASH,
  KEY `idx_export_port` (`export_port`) USING HASH,
  KEY `idx_import_country` (`import_country`) USING HASH,
  KEY `idx_import_port` (`import_port`) USING HASH,
  KEY `idx_date` (`date`)
) ENGINE=InnoDB AUTO_INCREMENT=10742 DEFAULT CHARSET=utf8 COMMENT='海外口岸预警明细';

/*Table structure for table `overseas_port_warning_load_detail` */

DROP TABLE IF EXISTS `overseas_port_warning_load_detail`;

CREATE TABLE `overseas_port_warning_load_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `actual_send_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '实际班次日期',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `load_vehicle` varchar(30) DEFAULT NULL COMMENT '装车车标',
  `actual_send_batch` varchar(30) DEFAULT NULL COMMENT '实际发出班次',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `server_ip` varchar(30) DEFAULT NULL COMMENT '服务器运行IP',
  PRIMARY KEY (`id`,`actual_send_batch_date`),
  KEY `idx_uq_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_load_vehicle` (`load_vehicle`) USING HASH,
  KEY `idx_actual_send_batch` (`actual_send_batch`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=50 DEFAULT CHARSET=utf8 COMMENT='海外口岸预警卸车明细'
/*!50500 PARTITION BY RANGE  COLUMNS(actual_send_batch_date)
(PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `overseas_port_warning_monitor` */

DROP TABLE IF EXISTS `overseas_port_warning_monitor`;

CREATE TABLE `overseas_port_warning_monitor` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `flight_arrival_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '航班落地当地日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `export_country` varchar(30) DEFAULT NULL COMMENT '出口国家',
  `export_port` varchar(30) DEFAULT NULL COMMENT '出口口岸',
  `import_country` varchar(30) DEFAULT NULL COMMENT '进口国家',
  `import_port` varchar(30) DEFAULT NULL COMMENT '进口口岸',
  `overseas_port` varchar(30) DEFAULT NULL COMMENT '海外口岸网点',
  `batch_code` varchar(30) DEFAULT NULL COMMENT '班次编码',
  `in_count` int(10) DEFAULT NULL COMMENT '在场票数',
  `in_meterage_weight` double(17,3) DEFAULT NULL COMMENT '在场计费重量',
  `actual_arr_count` int(10) DEFAULT NULL COMMENT '实到票数',
  `actual_arr_weight` double(17,3) DEFAULT NULL COMMENT '实到计费重量',
  `declare_count` int(10) DEFAULT NULL COMMENT '正式报关票数',
  `clearance_count` int(10) DEFAULT NULL COMMENT 'CFS清关票数',
  `should_send_count` int(10) DEFAULT NULL COMMENT '应发票数',
  `actual_send_count` int(10) DEFAULT NULL COMMENT '实发票数',
  `actual_send_weight` double(17,3) DEFAULT NULL COMMENT '实发计费重量',
  `not_send_count` int(10) DEFAULT NULL COMMENT '未发票数',
  `excess_count` int(10) DEFAULT NULL COMMENT '多发票数',
  `late_count` int(10) DEFAULT NULL COMMENT '晚发票数',
  `retention_count` int(10) DEFAULT NULL COMMENT '滞留票数',
  `overtime_warning_count` int(10) DEFAULT NULL COMMENT '超时预警票数',
  `overtime_count` int(10) DEFAULT NULL COMMENT '超时票数',
  `insert_time` datetime DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`,`flight_arrival_date`),
  KEY `idx_flight_arrival_date` (`flight_arrival_date`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_export_country` (`export_country`) USING HASH,
  KEY `idx_export_port` (`export_port`) USING HASH,
  KEY `idx_import_country` (`import_country`) USING HASH,
  KEY `idx_import_port` (`import_port`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=1717998 DEFAULT CHARSET=utf8 COMMENT='海外口岸预警'
/*!50500 PARTITION BY RANGE  COLUMNS(flight_arrival_date)
(PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `overseas_port_warning_monitor_backup20181205` */

DROP TABLE IF EXISTS `overseas_port_warning_monitor_backup20181205`;

CREATE TABLE `overseas_port_warning_monitor_backup20181205` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `flight_arrival_date` date DEFAULT NULL COMMENT '航班落地当地日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `export_country` varchar(30) DEFAULT NULL COMMENT '出口国家',
  `export_port` varchar(30) DEFAULT NULL COMMENT '出口口岸',
  `import_country` varchar(30) DEFAULT NULL COMMENT '进口国家',
  `import_port` varchar(30) DEFAULT NULL COMMENT '进口口岸',
  `overseas_port` varchar(30) DEFAULT NULL COMMENT '海外口岸网点',
  `batch_code` varchar(30) DEFAULT NULL COMMENT '班次编码',
  `in_count` int(10) DEFAULT NULL COMMENT '在场票数',
  `in_meterage_weight` double(17,3) DEFAULT NULL COMMENT '在场计费重量',
  `actual_arr_count` int(10) DEFAULT NULL COMMENT '实到票数',
  `actual_arr_weight` double(17,3) DEFAULT NULL COMMENT '实到计费重量',
  `declare_count` int(10) DEFAULT NULL COMMENT '正式报关票数',
  `clearance_count` int(10) DEFAULT NULL COMMENT 'CFS清关票数',
  `should_send_count` int(10) DEFAULT NULL COMMENT '应发票数',
  `actual_send_count` int(10) DEFAULT NULL COMMENT '实发票数',
  `actual_send_weight` double(17,3) DEFAULT NULL COMMENT '实发计费重量',
  `not_send_count` int(10) DEFAULT NULL COMMENT '未发票数',
  `excess_count` int(10) DEFAULT NULL COMMENT '多发票数',
  `late_count` int(10) DEFAULT NULL COMMENT '晚发票数',
  `retention_count` int(10) DEFAULT NULL COMMENT '滞留票数',
  `overtime_warning_count` int(10) DEFAULT NULL COMMENT '超时预警票数',
  `overtime_count` int(10) DEFAULT NULL COMMENT '超时票数',
  `insert_time` datetime DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_flight_arrival_date` (`flight_arrival_date`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_export_country` (`export_country`) USING HASH,
  KEY `idx_export_port` (`export_port`) USING HASH,
  KEY `idx_import_country` (`import_country`) USING HASH,
  KEY `idx_import_port` (`import_port`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=562607 DEFAULT CHARSET=utf8 COMMENT='海外口岸预警';

/*Table structure for table `overseas_port_warning_unload_detail` */

DROP TABLE IF EXISTS `overseas_port_warning_unload_detail`;

CREATE TABLE `overseas_port_warning_unload_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `unload_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '卸车班次日期',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `export_country` varchar(10) DEFAULT NULL COMMENT '出口国家',
  `export_port` varchar(10) DEFAULT NULL COMMENT '出口口岸',
  `import_country` varchar(10) DEFAULT NULL COMMENT '进口国家',
  `import_port` varchar(10) DEFAULT NULL COMMENT '进口口岸',
  `overseas_port` varchar(10) DEFAULT NULL COMMENT '海外口岸网点',
  `batch_code` varchar(30) DEFAULT NULL COMMENT '班次编码',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `mailing` varchar(200) DEFAULT NULL COMMENT '托寄物',
  `value` double(17,3) DEFAULT NULL COMMENT '价值',
  `flight_code` varchar(30) DEFAULT NULL COMMENT '航班号',
  `air_waybill_number` varchar(30) DEFAULT NULL COMMENT '航空主运单号',
  `flight_arrival_time` datetime DEFAULT NULL COMMENT '航班落地当地时间',
  `arrival_vehicle` varchar(1000) DEFAULT NULL COMMENT '到车车标',
  `declare_mode` varchar(30) DEFAULT NULL COMMENT '报关模式',
  `clearance_mode` varchar(30) DEFAULT NULL COMMENT '清关模式',
  `clearance_aging_standard` datetime DEFAULT NULL COMMENT '清关时效标准',
  `retention_time` varchar(300) DEFAULT NULL COMMENT '滞留时间',
  `retention_bar_code` varchar(150) DEFAULT NULL COMMENT '滞留巴枪操作码',
  `overtime_warning` bigint(20) DEFAULT NULL COMMENT '超时预警',
  `overtime` bigint(20) DEFAULT NULL COMMENT '超时',
  `next_network_code` varchar(30) DEFAULT NULL COMMENT '下环节网点',
  `next_network_code_batch` varchar(30) DEFAULT NULL COMMENT '下环节网点班次',
  `is_in` varchar(5) DEFAULT NULL COMMENT '是否在场 0:否 1:是',
  `is_excess` varchar(5) DEFAULT NULL COMMENT '是否多发 0:否 1:是',
  `is_real_time` varchar(5) DEFAULT NULL COMMENT '是否实时发出 0:否 1:是',
  `is_should_send` int(1) DEFAULT NULL COMMENT '是否应发 0:否 1:是',
  `is_no_send` int(1) DEFAULT NULL COMMENT '是否未发 0:否 1:是',
  `is_late_send` int(1) DEFAULT NULL COMMENT '是否晚发 0:否 1:是',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `is_real_flight_tm` char(1) DEFAULT NULL COMMENT '是否是真实的航班时间，0：否，1：是',
  `set_end_tm` datetime DEFAULT NULL COMMENT '规定结束时间',
  `promise_aging` datetime DEFAULT NULL COMMENT '产品承诺时效',
  `customs_batch` varchar(30) DEFAULT NULL COMMENT '报关批次',
  `plan_flight_arrival_tm` datetime DEFAULT NULL COMMENT '航班计划到达时间',
  `server_ip` varchar(30) DEFAULT NULL COMMENT '服务器运行IP',
  PRIMARY KEY (`id`,`unload_batch_date`),
  KEY `idx_uq_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_flight_arrival_date` (`flight_arrival_time`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_export_country` (`export_country`) USING HASH,
  KEY `idx_export_port` (`export_port`) USING HASH,
  KEY `idx_import_country` (`import_country`) USING HASH,
  KEY `idx_customs_batch` (`customs_batch`) USING HASH,
  KEY `idx_import_port` (`import_port`) USING HASH,
  KEY `idx_flight_code` (`flight_code`) USING HASH,
  KEY `idx_air_waybill_number` (`air_waybill_number`) USING HASH,
  KEY `idx_overseas_port` (`overseas_port`) USING HASH,
  KEY `idx_batch_code` (`batch_code`) USING HASH,
  KEY `idx_unload_batch_date` (`unload_batch_date`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4190977 DEFAULT CHARSET=utf8 COMMENT='海外口岸预警卸车明细'
/*!50500 PARTITION BY RANGE  COLUMNS(unload_batch_date)
(PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `overseas_terminal_warning_b` */

DROP TABLE IF EXISTS `overseas_terminal_warning_b`;

CREATE TABLE `overseas_terminal_warning_b` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `handover_date` date NOT NULL COMMENT '目的地分点部卸车日期',
  `source_country` varchar(50) DEFAULT NULL COMMENT '原寄地国家',
  `dest_country` varchar(50) DEFAULT NULL COMMENT '目的地国家',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型代码',
  `handover_poll` int(10) DEFAULT NULL COMMENT '目的地分点部卸车票数',
  `dest_real_weight` double(12,2) DEFAULT NULL COMMENT '目的地分点部卸车实际重量(kg)',
  `dest_meterage_weight` double(12,2) DEFAULT NULL COMMENT '目的地分点部卸车计费重量(kg)',
  `handover_warning` int(10) DEFAULT NULL COMMENT '海外交接环节预警 (自营)',
  `handover_warning_proxy` int(10) DEFAULT NULL COMMENT '海外交接环节预警 (代理)',
  `delivery_warning` int(10) DEFAULT NULL COMMENT '海外派送环节预警 (自营)',
  `delivery_warning_proxy` int(10) DEFAULT NULL COMMENT '海外派送环节预警 (代理)',
  `retention_warning` int(10) DEFAULT NULL COMMENT '海外派送滞留预警 (自营)',
  `retention_warning_proxy` int(10) DEFAULT NULL COMMENT '海外派送滞留预警 (代理)',
  `ontime_poll` int(10) DEFAULT NULL COMMENT '自营准点票数',
  `nobreak_poll` int(10) DEFAULT NULL COMMENT '自营未超时票数',
  `break_poll` int(10) DEFAULT NULL COMMENT '自营超时票数',
  `ontime_poll_proxy` int(10) DEFAULT NULL COMMENT '代理准点票数',
  `nobreak_poll_proxy` int(10) DEFAULT NULL COMMENT '代理未超时票数',
  `break_poll_proxy` int(10) DEFAULT NULL COMMENT '代理超时票数',
  `insert_time` datetime NOT NULL COMMENT 'STMS入库时间',
  `update_time` datetime DEFAULT NULL COMMENT 'STMS更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_src_country` (`source_country`),
  KEY `idx_dest_country` (`dest_country`),
  KEY `idx_date` (`handover_date`),
  KEY `idx_product_code` (`product_code`),
  KEY `idx_comb` (`source_country`,`dest_country`,`handover_date`,`product_code`)
) ENGINE=InnoDB AUTO_INCREMENT=150270 DEFAULT CHARSET=utf8 COMMENT='海外终端预警B';

/*Table structure for table `pick_up_situation_detail` */

DROP TABLE IF EXISTS `pick_up_situation_detail`;

CREATE TABLE `pick_up_situation_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `parent_waybill_no` varchar(50) DEFAULT NULL COMMENT '对应的母单号',
  `send_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '寄件日期',
  `pick_up_time` datetime DEFAULT NULL COMMENT '收件时间',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_city` varchar(30) DEFAULT NULL COMMENT '原寄地城市',
  `source_dept` varchar(30) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(30) DEFAULT NULL COMMENT '原寄地地区',
  `source_network` varchar(30) DEFAULT NULL COMMENT '原寄地网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area_code` varchar(30) DEFAULT NULL COMMENT '目的地地区',
  `dest_network_code` varchar(30) DEFAULT NULL COMMENT '目的地网点代码',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `cargo_type_code` varchar(32) DEFAULT NULL COMMENT '快件内容类型',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `load_network_code` varchar(50) DEFAULT NULL COMMENT '装车网点代码',
  `consignment_name` varchar(600) DEFAULT NULL COMMENT '托寄物',
  `customer_name` varchar(600) DEFAULT NULL COMMENT '客户名称',
  `customer_code` varchar(15) DEFAULT NULL COMMENT '客户卡号',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `total_meterage_weight` double(17,3) DEFAULT NULL COMMENT '母单包含子件的总计费重量',
  `real_match_time` datetime DEFAULT NULL COMMENT '配载时间',
  `actual_real_match_port` varchar(30) DEFAULT NULL COMMENT '实际配载口岸',
  `flight_time` datetime DEFAULT NULL COMMENT '航班起飞时间',
  `plan_export_port` varchar(30) DEFAULT NULL COMMENT '规划出口口岸',
  `is_no_bar_operation` varchar(1) DEFAULT '0' COMMENT '是否为当天未发票(0:是,1:否)',
  `is_already_real_match` varchar(1) DEFAULT '1' COMMENT '是否为已配载票数(0:是,1:否)',
  `real_match_days` int(10) DEFAULT NULL COMMENT '配载天数',
  `send_date_to_job_date` int(10) DEFAULT '0' COMMENT '寄件日期跟Job日期相差的天数',
  PRIMARY KEY (`id`,`send_date`),
  KEY `idx_union_four` (`send_date`,`source_network`,`dest_country_abb`,`product_code`) USING HASH,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_send_date` (`send_date`) USING BTREE,
  KEY `idx_plan_export_port` (`plan_export_port`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE,
  KEY `idx_source_country_abb` (`source_country_abb`) USING BTREE,
  KEY `idx_source_dept` (`source_dept`) USING BTREE,
  KEY `idx_source_area` (`source_area`) USING BTREE,
  KEY `idx_source_city` (`source_city`) USING BTREE,
  KEY `idx_source_network` (`source_network`) USING BTREE,
  KEY `idx_dest_dept_code` (`dest_dept_code`) USING BTREE,
  KEY `idx_dest_area_code` (`dest_area_code`) USING BTREE,
  KEY `idx_dest_city_code` (`dest_city_code`) USING BTREE,
  KEY `idx_waybill_no_send_date` (`main_waybill_no`,`send_date`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=70038312300 DEFAULT CHARSET=utf8 COMMENT='收件概况明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(send_date)
(PARTITION p20180521 VALUES LESS THAN ('2018-05-21') ENGINE = InnoDB,
 PARTITION p20180528 VALUES LESS THAN ('2018-05-28') ENGINE = InnoDB,
 PARTITION p20180604 VALUES LESS THAN ('2018-06-04') ENGINE = InnoDB,
 PARTITION p20180611 VALUES LESS THAN ('2018-06-11') ENGINE = InnoDB,
 PARTITION p20180618 VALUES LESS THAN ('2018-06-18') ENGINE = InnoDB,
 PARTITION p20180625 VALUES LESS THAN ('2018-06-25') ENGINE = InnoDB,
 PARTITION p20180702 VALUES LESS THAN ('2018-07-02') ENGINE = InnoDB,
 PARTITION p20180709 VALUES LESS THAN ('2018-07-09') ENGINE = InnoDB,
 PARTITION p20180716 VALUES LESS THAN ('2018-07-16') ENGINE = InnoDB,
 PARTITION p20180723 VALUES LESS THAN ('2018-07-23') ENGINE = InnoDB,
 PARTITION p20180730 VALUES LESS THAN ('2018-07-30') ENGINE = InnoDB,
 PARTITION p20180806 VALUES LESS THAN ('2018-08-06') ENGINE = InnoDB,
 PARTITION p20180813 VALUES LESS THAN ('2018-08-13') ENGINE = InnoDB,
 PARTITION p20180820 VALUES LESS THAN ('2018-08-20') ENGINE = InnoDB,
 PARTITION p20180827 VALUES LESS THAN ('2018-08-27') ENGINE = InnoDB,
 PARTITION p20180903 VALUES LESS THAN ('2018-09-03') ENGINE = InnoDB,
 PARTITION p20180910 VALUES LESS THAN ('2018-09-10') ENGINE = InnoDB,
 PARTITION p20180917 VALUES LESS THAN ('2018-09-17') ENGINE = InnoDB,
 PARTITION p20180924 VALUES LESS THAN ('2018-09-24') ENGINE = InnoDB,
 PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION p20190107 VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `pick_up_situation_monitor` */

DROP TABLE IF EXISTS `pick_up_situation_monitor`;

CREATE TABLE `pick_up_situation_monitor` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `pickup_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '收件日期',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_city` varchar(30) DEFAULT NULL COMMENT '原寄地城市',
  `source_dept` varchar(30) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(30) DEFAULT NULL COMMENT '原寄地地区',
  `source_network` varchar(30) DEFAULT NULL COMMENT '原寄地网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `dest_city_code` varchar(10) DEFAULT NULL COMMENT '目的地城市',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `cargo_type_code` varchar(32) DEFAULT NULL COMMENT '快件内容类型',
  `plan_export_port` varchar(30) DEFAULT NULL COMMENT '规划出口口岸',
  `pickup_count` int(10) DEFAULT NULL COMMENT '收件票数',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `exceed_80kg_count` int(10) DEFAULT NULL COMMENT '超80KG票数',
  `exceed_80kg_sum_weight` double(17,3) DEFAULT NULL COMMENT '超80KG总计费重量',
  `no_bar_operation_count` int(10) DEFAULT NULL COMMENT '未发票数',
  `no_bar_operation_weight` double(17,3) DEFAULT NULL COMMENT '未发计费重量',
  `plan_real_match_count` int(10) DEFAULT NULL COMMENT '规划实配票数',
  `exception_port_count` int(10) DEFAULT NULL COMMENT '异常口岸票数',
  `already_real_match_count` int(10) DEFAULT NULL COMMENT '已配载票数',
  `already_real_match_weight` double(17,3) DEFAULT NULL COMMENT '已配载计费重量',
  `no_real_match_count` int(10) DEFAULT NULL COMMENT '未配载票数',
  `no_real_match_weight` double(17,3) DEFAULT NULL COMMENT '未配载计费重量',
  `d1_real_match_count` int(10) DEFAULT NULL COMMENT 'D1配载票数',
  `d2_real_match_count` int(10) DEFAULT NULL COMMENT 'D2配载票数',
  `d3_real_match_count` int(10) DEFAULT NULL COMMENT 'D3配载票数',
  `exceed_d3_real_match_count` int(10) DEFAULT NULL COMMENT 'D3后配载票数',
  `new_group_flag` int(10) DEFAULT NULL COMMENT '新分组标志',
  PRIMARY KEY (`id`,`pickup_date`),
  KEY `idx_pickup_date` (`pickup_date`) USING BTREE,
  KEY `idx_source_country_abb` (`source_country_abb`) USING HASH,
  KEY `idx_source_dept` (`source_dept`) USING HASH,
  KEY `idx_source_area` (`source_area`) USING HASH,
  KEY `idx_source_city` (`source_city`) USING HASH,
  KEY `idx_source_network` (`source_network`) USING HASH,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_plan_export_port` (`plan_export_port`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=7025146 DEFAULT CHARSET=utf8 COMMENT='收件概况监控表'
/*!50500 PARTITION BY RANGE  COLUMNS(pickup_date)
(PARTITION p20180521 VALUES LESS THAN ('2018-05-21') ENGINE = InnoDB,
 PARTITION p20180528 VALUES LESS THAN ('2018-05-28') ENGINE = InnoDB,
 PARTITION p20180604 VALUES LESS THAN ('2018-06-04') ENGINE = InnoDB,
 PARTITION p20180611 VALUES LESS THAN ('2018-06-11') ENGINE = InnoDB,
 PARTITION p20180618 VALUES LESS THAN ('2018-06-18') ENGINE = InnoDB,
 PARTITION p20180625 VALUES LESS THAN ('2018-06-25') ENGINE = InnoDB,
 PARTITION p20180702 VALUES LESS THAN ('2018-07-02') ENGINE = InnoDB,
 PARTITION p20180709 VALUES LESS THAN ('2018-07-09') ENGINE = InnoDB,
 PARTITION p20180716 VALUES LESS THAN ('2018-07-16') ENGINE = InnoDB,
 PARTITION p20180723 VALUES LESS THAN ('2018-07-23') ENGINE = InnoDB,
 PARTITION p20180730 VALUES LESS THAN ('2018-07-30') ENGINE = InnoDB,
 PARTITION p20180806 VALUES LESS THAN ('2018-08-06') ENGINE = InnoDB,
 PARTITION p20180813 VALUES LESS THAN ('2018-08-13') ENGINE = InnoDB,
 PARTITION p20180820 VALUES LESS THAN ('2018-08-20') ENGINE = InnoDB,
 PARTITION p20180827 VALUES LESS THAN ('2018-08-27') ENGINE = InnoDB,
 PARTITION p20180903 VALUES LESS THAN ('2018-09-03') ENGINE = InnoDB,
 PARTITION p20180910 VALUES LESS THAN ('2018-09-10') ENGINE = InnoDB,
 PARTITION p20180917 VALUES LESS THAN ('2018-09-17') ENGINE = InnoDB,
 PARTITION p20180924 VALUES LESS THAN ('2018-09-24') ENGINE = InnoDB,
 PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION p20190107 VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `pick_up_warning_detail` */

DROP TABLE IF EXISTS `pick_up_warning_detail`;

CREATE TABLE `pick_up_warning_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `pick_up_time` datetime NOT NULL COMMENT '收件时间',
  `pick_up_date` date NOT NULL COMMENT '收件日期',
  `source_country_code` varchar(30) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_city_code` varchar(30) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_dept_code` varchar(30) DEFAULT NULL COMMENT '原寄地本部代码',
  `source_area_code` varchar(30) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_network_code` varchar(30) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(10) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部代码',
  `dest_area_code` varchar(30) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(30) DEFAULT NULL COMMENT '目的地网点代码',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `quantity` int(11) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `consignee_emp_code` varchar(50) DEFAULT NULL COMMENT '收件员工号',
  `pick_up_batch` varchar(50) DEFAULT NULL COMMENT '收件班次',
  `pick_up_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '收件班次日期',
  `should_load_begin_time` datetime DEFAULT NULL COMMENT '应发开始时间',
  `should_load_end_time` datetime DEFAULT NULL COMMENT '应发结束时间',
  `load_network_code` varchar(50) DEFAULT NULL COMMENT '装车网点代码',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `load_date` date DEFAULT '0000-00-00' COMMENT '装车日期',
  `load_batch` varchar(50) DEFAULT NULL COMMENT '装车班次',
  `load_batch_date` date DEFAULT NULL COMMENT '装车班次日期',
  `timeout` varchar(20) DEFAULT NULL COMMENT '超时时间(1h35m)',
  `retention_time` varchar(300) DEFAULT NULL COMMENT '滞留时间',
  `retention_reason` varchar(300) DEFAULT NULL COMMENT '滞留原因',
  `retention_count` int(11) DEFAULT NULL COMMENT '滞留次数',
  PRIMARY KEY (`id`,`pick_up_batch_date`),
  KEY `idx_union_four` (`pick_up_date`,`source_network_code`,`dest_country_code`,`product_code`) USING BTREE,
  KEY `idx_dest_country_abb` (`dest_country_code`) USING BTREE,
  KEY `idx_send_date` (`pick_up_date`) USING BTREE,
  KEY `idx_source_country_abb` (`source_country_code`) USING BTREE,
  KEY `idx_source_dept` (`source_dept_code`) USING BTREE,
  KEY `idx_source_area` (`source_area_code`) USING BTREE,
  KEY `idx_source_city` (`source_city_code`) USING BTREE,
  KEY `idx_source_network` (`source_network_code`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE,
  KEY `idx_pickup_batch` (`pick_up_batch`) USING BTREE,
  KEY `idx_pickdate` (`pick_up_batch_date`) USING BTREE,
  KEY `idx_uq_main_waybill_no` (`waybill_no`) USING BTREE,
  KEY `source_country_code` (`source_country_code`,`source_city_code`,`source_dept_code`,`source_area_code`,`source_network_code`,`dest_country_code`,`dest_city_code`,`product_code`,`pick_up_batch`,`pick_up_batch_date`)
) ENGINE=InnoDB AUTO_INCREMENT=1277911 DEFAULT CHARSET=utf8 COMMENT='收件预警明细-收件表'
/*!50500 PARTITION BY RANGE  COLUMNS(pick_up_batch_date)
(PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION p20190107 VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `pick_up_warning_detail_load_info` */

DROP TABLE IF EXISTS `pick_up_warning_detail_load_info`;

CREATE TABLE `pick_up_warning_detail_load_info` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `source_network_code` varchar(30) DEFAULT NULL COMMENT '收件网点代码',
  `should_load_begin_time` datetime DEFAULT NULL COMMENT '应发开始时间',
  `should_load_end_time` datetime DEFAULT NULL COMMENT '应发结束时间',
  `load_network_code` varchar(50) DEFAULT NULL COMMENT '装车网点代码',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `load_date` date DEFAULT NULL COMMENT '装车日期',
  `load_batch` varchar(50) DEFAULT NULL COMMENT '装车班次',
  `load_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '装车班次日期',
  PRIMARY KEY (`id`,`load_batch_date`),
  KEY `waybill_no` (`waybill_no`),
  KEY `load_batch_load_batch_date` (`load_batch`,`load_batch_date`),
  KEY `load_batch_load_batch_date_should_load_end_time` (`load_batch`,`load_batch_date`,`should_load_end_time`),
  KEY `load_batch_load_batch_date_source_network_code` (`load_batch`,`load_batch_date`,`source_network_code`)
) ENGINE=InnoDB AUTO_INCREMENT=506116 DEFAULT CHARSET=utf8 COMMENT='收件预警明细-装车表'
/*!50500 PARTITION BY RANGE  COLUMNS(load_batch_date)
(PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION p20190107 VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `pick_up_warning_detail_old` */

DROP TABLE IF EXISTS `pick_up_warning_detail_old`;

CREATE TABLE `pick_up_warning_detail_old` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `parent_waybill_no` varchar(50) DEFAULT NULL COMMENT '对应的母单号',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_city` varchar(30) DEFAULT NULL COMMENT '原寄地城市',
  `source_dept` varchar(30) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(30) DEFAULT NULL COMMENT '原寄地地区',
  `source_network` varchar(30) DEFAULT NULL COMMENT '原寄地网点',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `dest_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市',
  `dest_dept_code` varchar(30) DEFAULT NULL COMMENT '目的地本部',
  `dest_area_code` varchar(30) DEFAULT NULL COMMENT '目的地地区',
  `dest_network_code` varchar(30) DEFAULT NULL COMMENT '目的地网点代码',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `cargo_type_code` varchar(30) DEFAULT NULL COMMENT '快件内容类型',
  `pickup_batch` varchar(50) DEFAULT NULL COMMENT '收件班次',
  `pickup_batch_date` date DEFAULT NULL COMMENT '收件班次日期',
  `send_date` date DEFAULT NULL COMMENT '收件日期',
  `pick_up_time` datetime DEFAULT NULL COMMENT '收件时间',
  `consignee_emp_code` varchar(50) DEFAULT NULL COMMENT '收件员工号',
  `cons_qty` int(11) DEFAULT NULL COMMENT '收件件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `should_load_begin_time` datetime DEFAULT NULL COMMENT '应发开始时间',
  `should_load_end_time` datetime DEFAULT NULL COMMENT '应发结束时间',
  `load_network_code` varchar(50) DEFAULT NULL COMMENT '装车网点代码',
  `load_vehicle_time` datetime DEFAULT NULL COMMENT '装车时间',
  `load_vehicle_date` date DEFAULT NULL COMMENT '装车日期',
  `load_vehicle_batch` varchar(50) DEFAULT NULL COMMENT '装车班次',
  `load_vehicle_batch_date` date DEFAULT NULL COMMENT '装车班次日期',
  `timeout` varchar(20) DEFAULT NULL COMMENT '超时时间(1h35m)',
  `retention_date` varchar(255) DEFAULT NULL COMMENT '滞留时间',
  `retention_reason` varchar(255) DEFAULT NULL COMMENT '滞留原因',
  `retention_times` int(11) DEFAULT NULL COMMENT '滞留次数',
  `unload_vehicle_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `unload_vehicle_date` date DEFAULT NULL COMMENT '卸车日期',
  `unload_vehicle_batch` varchar(50) DEFAULT NULL COMMENT '卸车班次',
  `unload_vehicle_batch_date` date DEFAULT NULL COMMENT '卸车班次日期',
  `is_pickup` varchar(1) DEFAULT NULL COMMENT '是否为当天收件票(0:否，1:是)',
  `is_warning` varchar(1) DEFAULT NULL COMMENT '是否为当天预警票(0:否，1:是)',
  `is_already_bar_operation` varchar(1) DEFAULT NULL COMMENT '是否为当天实发票(0:否，1:是)',
  `is_network_bar_operation` varchar(1) DEFAULT NULL COMMENT '是否为当天本网点实发票(0:否，1:是)',
  `is_no_bar_operation_batch` varchar(1) DEFAULT NULL COMMENT '是否为当班次未发票(0:否，1:是)',
  `is_no_bar_operation` varchar(1) DEFAULT NULL COMMENT '是否为当天未发票(0:否，1:是)',
  `is_more` varchar(1) DEFAULT NULL COMMENT '是否为当天多发票(0:否，1:是)',
  `is_late` varchar(1) DEFAULT NULL COMMENT '是否为当天晚发票(0:否，1:是)',
  `is_present` varchar(1) DEFAULT NULL COMMENT '是否为当天在场票(0:否，1:是)',
  `is_retention_batch` varchar(1) DEFAULT NULL COMMENT '是否为当班次滞留票(0:否，1:是)',
  `is_retention` varchar(1) DEFAULT NULL COMMENT '是否为当天滞留票(0:否，1:是)',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_uq_main_waybill_no` (`main_waybill_no`) USING BTREE,
  KEY `idx_union_four` (`send_date`,`source_network`,`dest_country_abb`,`product_code`) USING BTREE,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING BTREE,
  KEY `idx_send_date` (`send_date`) USING BTREE,
  KEY `idx_source_country_abb` (`source_country_abb`) USING BTREE,
  KEY `idx_source_dept` (`source_dept`) USING BTREE,
  KEY `idx_source_area` (`source_area`) USING BTREE,
  KEY `idx_source_city` (`source_city`) USING BTREE,
  KEY `idx_source_network` (`source_network`) USING BTREE,
  KEY `idx_pickup_batch` (`pickup_batch`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=907620 DEFAULT CHARSET=utf8 COMMENT='收件预警明细表';

/*Table structure for table `pick_up_warning_monitor` */

DROP TABLE IF EXISTS `pick_up_warning_monitor`;

CREATE TABLE `pick_up_warning_monitor` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `pickup_date` date DEFAULT NULL COMMENT '收件日期',
  `pickup_batch_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '收件班次日期',
  `pickup_batch` varchar(50) CHARACTER SET utf8 DEFAULT NULL COMMENT '收件班次',
  `should_load_begin_time` datetime DEFAULT NULL COMMENT '应发开始时间',
  `should_load_end_time` datetime DEFAULT NULL COMMENT '应发结束时间',
  `product_code` varchar(10) CHARACTER SET utf8 DEFAULT NULL COMMENT '产品类型',
  `cargo_type_code` varchar(30) CHARACTER SET utf8 DEFAULT NULL COMMENT '快件内容类型',
  `source_country_abb` varchar(30) CHARACTER SET utf8 DEFAULT NULL COMMENT '原寄地国家简写',
  `source_city` varchar(30) CHARACTER SET utf8 DEFAULT NULL COMMENT '原寄地城市',
  `source_dept` varchar(30) CHARACTER SET utf8 DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(30) CHARACTER SET utf8 DEFAULT NULL COMMENT '原寄地地区',
  `source_network` varchar(30) CHARACTER SET utf8 DEFAULT NULL COMMENT '原寄地网点',
  `dest_country_abb` varchar(10) CHARACTER SET utf8 DEFAULT NULL COMMENT '目的地国家简写',
  `dest_city_code` varchar(10) CHARACTER SET utf8 DEFAULT NULL COMMENT '目的地城市',
  `pickup_count` int(10) DEFAULT NULL COMMENT '收件票数',
  `not_load_count` int(10) DEFAULT '0' COMMENT '累计未发',
  `has_load_count` int(10) DEFAULT '0' COMMENT '累计已发',
  `cross_load_count` int(10) DEFAULT '0' COMMENT '串点已发',
  `retention_count` int(10) DEFAULT NULL COMMENT '滞留票数',
  `present_count` int(10) DEFAULT NULL COMMENT '在场票数',
  `bar_operation_count` int(10) DEFAULT NULL COMMENT '应发票数',
  `warning_count` int(10) DEFAULT NULL COMMENT '预警票数',
  `late_count` int(10) DEFAULT NULL COMMENT '晚发票数',
  `no_bar_operation_count` int(10) DEFAULT NULL COMMENT '当天未发票数',
  `no_bar_operation_count_batch` int(10) DEFAULT NULL COMMENT '当班次未发票数',
  `already_bar_operation_count` int(10) DEFAULT NULL COMMENT '实发票数',
  `more_count` int(10) DEFAULT NULL COMMENT '多发票数',
  `network_bar_operation_count` int(10) DEFAULT NULL COMMENT '本网点实发票数',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `bar_operation_weight` double(17,3) DEFAULT NULL COMMENT '应发计费重量',
  `warning_weight` double(17,3) DEFAULT NULL COMMENT '预警计费重量',
  `already_bar_operation_weight` double(17,3) DEFAULT NULL COMMENT '实发计费重量',
  `network_bar_operation_weight` double(17,3) DEFAULT NULL COMMENT '本网点实发计费重量',
  `no_bar_operation_weight_batch` double(17,3) DEFAULT NULL COMMENT '当班次未发计费重量',
  `no_bar_operation_weight` double(17,3) DEFAULT NULL COMMENT '当天未发计费重量',
  `retention_weight` double(17,3) DEFAULT NULL COMMENT '滞留计费重量',
  `more_weight` double(17,3) DEFAULT NULL COMMENT '多发计费重量',
  `late_weight` double(17,3) DEFAULT NULL COMMENT '晚发计费重量',
  `present_weight` double(17,3) DEFAULT NULL COMMENT '在场计费重量',
  PRIMARY KEY (`id`,`pickup_batch_date`),
  KEY `idx_pickup_date` (`pickup_date`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING BTREE,
  KEY `idx_source_country_abb` (`source_country_abb`) USING BTREE,
  KEY `idx_source_dept` (`source_dept`) USING BTREE,
  KEY `idx_source_area` (`source_area`) USING BTREE,
  KEY `idx_source_city` (`source_city`) USING BTREE,
  KEY `idx_source_network` (`source_network`) USING BTREE,
  KEY `idx_pickup_batch` (`pickup_batch`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=110136591 DEFAULT CHARSET=utf8mb4 COMMENT='收件预警监控表'
/*!50500 PARTITION BY RANGE  COLUMNS(pickup_batch_date)
(PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION p20190107 VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `port_situation_detail` */

DROP TABLE IF EXISTS `port_situation_detail`;

CREATE TABLE `port_situation_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `arrival_port_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '到达口岸网点的日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_dept` varchar(30) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(30) DEFAULT NULL COMMENT '原寄地地区',
  `port_network` varchar(30) DEFAULT NULL COMMENT '口岸网点',
  `port_batch` varchar(30) DEFAULT NULL COMMENT '口岸班次',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `set_start_time` varchar(30) DEFAULT NULL COMMENT '规定开始时间',
  `latest_arrival_time` varchar(30) DEFAULT NULL COMMENT '最晚到达时间',
  `set_end_time` varchar(30) DEFAULT NULL COMMENT '规定结束时间',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `is_load_vehicle` int(1) DEFAULT '0' COMMENT '是否装车，0：未装车，1：已装车',
  `is_retention` int(1) DEFAULT NULL COMMENT '是否滞留，0：是，1：否',
  `arrival_port_to_load_days` int(5) DEFAULT '0' COMMENT '到达口岸至装车的天数',
  `arrival_port_to_flight_days` int(5) DEFAULT '0' COMMENT '到达口岸至航班执行的天数',
  `arrival_port_to_job_days` int(5) DEFAULT '0' COMMENT '到达口岸跟Job日期相差的天数',
  `is_already_real_match` int(1) DEFAULT NULL COMMENT '是否配载，0：是，1：否',
  `unload_dt` date DEFAULT NULL COMMENT '卸车日期',
  `unload_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_reason` varchar(200) DEFAULT NULL COMMENT '滞留原因',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  `port_sort` int(3) DEFAULT NULL COMMENT '口岸顺序',
  `port_total` int(3) DEFAULT NULL COMMENT '口岸总数',
  `through_port_network` varchar(300) DEFAULT NULL COMMENT '途径口岸网点',
  `match_flight_no` varchar(50) DEFAULT NULL COMMENT '配载航班号',
  `match_tm` datetime DEFAULT NULL COMMENT '配载时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`arrival_port_date`) USING BTREE,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE,
  KEY `idx_source_country_abb` (`source_country_abb`) USING BTREE,
  KEY `idx_source_dept` (`source_dept`) USING BTREE,
  KEY `idx_source_area` (`source_area`) USING BTREE,
  KEY `idx_port_network` (`port_network`) USING BTREE,
  KEY `idx_port_batch` (`port_batch`) USING BTREE,
  KEY `arrival_port_date` (`arrival_port_date`),
  KEY `arrival_port_date_2` (`arrival_port_date`)
) ENGINE=InnoDB AUTO_INCREMENT=9123 DEFAULT CHARSET=utf8 COMMENT='口岸概况明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(arrival_port_date)
(PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `port_situation_detail_back_20181126` */

DROP TABLE IF EXISTS `port_situation_detail_back_20181126`;

CREATE TABLE `port_situation_detail_back_20181126` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `arrival_port_date` date DEFAULT NULL COMMENT '到达口岸网点的日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_dept` varchar(30) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(30) DEFAULT NULL COMMENT '原寄地地区',
  `port_network` varchar(30) DEFAULT NULL COMMENT '口岸网点',
  `port_batch` varchar(30) DEFAULT NULL COMMENT '口岸班次',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `set_start_time` varchar(30) DEFAULT NULL COMMENT '规定开始时间',
  `latest_arrival_time` varchar(30) DEFAULT NULL COMMENT '最晚到达时间',
  `set_end_time` varchar(30) DEFAULT NULL COMMENT '规定结束时间',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `is_load_vehicle` int(1) DEFAULT '0' COMMENT '是否装车，0：未装车，1：已装车',
  `is_retention` int(1) DEFAULT NULL COMMENT '是否滞留，0：是，1：否',
  `arrival_port_to_load_days` int(5) DEFAULT '0' COMMENT '到达口岸至装车的天数',
  `arrival_port_to_flight_days` int(5) DEFAULT '0' COMMENT '到达口岸至航班执行的天数',
  `arrival_port_to_job_days` int(5) DEFAULT '0' COMMENT '到达口岸跟Job日期相差的天数',
  `is_already_real_match` int(1) DEFAULT NULL COMMENT '是否配载，0：是，1：否',
  `unload_dt` date DEFAULT NULL COMMENT '卸车日期',
  `unload_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_reason` varchar(200) DEFAULT NULL COMMENT '滞留原因',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  `port_sort` int(3) DEFAULT NULL COMMENT '口岸顺序',
  `port_total` int(3) DEFAULT NULL COMMENT '口岸总数',
  `through_port_network` varchar(300) DEFAULT NULL COMMENT '途径口岸网点',
  `match_flight_no` varchar(50) DEFAULT NULL COMMENT '配载航班号',
  `match_tm` datetime DEFAULT NULL COMMENT '配载时间',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique-main_waybill_no-port_network-unload_dt` (`main_waybill_no`,`port_network`,`unload_dt`) USING HASH COMMENT '运单号+口岸网点+卸车日期',
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_arrival_port_date` (`arrival_port_date`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_source_country_abb` (`source_country_abb`) USING HASH,
  KEY `idx_source_dept` (`source_dept`) USING HASH,
  KEY `idx_source_area` (`source_area`) USING HASH,
  KEY `idx_port_network` (`port_network`) USING HASH,
  KEY `idx_port_batch` (`port_batch`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=8869 DEFAULT CHARSET=utf8 COMMENT='口岸概况明细表';

/*Table structure for table `port_situation_monitor` */

DROP TABLE IF EXISTS `port_situation_monitor`;

CREATE TABLE `port_situation_monitor` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `arrival_port_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '到达口岸网点的日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_dept` varchar(30) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(30) DEFAULT NULL COMMENT '原寄地地区',
  `port_network` varchar(30) DEFAULT NULL COMMENT '口岸网点',
  `port_batch` varchar(30) DEFAULT NULL COMMENT '口岸班次',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `actual_arrival_count` int(10) DEFAULT NULL COMMENT '实际到件票数',
  `actual_arrival_weight` double(17,3) DEFAULT NULL COMMENT '实际到件计费重量',
  `already_load_count` int(10) DEFAULT NULL COMMENT '已装车票数',
  `already_load_weight` double(17,3) DEFAULT NULL COMMENT '已装车计费重量',
  `no_load_count` int(10) DEFAULT NULL COMMENT '未装车票数',
  `no_load_weight` double(17,3) DEFAULT NULL COMMENT '未装车计费重量',
  `retention_count` int(10) DEFAULT NULL COMMENT '滞留票数',
  `d0_load_count` int(10) DEFAULT NULL COMMENT 'D0装车票数',
  `d1_load_count` int(10) DEFAULT NULL COMMENT 'D1装车票数',
  `d2_load_count` int(10) DEFAULT NULL COMMENT 'D2装车票数',
  `d3_load_count` int(10) DEFAULT NULL COMMENT 'D3装车票数',
  `already_real_match_count` int(10) DEFAULT NULL COMMENT '已配载票数',
  `already_real_match_weight` double(17,3) DEFAULT NULL COMMENT '已配载计费重量',
  `d0_real_match_count` int(10) DEFAULT NULL COMMENT 'D0配载票数',
  `d1_real_match_count` int(10) DEFAULT NULL COMMENT 'D1配载票数',
  `d2_real_match_count` int(10) DEFAULT NULL COMMENT 'D2配载票数',
  `d3_real_match_count` int(10) DEFAULT NULL COMMENT 'D3配载票数',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`arrival_port_date`) USING BTREE,
  KEY `idx_source_country_abb` (`source_country_abb`) USING BTREE,
  KEY `idx_source_dept` (`source_dept`) USING BTREE,
  KEY `idx_source_area` (`source_area`) USING BTREE,
  KEY `idx_port_network` (`port_network`) USING BTREE,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING BTREE,
  KEY `idx_port_batch` (`port_batch`) USING BTREE,
  KEY `arrival_port_date` (`arrival_port_date`),
  KEY `arrival_port_date_2` (`arrival_port_date`)
) ENGINE=InnoDB AUTO_INCREMENT=412158 DEFAULT CHARSET=utf8 COMMENT='口岸概况监控表'
/*!50500 PARTITION BY RANGE  COLUMNS(arrival_port_date)
(PARTITION p20180920 VALUES LESS THAN ('2018-09-20') ENGINE = InnoDB,
 PARTITION p20181020 VALUES LESS THAN ('2018-10-20') ENGINE = InnoDB,
 PARTITION p20181120 VALUES LESS THAN ('2018-11-20') ENGINE = InnoDB,
 PARTITION p20191220 VALUES LESS THAN ('2018-12-20') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190220 VALUES LESS THAN ('2019-02-20') ENGINE = InnoDB,
 PARTITION p20190320 VALUES LESS THAN ('2019-03-20') ENGINE = InnoDB,
 PARTITION p20190420 VALUES LESS THAN ('2019-04-20') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190620 VALUES LESS THAN ('2019-06-20') ENGINE = InnoDB,
 PARTITION p20190720 VALUES LESS THAN ('2019-07-20') ENGINE = InnoDB,
 PARTITION p20190820 VALUES LESS THAN ('2019-08-20') ENGINE = InnoDB,
 PARTITION p20190920 VALUES LESS THAN ('2019-09-20') ENGINE = InnoDB,
 PARTITION p20191020 VALUES LESS THAN ('2019-10-20') ENGINE = InnoDB,
 PARTITION p20191120 VALUES LESS THAN ('2019-11-20') ENGINE = InnoDB,
 PARTITION p20191220cf929 VALUES LESS THAN ('2019-12-20') ENGINE = InnoDB,
 PARTITION p20200120 VALUES LESS THAN ('2020-01-20') ENGINE = InnoDB,
 PARTITION p20200220 VALUES LESS THAN ('2020-02-20') ENGINE = InnoDB,
 PARTITION p20200320 VALUES LESS THAN ('2020-03-20') ENGINE = InnoDB,
 PARTITION p20200420 VALUES LESS THAN ('2020-04-20') ENGINE = InnoDB,
 PARTITION p20200520 VALUES LESS THAN ('2020-05-20') ENGINE = InnoDB,
 PARTITION p20200620 VALUES LESS THAN ('2020-06-20') ENGINE = InnoDB,
 PARTITION p20200720 VALUES LESS THAN ('2020-07-20') ENGINE = InnoDB,
 PARTITION p20200820 VALUES LESS THAN ('2020-08-20') ENGINE = InnoDB,
 PARTITION p20200920 VALUES LESS THAN ('2020-09-20') ENGINE = InnoDB,
 PARTITION p20201020 VALUES LESS THAN ('2020-10-20') ENGINE = InnoDB,
 PARTITION p20201120 VALUES LESS THAN ('2020-11-20') ENGINE = InnoDB,
 PARTITION p20201220 VALUES LESS THAN ('2020-12-20') ENGINE = InnoDB,
 PARTITION p20210120 VALUES LESS THAN ('2021-01-20') ENGINE = InnoDB,
 PARTITION p20210220 VALUES LESS THAN ('2021-02-20') ENGINE = InnoDB,
 PARTITION p20210320 VALUES LESS THAN ('2021-03-20') ENGINE = InnoDB,
 PARTITION p20210420 VALUES LESS THAN ('2021-04-20') ENGINE = InnoDB,
 PARTITION p20210520 VALUES LESS THAN ('2021-05-20') ENGINE = InnoDB,
 PARTITION p20210620 VALUES LESS THAN ('2021-06-20') ENGINE = InnoDB,
 PARTITION p20210720 VALUES LESS THAN ('2021-07-20') ENGINE = InnoDB,
 PARTITION p20210820 VALUES LESS THAN ('2021-08-20') ENGINE = InnoDB,
 PARTITION p20210920 VALUES LESS THAN ('2021-09-20') ENGINE = InnoDB,
 PARTITION p20211020 VALUES LESS THAN ('2021-10-20') ENGINE = InnoDB,
 PARTITION p20211120 VALUES LESS THAN ('2021-11-20') ENGINE = InnoDB,
 PARTITION p20211220 VALUES LESS THAN ('2021-12-20') ENGINE = InnoDB,
 PARTITION p20220120 VALUES LESS THAN ('2022-01-20') ENGINE = InnoDB,
 PARTITION p20220220 VALUES LESS THAN ('2022-02-20') ENGINE = InnoDB,
 PARTITION p20220320 VALUES LESS THAN ('2022-03-20') ENGINE = InnoDB,
 PARTITION p20220420 VALUES LESS THAN ('2022-04-20') ENGINE = InnoDB,
 PARTITION p20220520 VALUES LESS THAN ('2022-05-20') ENGINE = InnoDB,
 PARTITION p20220620 VALUES LESS THAN ('2022-06-20') ENGINE = InnoDB,
 PARTITION p20220720 VALUES LESS THAN ('2022-07-20') ENGINE = InnoDB,
 PARTITION p20220820 VALUES LESS THAN ('2022-08-20') ENGINE = InnoDB,
 PARTITION p20220920 VALUES LESS THAN ('2022-09-20') ENGINE = InnoDB,
 PARTITION p20221020 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `port_situation_monitor_20181126` */

DROP TABLE IF EXISTS `port_situation_monitor_20181126`;

CREATE TABLE `port_situation_monitor_20181126` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `arrival_port_date` date DEFAULT NULL COMMENT '到达口岸网点的日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_dept` varchar(30) DEFAULT NULL COMMENT '原寄地本部',
  `source_area` varchar(30) DEFAULT NULL COMMENT '原寄地地区',
  `port_network` varchar(30) DEFAULT NULL COMMENT '口岸网点',
  `port_batch` varchar(30) DEFAULT NULL COMMENT '口岸班次',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `actual_arrival_count` int(10) DEFAULT NULL COMMENT '实际到件票数',
  `actual_arrival_weight` double(17,3) DEFAULT NULL COMMENT '实际到件计费重量',
  `already_load_count` int(10) DEFAULT NULL COMMENT '已装车票数',
  `already_load_weight` double(17,3) DEFAULT NULL COMMENT '已装车计费重量',
  `no_load_count` int(10) DEFAULT NULL COMMENT '未装车票数',
  `no_load_weight` double(17,3) DEFAULT NULL COMMENT '未装车计费重量',
  `retention_count` int(10) DEFAULT NULL COMMENT '滞留票数',
  `d0_load_count` int(10) DEFAULT NULL COMMENT 'D0装车票数',
  `d1_load_count` int(10) DEFAULT NULL COMMENT 'D1装车票数',
  `d2_load_count` int(10) DEFAULT NULL COMMENT 'D2装车票数',
  `d3_load_count` int(10) DEFAULT NULL COMMENT 'D3装车票数',
  `already_real_match_count` int(10) DEFAULT NULL COMMENT '已配载票数',
  `already_real_match_weight` double(17,3) DEFAULT NULL COMMENT '已配载计费重量',
  `d0_real_match_count` int(10) DEFAULT NULL COMMENT 'D0配载票数',
  `d1_real_match_count` int(10) DEFAULT NULL COMMENT 'D1配载票数',
  `d2_real_match_count` int(10) DEFAULT NULL COMMENT 'D2配载票数',
  `d3_real_match_count` int(10) DEFAULT NULL COMMENT 'D3配载票数',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_transfer_network_date` (`arrival_port_date`) USING BTREE,
  KEY `idx_source_country_abb` (`source_country_abb`) USING HASH,
  KEY `idx_source_dept` (`source_dept`) USING HASH,
  KEY `idx_source_area` (`source_area`) USING HASH,
  KEY `idx_port_network` (`port_network`) USING HASH,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_port_batch` (`port_batch`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=289884 DEFAULT CHARSET=utf8 COMMENT='口岸概况监控表';

/*Table structure for table `product_aging_detail` */

DROP TABLE IF EXISTS `product_aging_detail`;

CREATE TABLE `product_aging_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `send_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '寄件日期',
  `main_waybill_no` varchar(64) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '运单号',
  `customer_name` varchar(64) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '客户名称',
  `customer_acct_code` varchar(64) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '付款客户卡号',
  `layer_name` varchar(200) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '客户分层',
  `consigned_country` varchar(64) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '寄件国家',
  `consigned_dept` varchar(64) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '寄件本部',
  `consigned_area` varchar(64) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '寄件地区',
  `consigned_network_code` varchar(64) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '寄件网点',
  `dest_country` varchar(64) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '目的地国家',
  `dest_dept` varchar(64) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '目的地本部',
  `dest_area` varchar(64) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '目的地地区',
  `dest_network_code` varchar(64) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '目的地网点',
  `product_code` varchar(10) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '产品类型',
  `consign_content` varchar(64) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '托寄物内容',
  `cons_qty` int(11) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight_qty` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `source_consign_time` datetime DEFAULT NULL COMMENT '收件时间',
  `flight_departure_time` datetime DEFAULT NULL COMMENT '航班起飞时间',
  `flight_arrived_time` datetime DEFAULT NULL COMMENT '航班降落时间',
  `delivery_time` datetime DEFAULT NULL COMMENT '派送时间',
  `is_customs` varchar(10) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '正式报关。（取巴枪“16”显示正式报关，否则为空）',
  `aging_abnormal_count` int(11) unsigned zerofill DEFAULT '00000000000' COMMENT '时效异常次数',
  `pickup_aging_abnormal_count` int(2) DEFAULT NULL COMMENT '收件端异常次数',
  `transfer_aging_abnormal_count` int(2) DEFAULT NULL COMMENT '中转端异常次数',
  `delivery_aging_abnormal_count` int(2) DEFAULT NULL COMMENT '派件端异常次数',
  `oversea_port_aging_abnormal_count` int(2) DEFAULT NULL COMMENT '海外口岸异常次数',
  `product_aging_warnig_days` varchar(10) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '产品时效达成预警',
  `product_aging_standard` datetime DEFAULT NULL COMMENT '产品时效标准',
  `monitor_status` int(1) DEFAULT '0' COMMENT '监控状态 （0：无标准，1：未预警，2：已预警，3：已超时，4：已达成）',
  `mainland_consumed_hours` double(17,3) DEFAULT NULL COMMENT '大陆端耗时',
  `oversea_consumed_hours` double(17,3) DEFAULT NULL COMMENT '海外端耗时',
  `complaints_type` varchar(255) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '投诉类型',
  `is_complainted` int(1) DEFAULT '0' COMMENT '是否被投诉 （0：否，1：是）',
  `problem_area` varchar(255) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '责任地区',
  `work_order_start_tm` datetime DEFAULT NULL COMMENT '工单发起时间',
  `work_order_end_tm` datetime DEFAULT NULL COMMENT '工单结束时间',
  `newest_zone_code` varchar(32) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '当前网点',
  `newest_state` varchar(32) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '当前状态',
  `newest_opCode` varchar(32) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '当前节点',
  `newest_state_tm` datetime DEFAULT NULL COMMENT '当前状态时间',
  `consign_to_job_days` int(5) DEFAULT '0' COMMENT '寄件日期至跑Job相差的天数',
  `is_completed` int(1) DEFAULT '0' COMMENT '是否完结  （0：否，1：是）',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `wrong_reason_note` varchar(255) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '错误原因备注',
  PRIMARY KEY (`id`,`send_date`) USING BTREE,
  KEY `main_waybill_no` (`main_waybill_no`) USING BTREE,
  KEY `idx_customer_name` (`customer_name`) USING BTREE,
  KEY `idx_customer_acct_code` (`customer_acct_code`) USING BTREE,
  KEY `consigned_country` (`consigned_country`),
  KEY `consigned_dept` (`consigned_dept`),
  KEY `consigned_area` (`consigned_area`),
  KEY `consigned_network_code` (`consigned_network_code`),
  KEY `dest_country` (`dest_country`),
  KEY `dest_dept` (`dest_dept`),
  KEY `dest_area` (`dest_area`),
  KEY `dest_network_code` (`dest_network_code`),
  KEY `product_code` (`product_code`),
  KEY `monitor_status` (`monitor_status`),
  KEY `is_completed` (`is_completed`)
) ENGINE=InnoDB AUTO_INCREMENT=2529 DEFAULT CHARSET=utf8
/*!50500 PARTITION BY RANGE  COLUMNS(send_date)
(PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `public_notice` */

DROP TABLE IF EXISTS `public_notice`;

CREATE TABLE `public_notice` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `subject` varchar(200) DEFAULT NULL COMMENT '通告的主题',
  `content` varchar(2000) DEFAULT NULL COMMENT '内容',
  `valid_time` datetime DEFAULT NULL COMMENT '有效时间',
  `creator` varchar(100) DEFAULT NULL COMMENT '创建人',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  KEY `key_subject` (`subject`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8 COMMENT='通告';

/*Table structure for table `qrtz_blob_triggers` */

DROP TABLE IF EXISTS `qrtz_blob_triggers`;

CREATE TABLE `qrtz_blob_triggers` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `TRIGGER_NAME` varchar(200) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  `BLOB_DATA` blob,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  KEY `SCHED_NAME` (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  CONSTRAINT `qrtz_blob_triggers_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `qrtz_triggers` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `qrtz_calendars` */

DROP TABLE IF EXISTS `qrtz_calendars`;

CREATE TABLE `qrtz_calendars` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `CALENDAR_NAME` varchar(200) NOT NULL,
  `CALENDAR` blob NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`CALENDAR_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `qrtz_cron_triggers` */

DROP TABLE IF EXISTS `qrtz_cron_triggers`;

CREATE TABLE `qrtz_cron_triggers` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `TRIGGER_NAME` varchar(200) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  `CRON_EXPRESSION` varchar(120) NOT NULL,
  `TIME_ZONE_ID` varchar(80) DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  CONSTRAINT `qrtz_cron_triggers_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `qrtz_triggers` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `qrtz_fired_triggers` */

DROP TABLE IF EXISTS `qrtz_fired_triggers`;

CREATE TABLE `qrtz_fired_triggers` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `ENTRY_ID` varchar(95) NOT NULL,
  `TRIGGER_NAME` varchar(200) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  `INSTANCE_NAME` varchar(200) NOT NULL,
  `FIRED_TIME` bigint(13) NOT NULL,
  `SCHED_TIME` bigint(13) NOT NULL,
  `PRIORITY` int(11) NOT NULL,
  `STATE` varchar(16) NOT NULL,
  `JOB_NAME` varchar(200) DEFAULT NULL,
  `JOB_GROUP` varchar(200) DEFAULT NULL,
  `IS_NONCONCURRENT` varchar(1) DEFAULT NULL,
  `REQUESTS_RECOVERY` varchar(1) DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`ENTRY_ID`),
  KEY `IDX_QRTZ_FT_TRIG_INST_NAME` (`SCHED_NAME`,`INSTANCE_NAME`),
  KEY `IDX_QRTZ_FT_INST_JOB_REQ_RCVRY` (`SCHED_NAME`,`INSTANCE_NAME`,`REQUESTS_RECOVERY`),
  KEY `IDX_QRTZ_FT_J_G` (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_FT_JG` (`SCHED_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_FT_T_G` (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  KEY `IDX_QRTZ_FT_TG` (`SCHED_NAME`,`TRIGGER_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `qrtz_job_details` */

DROP TABLE IF EXISTS `qrtz_job_details`;

CREATE TABLE `qrtz_job_details` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `JOB_NAME` varchar(200) NOT NULL,
  `JOB_GROUP` varchar(200) NOT NULL,
  `DESCRIPTION` varchar(250) DEFAULT NULL,
  `JOB_CLASS_NAME` varchar(250) NOT NULL,
  `IS_DURABLE` varchar(1) NOT NULL,
  `IS_NONCONCURRENT` varchar(1) NOT NULL,
  `IS_UPDATE_DATA` varchar(1) NOT NULL,
  `REQUESTS_RECOVERY` varchar(1) NOT NULL,
  `JOB_DATA` blob,
  PRIMARY KEY (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_J_REQ_RECOVERY` (`SCHED_NAME`,`REQUESTS_RECOVERY`),
  KEY `IDX_QRTZ_J_GRP` (`SCHED_NAME`,`JOB_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `qrtz_locks` */

DROP TABLE IF EXISTS `qrtz_locks`;

CREATE TABLE `qrtz_locks` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `LOCK_NAME` varchar(40) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`LOCK_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `qrtz_paused_trigger_grps` */

DROP TABLE IF EXISTS `qrtz_paused_trigger_grps`;

CREATE TABLE `qrtz_paused_trigger_grps` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `qrtz_scheduler_state` */

DROP TABLE IF EXISTS `qrtz_scheduler_state`;

CREATE TABLE `qrtz_scheduler_state` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `INSTANCE_NAME` varchar(200) NOT NULL,
  `LAST_CHECKIN_TIME` bigint(13) NOT NULL,
  `CHECKIN_INTERVAL` bigint(13) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`INSTANCE_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `qrtz_simple_triggers` */

DROP TABLE IF EXISTS `qrtz_simple_triggers`;

CREATE TABLE `qrtz_simple_triggers` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `TRIGGER_NAME` varchar(200) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  `REPEAT_COUNT` bigint(7) NOT NULL,
  `REPEAT_INTERVAL` bigint(12) NOT NULL,
  `TIMES_TRIGGERED` bigint(10) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  CONSTRAINT `qrtz_simple_triggers_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `qrtz_triggers` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `qrtz_simprop_triggers` */

DROP TABLE IF EXISTS `qrtz_simprop_triggers`;

CREATE TABLE `qrtz_simprop_triggers` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `TRIGGER_NAME` varchar(200) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  `STR_PROP_1` varchar(512) DEFAULT NULL,
  `STR_PROP_2` varchar(512) DEFAULT NULL,
  `STR_PROP_3` varchar(512) DEFAULT NULL,
  `INT_PROP_1` int(11) DEFAULT NULL,
  `INT_PROP_2` int(11) DEFAULT NULL,
  `LONG_PROP_1` bigint(20) DEFAULT NULL,
  `LONG_PROP_2` bigint(20) DEFAULT NULL,
  `DEC_PROP_1` decimal(13,4) DEFAULT NULL,
  `DEC_PROP_2` decimal(13,4) DEFAULT NULL,
  `BOOL_PROP_1` varchar(1) DEFAULT NULL,
  `BOOL_PROP_2` varchar(1) DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  CONSTRAINT `qrtz_simprop_triggers_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `qrtz_triggers` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `qrtz_triggers` */

DROP TABLE IF EXISTS `qrtz_triggers`;

CREATE TABLE `qrtz_triggers` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `TRIGGER_NAME` varchar(200) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  `JOB_NAME` varchar(200) NOT NULL,
  `JOB_GROUP` varchar(200) NOT NULL,
  `DESCRIPTION` varchar(250) DEFAULT NULL,
  `NEXT_FIRE_TIME` bigint(13) DEFAULT NULL,
  `PREV_FIRE_TIME` bigint(13) DEFAULT NULL,
  `PRIORITY` int(11) DEFAULT NULL,
  `TRIGGER_STATE` varchar(16) NOT NULL,
  `TRIGGER_TYPE` varchar(8) NOT NULL,
  `START_TIME` bigint(13) NOT NULL,
  `END_TIME` bigint(13) DEFAULT NULL,
  `CALENDAR_NAME` varchar(200) DEFAULT NULL,
  `MISFIRE_INSTR` smallint(2) DEFAULT NULL,
  `JOB_DATA` blob,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  KEY `IDX_QRTZ_T_J` (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_T_JG` (`SCHED_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_T_C` (`SCHED_NAME`,`CALENDAR_NAME`),
  KEY `IDX_QRTZ_T_G` (`SCHED_NAME`,`TRIGGER_GROUP`),
  KEY `IDX_QRTZ_T_STATE` (`SCHED_NAME`,`TRIGGER_STATE`),
  KEY `IDX_QRTZ_T_N_STATE` (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`,`TRIGGER_STATE`),
  KEY `IDX_QRTZ_T_N_G_STATE` (`SCHED_NAME`,`TRIGGER_GROUP`,`TRIGGER_STATE`),
  KEY `IDX_QRTZ_T_NEXT_FIRE_TIME` (`SCHED_NAME`,`NEXT_FIRE_TIME`),
  KEY `IDX_QRTZ_T_NFT_ST` (`SCHED_NAME`,`TRIGGER_STATE`,`NEXT_FIRE_TIME`),
  KEY `IDX_QRTZ_T_NFT_MISFIRE` (`SCHED_NAME`,`MISFIRE_INSTR`,`NEXT_FIRE_TIME`),
  KEY `IDX_QRTZ_T_NFT_ST_MISFIRE` (`SCHED_NAME`,`MISFIRE_INSTR`,`NEXT_FIRE_TIME`,`TRIGGER_STATE`),
  KEY `IDX_QRTZ_T_NFT_ST_MISFIRE_GRP` (`SCHED_NAME`,`MISFIRE_INSTR`,`NEXT_FIRE_TIME`,`TRIGGER_GROUP`,`TRIGGER_STATE`),
  CONSTRAINT `qrtz_triggers_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `JOB_NAME`, `JOB_GROUP`) REFERENCES `qrtz_job_details` (`SCHED_NAME`, `JOB_NAME`, `JOB_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `redis_select_rules` */

DROP TABLE IF EXISTS `redis_select_rules`;

CREATE TABLE `redis_select_rules` (
  `id` int(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `select_param` varchar(100) DEFAULT NULL COMMENT '选择参数（国家、类型）',
  `master_name` varchar(100) DEFAULT NULL COMMENT '主机名（如：IBU_STMS_CORE_REDIS_C01）',
  `priority` varchar(2) DEFAULT NULL COMMENT '优先级(0>1>2>3)',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 COMMENT='根据select_param来区分将数据存到redis的哪个master';

/*Table structure for table `retention_num_detail` */

DROP TABLE IF EXISTS `retention_num_detail`;

CREATE TABLE `retention_num_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `country_abb` varchar(30) DEFAULT NULL COMMENT '国家简写',
  `dept_code` varchar(30) DEFAULT NULL COMMENT '经营本部代码',
  `area_code` varchar(30) DEFAULT NULL COMMENT '地区代码',
  `network_code` varchar(30) NOT NULL COMMENT '网点代码',
  `retention_tache` varchar(30) DEFAULT NULL COMMENT '滞留环节',
  `first_retention_length` int(5) DEFAULT NULL COMMENT '首次滞留时长',
  `last_retention_length` int(5) DEFAULT NULL COMMENT '最后滞留时长',
  `first_retention_days` int(5) DEFAULT NULL COMMENT '首次滞留天数',
  `last_retention_days` int(5) DEFAULT NULL COMMENT '最后滞留天数',
  `first_retention_dt` date NOT NULL COMMENT '首次滞留日期',
  `first_retention_tm` datetime NOT NULL COMMENT '首次滞留时间',
  `last_retention_tm` datetime NOT NULL COMMENT '最后滞留时间',
  `first_retention_reason` varchar(200) DEFAULT NULL COMMENT '首次滞留原因',
  `last_retention_reason` varchar(200) DEFAULT NULL COMMENT '最后滞留原因',
  `first_retention_op_code` varchar(50) DEFAULT NULL COMMENT '首次滞留操作码',
  `first_retention_op_name` varchar(50) DEFAULT NULL COMMENT '首次滞留操作名称',
  `retention_total_num` int(5) DEFAULT NULL COMMENT '滞留总次数',
  `finish_sign` varchar(30) DEFAULT NULL COMMENT '完结标志',
  `finish_network_code` varchar(30) DEFAULT NULL COMMENT '完结网点',
  `finish_tm` datetime DEFAULT NULL COMMENT '完结时间',
  `handle_aging` int(5) DEFAULT NULL COMMENT '处理时效',
  `is_finish` int(1) DEFAULT NULL COMMENT '是否完结,0:未完结，1:已完结',
  `retention_reasons` varchar(520) DEFAULT NULL COMMENT '处理备注',
  `customer_type` int(1) DEFAULT NULL COMMENT '客户分类 0:月结 1:散单',
  `is_handle` int(1) DEFAULT NULL COMMENT '是否处理 0:否 1:是',
  `account` varchar(20) DEFAULT NULL COMMENT '录入人工号',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `customer_acct_no` varchar(50) DEFAULT NULL COMMENT '月结卡号',
  `customs_mode` varchar(30) DEFAULT NULL COMMENT '报关模式',
  `customs_type` varchar(30) DEFAULT NULL COMMENT '报关类型',
  `last_retention_bar_code` varchar(50) DEFAULT NULL COMMENT '最新滞留巴枪',
  `last_retention_bar_op` varchar(50) DEFAULT NULL COMMENT '最新巴枪操作',
  PRIMARY KEY (`id`,`first_retention_dt`),
  KEY `idx_country_abb` (`country_abb`) USING HASH,
  KEY `idx_dept_code` (`dept_code`) USING HASH,
  KEY `idx_area_code` (`area_code`) USING HASH,
  KEY `idx_network_code` (`network_code`) USING HASH,
  KEY `idx_first_retention_length` (`first_retention_length`) USING HASH,
  KEY `idx_last_retention_length` (`last_retention_length`) USING HASH,
  KEY `idx_first_retention_tm` (`first_retention_tm`) USING BTREE,
  KEY `idx_last_retention_tm` (`last_retention_tm`) USING BTREE,
  KEY `idx_first_retention_reason` (`first_retention_reason`) USING HASH,
  KEY `idx_last_retention_reason` (`last_retention_reason`) USING HASH,
  KEY `idx_handle_aging` (`handle_aging`) USING HASH,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=1609 DEFAULT CHARSET=utf8 COMMENT='滞留件明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(first_retention_dt)
(PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN ('2019-11-04') ENGINE = InnoDB,
 PARTITION p20191111 VALUES LESS THAN ('2019-11-11') ENGINE = InnoDB,
 PARTITION p20191118 VALUES LESS THAN ('2019-11-18') ENGINE = InnoDB,
 PARTITION p20191125 VALUES LESS THAN ('2019-11-25') ENGINE = InnoDB,
 PARTITION p20191202 VALUES LESS THAN ('2019-12-02') ENGINE = InnoDB,
 PARTITION p20191209 VALUES LESS THAN ('2019-12-09') ENGINE = InnoDB,
 PARTITION p20191216 VALUES LESS THAN ('2019-12-16') ENGINE = InnoDB,
 PARTITION p20191223 VALUES LESS THAN ('2019-12-23') ENGINE = InnoDB,
 PARTITION p20191230 VALUES LESS THAN ('2019-12-30') ENGINE = InnoDB,
 PARTITION p20200106 VALUES LESS THAN ('2020-01-06') ENGINE = InnoDB,
 PARTITION p20200113 VALUES LESS THAN ('2020-01-13') ENGINE = InnoDB,
 PARTITION p20200120 VALUES LESS THAN ('2020-01-20') ENGINE = InnoDB,
 PARTITION p20200127 VALUES LESS THAN ('2020-01-27') ENGINE = InnoDB,
 PARTITION p20200203 VALUES LESS THAN ('2020-02-03') ENGINE = InnoDB,
 PARTITION p20200210 VALUES LESS THAN ('2020-02-10') ENGINE = InnoDB,
 PARTITION p20200217 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `retention_num_detail_backup20181205` */

DROP TABLE IF EXISTS `retention_num_detail_backup20181205`;

CREATE TABLE `retention_num_detail_backup20181205` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `country_abb` varchar(30) DEFAULT NULL COMMENT '国家简写',
  `dept_code` varchar(30) DEFAULT NULL COMMENT '经营本部代码',
  `area_code` varchar(30) DEFAULT NULL COMMENT '地区代码',
  `network_code` varchar(30) NOT NULL COMMENT '网点代码',
  `retention_tache` int(3) DEFAULT NULL COMMENT '滞留环节(1:分点部,2:中转场,3:关务,4:散航)',
  `first_retention_length` int(5) DEFAULT NULL COMMENT '首次滞留时长',
  `last_retention_length` int(5) DEFAULT NULL COMMENT '最后滞留时长',
  `first_retention_days` int(5) DEFAULT NULL COMMENT '首次滞留天数',
  `last_retention_days` int(5) DEFAULT NULL COMMENT '最后滞留天数',
  `first_retention_tm` datetime NOT NULL COMMENT '首次滞留时间',
  `last_retention_tm` datetime DEFAULT NULL COMMENT '最后滞留时间',
  `first_retention_reason` varchar(200) DEFAULT NULL COMMENT '首次滞留原因',
  `last_retention_reason` varchar(200) DEFAULT NULL COMMENT '最后滞留原因',
  `first_retention_op_code` varchar(50) DEFAULT NULL COMMENT '首次滞留操作码',
  `first_retention_op_name` varchar(50) DEFAULT NULL COMMENT '首次滞留操作名称',
  `retention_total_num` int(5) DEFAULT NULL COMMENT '滞留总次数',
  `finish_sign` varchar(30) DEFAULT NULL COMMENT '完结标志',
  `finish_network_code` varchar(30) DEFAULT NULL COMMENT '完结网点',
  `finish_tm` datetime DEFAULT NULL COMMENT '完结时间',
  `handle_aging` int(5) DEFAULT NULL COMMENT '处理时效',
  `is_finish` int(1) DEFAULT NULL COMMENT '是否完结,0:未完结，1:已完结',
  `retention_reasons` varchar(520) DEFAULT NULL COMMENT '滞留原因详情',
  `customer_type` int(1) DEFAULT NULL COMMENT '客户分类 0:月结 1:散单',
  `is_handle` int(1) DEFAULT NULL COMMENT '是否处理 0:否 1:是',
  `account` varchar(20) DEFAULT NULL COMMENT '录入人工号',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_comb_uk` (`main_waybill_no`,`network_code`,`first_retention_tm`) USING HASH,
  KEY `idx_country_abb` (`country_abb`) USING HASH,
  KEY `idx_dept_code` (`dept_code`) USING HASH,
  KEY `idx_area_code` (`area_code`) USING HASH,
  KEY `idx_network_code` (`network_code`) USING HASH,
  KEY `idx_retention_tache` (`retention_tache`) USING HASH,
  KEY `idx_first_retention_length` (`first_retention_length`) USING HASH,
  KEY `idx_last_retention_length` (`last_retention_length`) USING HASH,
  KEY `idx_first_retention_tm` (`first_retention_tm`) USING BTREE,
  KEY `idx_last_retention_tm` (`last_retention_tm`) USING BTREE,
  KEY `idx_first_retention_reason` (`first_retention_reason`) USING HASH,
  KEY `idx_last_retention_reason` (`last_retention_reason`) USING HASH,
  KEY `idx_handle_aging` (`handle_aging`) USING HASH,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=5143 DEFAULT CHARSET=utf8 COMMENT='滞留件明细表';

/*Table structure for table `retention_num_detail_backup20190306` */

DROP TABLE IF EXISTS `retention_num_detail_backup20190306`;

CREATE TABLE `retention_num_detail_backup20190306` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `country_abb` varchar(30) DEFAULT NULL COMMENT '国家简写',
  `dept_code` varchar(30) DEFAULT NULL COMMENT '经营本部代码',
  `area_code` varchar(30) DEFAULT NULL COMMENT '地区代码',
  `network_code` varchar(30) NOT NULL COMMENT '网点代码',
  `retention_tache` varchar(30) DEFAULT NULL COMMENT '滞留环节',
  `first_retention_length` int(5) DEFAULT NULL COMMENT '首次滞留时长',
  `last_retention_length` int(5) DEFAULT NULL COMMENT '最后滞留时长',
  `first_retention_days` int(5) DEFAULT NULL COMMENT '首次滞留天数',
  `last_retention_days` int(5) DEFAULT NULL COMMENT '最后滞留天数',
  `first_retention_tm` datetime NOT NULL COMMENT '首次滞留时间',
  `last_retention_tm` datetime DEFAULT NULL COMMENT '最后滞留时间',
  `first_retention_reason` varchar(200) DEFAULT NULL COMMENT '首次滞留原因',
  `last_retention_reason` varchar(200) DEFAULT NULL COMMENT '最后滞留原因',
  `first_retention_op_code` varchar(50) DEFAULT NULL COMMENT '首次滞留操作码',
  `first_retention_op_name` varchar(50) DEFAULT NULL COMMENT '首次滞留操作名称',
  `retention_total_num` int(5) DEFAULT NULL COMMENT '滞留总次数',
  `finish_sign` varchar(30) DEFAULT NULL COMMENT '完结标志',
  `finish_network_code` varchar(30) DEFAULT NULL COMMENT '完结网点',
  `finish_tm` datetime DEFAULT NULL COMMENT '完结时间',
  `handle_aging` int(5) DEFAULT NULL COMMENT '处理时效',
  `is_finish` int(1) DEFAULT NULL COMMENT '是否完结,0:未完结，1:已完结',
  `retention_reasons` varchar(520) DEFAULT NULL COMMENT '滞留原因详情',
  `customer_type` int(1) DEFAULT NULL COMMENT '客户分类 0:月结 1:散单',
  `is_handle` int(1) DEFAULT NULL COMMENT '是否处理 0:否 1:是',
  `account` varchar(20) DEFAULT NULL COMMENT '录入人工号',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_comb_uk` (`main_waybill_no`,`network_code`,`first_retention_tm`) USING HASH,
  KEY `idx_country_abb` (`country_abb`) USING HASH,
  KEY `idx_dept_code` (`dept_code`) USING HASH,
  KEY `idx_area_code` (`area_code`) USING HASH,
  KEY `idx_network_code` (`network_code`) USING HASH,
  KEY `idx_first_retention_length` (`first_retention_length`) USING HASH,
  KEY `idx_last_retention_length` (`last_retention_length`) USING HASH,
  KEY `idx_first_retention_tm` (`first_retention_tm`) USING BTREE,
  KEY `idx_last_retention_tm` (`last_retention_tm`) USING BTREE,
  KEY `idx_first_retention_reason` (`first_retention_reason`) USING HASH,
  KEY `idx_last_retention_reason` (`last_retention_reason`) USING HASH,
  KEY `idx_handle_aging` (`handle_aging`) USING HASH,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=2189 DEFAULT CHARSET=utf8 COMMENT='滞留件明细表';

/*Table structure for table `retention_num_sum` */

DROP TABLE IF EXISTS `retention_num_sum`;

CREATE TABLE `retention_num_sum` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `country_abb` varchar(30) DEFAULT NULL COMMENT '国家简写',
  `dept_code` varchar(30) DEFAULT NULL COMMENT '经营本部代码',
  `area_code` varchar(30) DEFAULT NULL COMMENT '地区代码',
  `network_code` varchar(30) DEFAULT NULL COMMENT '网点代码',
  `retention_tache` varchar(30) DEFAULT NULL COMMENT '滞留环节',
  `retention_dt` date DEFAULT NULL COMMENT '滞留日期',
  `retention_sum_count` int(5) DEFAULT NULL COMMENT '滞留总票数',
  `finished_count` int(5) DEFAULT NULL COMMENT '已完结票数',
  `no_finish_count` int(5) DEFAULT NULL COMMENT '未完结票数',
  `newest_retention` int(5) DEFAULT NULL COMMENT '最新滞留',
  `retention_1day` int(5) DEFAULT NULL COMMENT '滞留1天',
  `retention_2days` int(5) DEFAULT NULL COMMENT '滞留2天',
  `retention_3days` int(5) DEFAULT NULL COMMENT '滞留3天',
  `retention_4_6days` int(5) DEFAULT NULL COMMENT '滞留4-6天',
  `retention_7days` int(5) DEFAULT NULL COMMENT '滞留7天',
  `retention_8_25days` int(5) DEFAULT NULL COMMENT '滞留8-25天',
  `retention_gl_25days` int(5) DEFAULT NULL COMMENT '滞留25天以上',
  `first_or_last` int(1) DEFAULT NULL COMMENT '首次或者最后滞留标记，0：首次，1：最后',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  PRIMARY KEY (`id`),
  KEY `idx_country_abb` (`country_abb`) USING HASH,
  KEY `idx_dept_code` (`dept_code`) USING HASH,
  KEY `idx_area_code` (`area_code`) USING HASH,
  KEY `idx_network_code` (`network_code`) USING HASH,
  KEY `idx_retention_tache` (`retention_tache`) USING HASH,
  KEY `idx_retention_dt` (`retention_dt`) USING BTREE,
  KEY `idx_product_code` (`product_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=2272471 DEFAULT CHARSET=utf8 COMMENT='滞留件统计表';

/*Table structure for table `retention_reason` */

DROP TABLE IF EXISTS `retention_reason`;

CREATE TABLE `retention_reason` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `op_code` varchar(50) NOT NULL COMMENT '操作码',
  `retention_reason_code` varchar(50) NOT NULL COMMENT '滞留原因代码',
  `retention_reason_desc_cn` varchar(250) DEFAULT NULL COMMENT '滞留原因描述（中文）',
  `retention_reason_desc_en` varchar(250) DEFAULT NULL COMMENT '滞留原因描述（英文）',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_op_code-retention_reason_code` (`op_code`,`retention_reason_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=160 DEFAULT CHARSET=utf8mb4 COMMENT='滞留原因表';

/*Table structure for table `schdule_logs` */

DROP TABLE IF EXISTS `schdule_logs`;

CREATE TABLE `schdule_logs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `log` varchar(250) NOT NULL,
  `time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*Table structure for table `schedule_job` */

DROP TABLE IF EXISTS `schedule_job`;

CREATE TABLE `schedule_job` (
  `schedule_job_id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `job_name` varchar(200) DEFAULT NULL COMMENT '任务名称',
  `job_group` varchar(200) DEFAULT NULL COMMENT '任务分组',
  `clazz` varchar(500) DEFAULT NULL COMMENT '定时任务对应的类（包括包路径）',
  `job_status` varchar(2) DEFAULT NULL COMMENT '运行状态 1运行中 2已禁用',
  `cron_expression` varchar(200) DEFAULT NULL COMMENT '任务运行时间表达式',
  `time_value` int(11) DEFAULT NULL COMMENT '简单时间格式的值',
  `job_desc` varchar(500) DEFAULT NULL COMMENT '任务描述',
  `create_man` varchar(20) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `update_man` varchar(20) DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  `data_status` varchar(2) DEFAULT NULL COMMENT '操作状态 1.新增 2.修改 3.禁用',
  `handling_status` varchar(2) DEFAULT NULL COMMENT '加载状态 1.待完成 2.已完成',
  PRIMARY KEY (`schedule_job_id`),
  UNIQUE KEY `job_index` (`job_name`)
) ENGINE=InnoDB AUTO_INCREMENT=72 DEFAULT CHARSET=utf8;

/*Table structure for table `seem_lost_check_detailed` */

DROP TABLE IF EXISTS `seem_lost_check_detailed`;

CREATE TABLE `seem_lost_check_detailed` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `seem_lost_detailed_id` bigint(11) DEFAULT NULL COMMENT '疑似遗失明细的id',
  `insert_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '疑似遗失运单号',
  `last_op_network_code` varchar(50) DEFAULT NULL COMMENT '最后操作网点代码',
  `check_network_code` varchar(50) DEFAULT NULL COMMENT '核查网点代码',
  `check_result` varchar(50) DEFAULT NULL COMMENT '核查结果',
  `check_detailed` varchar(200) DEFAULT NULL COMMENT '核查详情',
  `check_account` varchar(50) DEFAULT NULL COMMENT '核查人工号',
  `check_time` datetime DEFAULT NULL COMMENT '核查时间',
  `check_enter_account` varchar(50) DEFAULT NULL COMMENT '核查录入人工号',
  `last_op_time` datetime DEFAULT NULL COMMENT '最后操作时间',
  PRIMARY KEY (`id`),
  KEY `index_seem_lost_detailed_id` (`seem_lost_detailed_id`) USING BTREE,
  KEY `index_insert_time` (`insert_time`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7548 DEFAULT CHARSET=utf8mb4 COMMENT='疑似遗失核查明细表';

/*Table structure for table `seem_lost_check_result_config` */

DROP TABLE IF EXISTS `seem_lost_check_result_config`;

CREATE TABLE `seem_lost_check_result_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `check_result` varchar(100) DEFAULT NULL COMMENT '核查结果（中文）',
  `check_result_en` varchar(300) DEFAULT NULL COMMENT '核查结果（英文）',
  `check_result_category` int(1) DEFAULT NULL COMMENT '核查结果分类（0：再预警，1：确认完结，2：确认遗失）',
  `warning_again_hour` double(6,1) DEFAULT NULL COMMENT '再次预警时长（小时）',
  `remarks` varchar(500) DEFAULT NULL COMMENT '备注',
  `enable_status` int(1) DEFAULT '0' COMMENT '是否有效(1:否，0;是)',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `index_check_result` (`check_result`) USING BTREE,
  KEY `index_update_time` (`update_time`),
  KEY `index_warning_again_status` (`check_result_category`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8mb4 COMMENT='疑似遗失核查结果配置表';

/*Table structure for table `seem_lost_detailed` */

DROP TABLE IF EXISTS `seem_lost_detailed`;

CREATE TABLE `seem_lost_detailed` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `insert_account` varchar(50) DEFAULT NULL COMMENT '插入数据用户名',
  `seem_lost_code` varchar(150) DEFAULT NULL COMMENT '疑似遗失代码',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `product_type` varchar(30) DEFAULT NULL COMMENT '产品类型',
  `warning_level` varchar(50) DEFAULT NULL COMMENT '预警等级',
  `handle_status` varchar(50) DEFAULT NULL COMMENT '处理状态（未处理、核查中、已核查未处理、遗失、完结）',
  `handle_status_ex` varchar(50) DEFAULT NULL COMMENT '额外处理状态（未处理、核查中、已核查未处理-->未处理；遗失、完结-->已处理）',
  `customer_level` varchar(50) DEFAULT NULL COMMENT '客户等级',
  `consign_content` text COMMENT '托寄物内容',
  `track_link` varchar(50) DEFAULT NULL COMMENT '路由环节（FVP节点配置中对应的路由环节）',
  `track_link_en` varchar(50) DEFAULT NULL COMMENT '路由环节（英文）',
  `lost_country_code` varchar(50) DEFAULT NULL COMMENT '遗失国家代码',
  `lost_country_name` varchar(50) DEFAULT NULL COMMENT '遗失国家名称（中文）',
  `lost_country_name_en` varchar(50) DEFAULT NULL COMMENT '遗失国家名称（英文）',
  `lost_city_code` varchar(50) DEFAULT NULL COMMENT '遗失城市代码',
  `lost_hq_code` varchar(50) DEFAULT NULL COMMENT '遗失本部代码',
  `lost_area_code` varchar(50) DEFAULT NULL COMMENT '遗失地区代码',
  `lost_network_code` varchar(50) DEFAULT NULL COMMENT '遗失网点代码',
  `last_op_network_code` varchar(50) DEFAULT NULL COMMENT '最后操作所在网点代码',
  `last_op_dispach_code` varchar(50) DEFAULT NULL COMMENT '最后操作班次编码',
  `last_op_code` varchar(50) DEFAULT NULL COMMENT '最后巴枪操作码',
  `last_op_name` varchar(50) DEFAULT NULL COMMENT '最后巴枪操作名称（FVP节点配置中对应的操作名称）',
  `last_op_name_en` varchar(50) DEFAULT NULL COMMENT '最后巴枪操作名称（英文）',
  `last_op_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '最后操作时间（最后一个路由的巴枪操作时间）',
  `seem_lost_minute` bigint(11) DEFAULT NULL COMMENT '疑似遗失的分钟数（当前系统时间 - 最后巴枪操作时间）',
  `seem_lost_days` bigint(11) DEFAULT NULL COMMENT '疑似遗失的天数（跨越00:00(按网点当地时间计算)的次数）',
  `oversea_seem_lost_time` datetime DEFAULT NULL COMMENT '海外疑似遗失时间点',
  `seem_lost_warning_time` datetime DEFAULT NULL COMMENT '疑似遗失预警时间',
  `seem_lost_warning_minute` bigint(11) DEFAULT NULL COMMENT '疑似遗失预警分钟',
  `seem_lost_warning_days` bigint(11) DEFAULT NULL COMMENT '疑似遗失预警天数',
  `abnormal_link` varchar(50) DEFAULT NULL COMMENT '异常环节',
  `valueadded_service` varchar(500) DEFAULT NULL COMMENT '增值服务',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `contnr_code` varchar(300) DEFAULT NULL COMMENT '车标号（容器号，30、31时为车标号）',
  `shipment_ref_timeline` datetime DEFAULT NULL COMMENT '快件参考时效(集成OMP)',
  `complaint_type` varchar(50) DEFAULT NULL COMMENT '投诉类型(集成数据, 逻辑待定)',
  `complaint_channel` varchar(50) DEFAULT NULL COMMENT '投诉渠道(集成数据, 逻辑待定)',
  `order_status` varchar(50) DEFAULT NULL COMMENT '工单状态(集成数据, 逻辑待定)',
  `check_network_code` varchar(50) DEFAULT NULL COMMENT '核查网点代码',
  `check_result` varchar(50) DEFAULT NULL COMMENT '核查结果',
  `check_detailed` varchar(200) DEFAULT NULL COMMENT '核查详情',
  `check_account` varchar(50) DEFAULT NULL COMMENT '核查人工号',
  `check_time` datetime DEFAULT NULL COMMENT '核查时间',
  `check_minute` bigint(11) DEFAULT NULL COMMENT '核查时长（疑似遗失产生时间点至最后核查时间的分钟）',
  `check_ontime_status` int(1) DEFAULT NULL COMMENT '核查是否及时（按核查时长是否未超出核查时效（6h, 可配置）判定，0：是，1：否）',
  `check_enter_account` varchar(50) DEFAULT NULL COMMENT '核查录入人工号',
  `check_count` bigint(11) DEFAULT NULL COMMENT '核查次数',
  `seem_lost_order_time` datetime DEFAULT NULL COMMENT '发起遗失工单时间',
  `op_attach_info` varchar(50) DEFAULT NULL COMMENT '线路编码',
  `seem_lost_time` datetime DEFAULT NULL COMMENT '疑似遗失时间',
  `newest_seem_lost_time` datetime DEFAULT NULL COMMENT '最新疑似遗失时间',
  `newest_seem_lost_minute` bigint(11) DEFAULT NULL COMMENT '最新疑似遗失分钟',
  `customer_name` varchar(100) DEFAULT NULL COMMENT '客户名称',
  `customer_card_code` varchar(30) DEFAULT NULL COMMENT '客户月结卡号',
  PRIMARY KEY (`id`,`last_op_time`),
  UNIQUE KEY `unique_waybill_no_op_code_op_time` (`waybill_no`,`last_op_code`,`last_op_time`) USING BTREE COMMENT '运单 + 操作码 + 操作时间 唯一',
  KEY `index_waybill_no` (`waybill_no`) USING BTREE,
  KEY `update_time` (`update_time`) USING BTREE,
  KEY `insert_time` (`insert_time`) USING BTREE,
  KEY `lost_network_code` (`lost_network_code`) USING BTREE,
  KEY `handle_status` (`handle_status`) USING BTREE,
  KEY `order_status` (`order_status`) USING BTREE,
  KEY `product_type` (`product_type`) USING BTREE,
  KEY `warning_level` (`warning_level`) USING BTREE,
  KEY `abnormal_link` (`abnormal_link`) USING BTREE,
  KEY `last_op_time` (`last_op_time`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2137 DEFAULT CHARSET=utf8mb4 COMMENT='疑似遗失明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(last_op_time)
(PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION p20190107 VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `seem_lost_detailed_20181227` */

DROP TABLE IF EXISTS `seem_lost_detailed_20181227`;

CREATE TABLE `seem_lost_detailed_20181227` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `insert_account` varchar(50) DEFAULT NULL COMMENT '插入数据用户名',
  `seem_lost_code` varchar(150) DEFAULT NULL COMMENT '疑似遗失代码',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `product_type` varchar(30) DEFAULT NULL COMMENT '产品类型',
  `warning_level` varchar(50) DEFAULT NULL COMMENT '预警等级',
  `handle_status` varchar(50) DEFAULT NULL COMMENT '处理状态（未处理、核查中、已核查未处理、遗失、完结）',
  `handle_status_ex` varchar(50) DEFAULT NULL COMMENT '额外处理状态（未处理、核查中、已核查未处理-->未处理；遗失、完结-->已处理）',
  `customer_level` varchar(50) DEFAULT NULL COMMENT '客户等级',
  `consign_content` text COMMENT '托寄物内容',
  `track_link` varchar(50) DEFAULT NULL COMMENT '路由环节（FVP节点配置中对应的路由环节）',
  `track_link_en` varchar(50) DEFAULT NULL COMMENT '路由环节（英文）',
  `lost_country_code` varchar(50) DEFAULT NULL COMMENT '遗失国家代码',
  `lost_country_name` varchar(50) DEFAULT NULL COMMENT '遗失国家名称（中文）',
  `lost_country_name_en` varchar(50) DEFAULT NULL COMMENT '遗失国家名称（英文）',
  `lost_city_code` varchar(50) DEFAULT NULL COMMENT '遗失城市代码',
  `lost_hq_code` varchar(50) DEFAULT NULL COMMENT '遗失本部代码',
  `lost_area_code` varchar(50) DEFAULT NULL COMMENT '遗失地区代码',
  `lost_network_code` varchar(50) DEFAULT NULL COMMENT '遗失网点代码',
  `last_op_network_code` varchar(50) DEFAULT NULL COMMENT '最后操作所在网点代码',
  `last_op_dispach_code` varchar(50) DEFAULT NULL COMMENT '最后操作班次编码',
  `last_op_code` varchar(50) DEFAULT NULL COMMENT '最后巴枪操作码',
  `last_op_name` varchar(50) DEFAULT NULL COMMENT '最后巴枪操作名称（FVP节点配置中对应的操作名称）',
  `last_op_name_en` varchar(50) DEFAULT NULL COMMENT '最后巴枪操作名称（英文）',
  `last_op_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '最后操作时间（最后一个路由的巴枪操作时间）',
  `seem_lost_minute` bigint(11) DEFAULT NULL COMMENT '疑似遗失的分钟数（当前系统时间 - 最后巴枪操作时间）',
  `seem_lost_days` bigint(11) DEFAULT NULL COMMENT '疑似遗失的天数（跨越00:00(按网点当地时间计算)的次数）',
  `oversea_seem_lost_time` datetime DEFAULT NULL COMMENT '海外疑似遗失时间点',
  `seem_lost_warning_time` datetime DEFAULT NULL COMMENT '疑似遗失预警时间',
  `seem_lost_warning_minute` bigint(11) DEFAULT NULL COMMENT '疑似遗失预警分钟',
  `seem_lost_warning_days` bigint(11) DEFAULT NULL COMMENT '疑似遗失预警天数',
  `abnormal_link` varchar(50) DEFAULT NULL COMMENT '异常环节',
  `valueadded_service` varchar(500) DEFAULT NULL COMMENT '增值服务',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `contnr_code` varchar(300) DEFAULT NULL COMMENT '车标号（容器号，30、31时为车标号）',
  `shipment_ref_timeline` datetime DEFAULT NULL COMMENT '快件参考时效(集成OMP)',
  `complaint_type` varchar(50) DEFAULT NULL COMMENT '投诉类型(集成数据, 逻辑待定)',
  `complaint_channel` varchar(50) DEFAULT NULL COMMENT '投诉渠道(集成数据, 逻辑待定)',
  `order_status` varchar(50) DEFAULT NULL COMMENT '工单状态(集成数据, 逻辑待定)',
  `check_network_code` varchar(50) DEFAULT NULL COMMENT '核查网点代码',
  `check_result` varchar(50) DEFAULT NULL COMMENT '核查结果',
  `check_detailed` varchar(200) DEFAULT NULL COMMENT '核查详情',
  `check_account` varchar(50) DEFAULT NULL COMMENT '核查人工号',
  `check_time` datetime DEFAULT NULL COMMENT '核查时间',
  `check_minute` bigint(11) DEFAULT NULL COMMENT '核查时长（疑似遗失产生时间点至最后核查时间的分钟）',
  `check_ontime_status` int(1) DEFAULT NULL COMMENT '核查是否及时（按核查时长是否未超出核查时效（6h, 可配置）判定，0：是，1：否）',
  `check_enter_account` varchar(50) DEFAULT NULL COMMENT '核查录入人工号',
  `check_count` bigint(11) DEFAULT NULL COMMENT '核查次数',
  `seem_lost_order_time` datetime DEFAULT NULL COMMENT '发起遗失工单时间',
  `op_attach_info` varchar(50) DEFAULT NULL COMMENT '线路编码',
  PRIMARY KEY (`id`,`last_op_time`),
  UNIQUE KEY `unique_waybill_no_op_code_op_time` (`waybill_no`,`last_op_code`,`last_op_time`) USING BTREE COMMENT '运单 + 操作码 + 操作时间 唯一',
  KEY `index_waybill_no` (`waybill_no`) USING BTREE,
  KEY `update_time` (`update_time`) USING BTREE,
  KEY `insert_time` (`insert_time`) USING BTREE,
  KEY `lost_network_code` (`lost_network_code`) USING BTREE,
  KEY `handle_status` (`handle_status`) USING BTREE,
  KEY `order_status` (`order_status`) USING BTREE,
  KEY `product_type` (`product_type`) USING BTREE,
  KEY `warning_level` (`warning_level`) USING BTREE,
  KEY `abnormal_link` (`abnormal_link`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COMMENT='疑似遗失明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(last_op_time)
(PARTITION p20180801 VALUES LESS THAN ('2018-08-01') ENGINE = InnoDB,
 PARTITION p20180901 VALUES LESS THAN ('2018-09-01') ENGINE = InnoDB,
 PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181101 VALUES LESS THAN ('2018-11-01') ENGINE = InnoDB,
 PARTITION p20181201 VALUES LESS THAN ('2018-12-01') ENGINE = InnoDB,
 PARTITION p20190101 VALUES LESS THAN ('2019-01-01') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190501 VALUES LESS THAN ('2019-05-01') ENGINE = InnoDB,
 PARTITION p20190601 VALUES LESS THAN ('2019-06-01') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `seem_lost_detailed_backup20181204` */

DROP TABLE IF EXISTS `seem_lost_detailed_backup20181204`;

CREATE TABLE `seem_lost_detailed_backup20181204` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `insert_account` varchar(50) DEFAULT NULL COMMENT '插入数据用户名',
  `seem_lost_code` varchar(150) DEFAULT NULL COMMENT '疑似遗失代码',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `product_type` varchar(30) DEFAULT NULL COMMENT '产品类型',
  `warning_level` varchar(50) DEFAULT NULL COMMENT '预警等级',
  `handle_status` varchar(50) DEFAULT NULL COMMENT '处理状态（未处理、核查中、已核查未处理、遗失、完结）',
  `handle_status_ex` varchar(50) DEFAULT NULL COMMENT '额外处理状态（未处理、核查中、已核查未处理-->未处理；遗失、完结-->已处理）',
  `customer_level` varchar(50) DEFAULT NULL COMMENT '客户等级',
  `consign_content` text COMMENT '托寄物内容',
  `track_link` varchar(50) DEFAULT NULL COMMENT '路由环节（FVP节点配置中对应的路由环节）',
  `track_link_en` varchar(50) DEFAULT NULL COMMENT '路由环节（英文）',
  `lost_country_code` varchar(50) DEFAULT NULL COMMENT '遗失国家代码',
  `lost_country_name` varchar(50) DEFAULT NULL COMMENT '遗失国家名称（中文）',
  `lost_country_name_en` varchar(50) DEFAULT NULL COMMENT '遗失国家名称（英文）',
  `lost_city_code` varchar(50) DEFAULT NULL COMMENT '遗失城市代码',
  `lost_hq_code` varchar(50) DEFAULT NULL COMMENT '遗失本部代码',
  `lost_area_code` varchar(50) DEFAULT NULL COMMENT '遗失地区代码',
  `lost_network_code` varchar(50) DEFAULT NULL COMMENT '遗失网点代码',
  `last_op_network_code` varchar(50) DEFAULT NULL COMMENT '最后操作所在网点代码',
  `last_op_dispach_code` varchar(50) DEFAULT NULL COMMENT '最后操作班次编码',
  `last_op_code` varchar(50) DEFAULT NULL COMMENT '最后巴枪操作码',
  `last_op_name` varchar(50) DEFAULT NULL COMMENT '最后巴枪操作名称（FVP节点配置中对应的操作名称）',
  `last_op_name_en` varchar(50) DEFAULT NULL COMMENT '最后巴枪操作名称（英文）',
  `last_op_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '最后操作时间（最后一个路由的巴枪操作时间）',
  `seem_lost_minute` bigint(11) DEFAULT NULL COMMENT '疑似遗失的分钟数（当前系统时间 - 最后巴枪操作时间）',
  `seem_lost_days` bigint(11) DEFAULT NULL COMMENT '疑似遗失的天数（跨越00:00(按网点当地时间计算)的次数）',
  `oversea_seem_lost_time` datetime DEFAULT NULL COMMENT '海外疑似遗失时间点',
  `seem_lost_warning_time` datetime DEFAULT NULL COMMENT '疑似遗失预警时间',
  `seem_lost_warning_minute` bigint(11) DEFAULT NULL COMMENT '疑似遗失预警分钟',
  `seem_lost_warning_days` bigint(11) DEFAULT NULL COMMENT '疑似遗失预警天数',
  `abnormal_link` varchar(50) DEFAULT NULL COMMENT '异常环节',
  `valueadded_service` varchar(500) DEFAULT NULL COMMENT '增值服务',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `contnr_code` varchar(300) DEFAULT NULL COMMENT '车标号（容器号，30、31时为车标号）',
  `shipment_ref_timeline` datetime DEFAULT NULL COMMENT '快件参考时效(集成OMP)',
  `complaint_type` varchar(50) DEFAULT NULL COMMENT '投诉类型(集成数据, 逻辑待定)',
  `complaint_channel` varchar(50) DEFAULT NULL COMMENT '投诉渠道(集成数据, 逻辑待定)',
  `order_status` varchar(50) DEFAULT NULL COMMENT '工单状态(集成数据, 逻辑待定)',
  `check_network_code` varchar(50) DEFAULT NULL COMMENT '核查网点代码',
  `check_result` varchar(50) DEFAULT NULL COMMENT '核查结果',
  `check_detailed` varchar(200) DEFAULT NULL COMMENT '核查详情',
  `check_account` varchar(50) DEFAULT NULL COMMENT '核查人工号',
  `check_time` datetime DEFAULT NULL COMMENT '核查时间',
  `check_minute` bigint(11) DEFAULT NULL COMMENT '核查时长（疑似遗失产生时间点至最后核查时间的分钟）',
  `check_ontime_status` int(1) DEFAULT NULL COMMENT '核查是否及时（按核查时长是否未超出核查时效（6h, 可配置）判定，0：是，1：否）',
  `check_enter_account` varchar(50) DEFAULT NULL COMMENT '核查录入人工号',
  `check_count` bigint(11) DEFAULT NULL COMMENT '核查次数',
  `seem_lost_order_time` datetime DEFAULT NULL COMMENT '发起遗失工单时间',
  `op_attach_info` varchar(50) DEFAULT NULL COMMENT '线路编码',
  PRIMARY KEY (`id`,`last_op_time`),
  UNIQUE KEY `unique_waybill_no_op_code_op_time` (`waybill_no`,`last_op_code`,`last_op_time`) USING BTREE COMMENT '运单 + 操作码 + 操作时间 唯一',
  KEY `index_waybill_no` (`waybill_no`) USING BTREE,
  KEY `update_time` (`update_time`) USING BTREE,
  KEY `insert_time` (`insert_time`) USING BTREE,
  KEY `lost_network_code` (`lost_network_code`) USING BTREE,
  KEY `handle_status` (`handle_status`) USING BTREE,
  KEY `order_status` (`order_status`) USING BTREE,
  KEY `product_type` (`product_type`) USING BTREE,
  KEY `warning_level` (`warning_level`) USING BTREE,
  KEY `abnormal_link` (`abnormal_link`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=33707 DEFAULT CHARSET=utf8mb4 COMMENT='疑似遗失明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(last_op_time)
(PARTITION p20180801 VALUES LESS THAN ('2018-08-01') ENGINE = InnoDB,
 PARTITION p20180901 VALUES LESS THAN ('2018-09-01') ENGINE = InnoDB,
 PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181101 VALUES LESS THAN ('2018-11-01') ENGINE = InnoDB,
 PARTITION p20181201 VALUES LESS THAN ('2018-12-01') ENGINE = InnoDB,
 PARTITION p20190101 VALUES LESS THAN ('2019-01-01') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190501 VALUES LESS THAN ('2019-05-01') ENGINE = InnoDB,
 PARTITION p20190601 VALUES LESS THAN ('2019-06-01') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `seem_lost_detailed_old` */

DROP TABLE IF EXISTS `seem_lost_detailed_old`;

CREATE TABLE `seem_lost_detailed_old` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `insert_account` varchar(50) DEFAULT NULL COMMENT '插入数据用户名',
  `seem_lost_code` varchar(150) DEFAULT NULL COMMENT '疑似遗失代码',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `product_type` varchar(30) DEFAULT NULL COMMENT '产品类型',
  `warning_level` varchar(50) DEFAULT NULL COMMENT '预警等级',
  `handle_status` varchar(50) DEFAULT NULL COMMENT '处理状态（未处理、核查中、已核查未处理、遗失、完结）',
  `handle_status_ex` varchar(50) DEFAULT NULL COMMENT '额外处理状态（未处理、核查中、已核查未处理-->未处理；遗失、完结-->已处理）',
  `customer_level` varchar(50) DEFAULT NULL COMMENT '客户等级',
  `consign_content` text COMMENT '托寄物内容',
  `track_link` varchar(50) DEFAULT NULL COMMENT '路由环节（FVP节点配置中对应的路由环节）',
  `track_link_en` varchar(50) DEFAULT NULL COMMENT '路由环节（英文）',
  `last_op_country_code` varchar(50) DEFAULT NULL COMMENT '最后操作国家代码',
  `last_op_country_name` varchar(50) DEFAULT NULL COMMENT '最后操作国家名称（中文）',
  `last_op_country_name_en` varchar(50) DEFAULT NULL COMMENT '最后操作国家名称（英文）',
  `last_op_hq_code` varchar(50) DEFAULT NULL COMMENT '最后操作本部代码',
  `last_op_area_code` varchar(50) DEFAULT NULL COMMENT '最后操作地区代码',
  `last_op_network_code` varchar(50) DEFAULT NULL COMMENT '最后操作所在网点代码',
  `last_op_dispach_code` varchar(50) DEFAULT NULL COMMENT '最后操作班次编码',
  `last_op_code` varchar(50) DEFAULT NULL COMMENT '最后巴枪操作码',
  `last_op_name` varchar(50) DEFAULT NULL COMMENT '最后巴枪操作名称（FVP节点配置中对应的操作名称）',
  `last_op_name_en` varchar(50) DEFAULT NULL COMMENT '最后巴枪操作名称（英文）',
  `last_op_time` datetime DEFAULT NULL COMMENT '最后操作时间（最后一个路由的巴枪操作时间）',
  `seem_lost_minute` bigint(11) DEFAULT NULL COMMENT '疑似遗失的分钟数（当前系统时间 - 最后巴枪操作时间）',
  `seem_lost_days` bigint(11) DEFAULT NULL COMMENT '疑似遗失的天数（跨越00:00(按网点当地时间计算)的次数）',
  `oversea_seem_lost_time` datetime DEFAULT NULL COMMENT '海外疑似遗失时间点',
  `seem_lost_warning_time` datetime DEFAULT NULL COMMENT '疑似遗失预警时间',
  `seem_lost_warning_minute` bigint(11) DEFAULT NULL COMMENT '疑似遗失预警分钟',
  `seem_lost_warning_days` bigint(11) DEFAULT NULL COMMENT '疑似遗失预警天数',
  `abnormal_link` varchar(50) DEFAULT NULL COMMENT '异常环节',
  `valueadded_service` varchar(500) DEFAULT NULL COMMENT '增值服务',
  `source_country_code` varchar(50) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地地区代码',
  `source_network_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `dest_country_code` varchar(50) DEFAULT NULL COMMENT '目的地国家代码',
  `dest_area_code` varchar(50) DEFAULT NULL COMMENT '目的地地区代码',
  `dest_network_code` varchar(50) DEFAULT NULL COMMENT '目的地网点代码',
  `contnr_code` varchar(300) DEFAULT NULL COMMENT '车标号（容器号，30、31时为车标号）',
  `shipment_ref_timeline` datetime DEFAULT NULL COMMENT '快件参考时效(集成OMP)',
  `complaint_type` varchar(50) DEFAULT NULL COMMENT '投诉类型(集成数据, 逻辑待定)',
  `complaint_channel` varchar(50) DEFAULT NULL COMMENT '投诉渠道(集成数据, 逻辑待定)',
  `order_status` varchar(50) DEFAULT NULL COMMENT '工单状态(集成数据, 逻辑待定)',
  `check_network_code` varchar(50) DEFAULT NULL COMMENT '核查网点代码',
  `check_result` varchar(50) DEFAULT NULL COMMENT '核查结果',
  `check_detailed` varchar(200) DEFAULT NULL COMMENT '核查详情',
  `check_account` varchar(50) DEFAULT NULL COMMENT '核查人工号',
  `check_time` datetime DEFAULT NULL COMMENT '核查时间',
  `check_minute` bigint(11) DEFAULT NULL COMMENT '核查时长（疑似遗失产生时间点至最后核查时间的分钟）',
  `check_ontime_status` int(1) DEFAULT NULL COMMENT '核查是否及时（按核查时长是否未超出核查时效（6h, 可配置）判定，0：是，1：否）',
  `check_enter_account` varchar(50) DEFAULT NULL COMMENT '核查录入人工号',
  `check_count` bigint(11) DEFAULT NULL COMMENT '核查次数',
  `seem_lost_order_time` datetime DEFAULT NULL COMMENT '发起遗失工单时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_waybill_no_op_code_op_time` (`waybill_no`,`last_op_code`,`last_op_time`) USING BTREE COMMENT '运单 + 操作码 + 操作时间 唯一',
  UNIQUE KEY `seem_lost_code` (`seem_lost_code`),
  KEY `index_waybill_no` (`waybill_no`),
  KEY `update_time` (`update_time`),
  KEY `insert_time` (`insert_time`),
  KEY `last_op_code` (`last_op_code`),
  KEY `warning_level` (`warning_level`),
  KEY `handle_status` (`handle_status`)
) ENGINE=InnoDB AUTO_INCREMENT=33643 DEFAULT CHARSET=utf8mb4 COMMENT='疑似遗失明细表';

/*Table structure for table `seem_lost_node_config` */

DROP TABLE IF EXISTS `seem_lost_node_config`;

CREATE TABLE `seem_lost_node_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `node_name` varchar(50) NOT NULL COMMENT '节点名称（中文）',
  `node_name_en` varchar(50) DEFAULT NULL COMMENT '节点名称（英文）',
  `warning_hour` double(8,2) DEFAULT NULL COMMENT '预警时长（小时）',
  `remarks` varchar(200) DEFAULT NULL COMMENT '备注',
  `enable_status` int(1) DEFAULT NULL COMMENT '是否有效（0：是，1：否）',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `product_type` varchar(30) DEFAULT NULL COMMENT '产品类型',
  `warning_start_day` int(5) DEFAULT NULL COMMENT '预警开始天数',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_node_type` (`node_name`,`product_type`) USING HASH COMMENT '节点名称+产品类型唯一索引',
  KEY `index_node_name` (`node_name`) USING HASH COMMENT '节点名称普通索引',
  KEY `index_node_name_en` (`node_name_en`) USING HASH COMMENT '节点英文名称普通索引'
) ENGINE=InnoDB AUTO_INCREMENT=140 DEFAULT CHARSET=utf8 COMMENT='疑似遗失节点配置表';

/*Table structure for table `seem_lost_summary` */

DROP TABLE IF EXISTS `seem_lost_summary`;

CREATE TABLE `seem_lost_summary` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间（系统时间）',
  `seem_lost_detailed_insert_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '疑似遗失明细产生日期',
  `lost_network_code` varchar(50) DEFAULT NULL COMMENT '遗失网点代码',
  `lost_area_code` varchar(50) DEFAULT NULL COMMENT '遗失地区代码',
  `lost_hq_code` varchar(50) DEFAULT NULL COMMENT '遗失本部代码',
  `lost_city_code` varchar(50) DEFAULT NULL COMMENT '遗失城市代码',
  `lost_country_code` varchar(50) DEFAULT NULL COMMENT '遗失国家代码',
  `lost_country` varchar(50) DEFAULT NULL COMMENT '遗失国家（中文）',
  `lost_country_en` varchar(50) DEFAULT NULL COMMENT '遗失国家（英文）',
  `handle_status` varchar(50) DEFAULT NULL COMMENT '处理状态',
  `order_status` varchar(50) DEFAULT NULL COMMENT '工单状态',
  `product_type` varchar(50) DEFAULT NULL COMMENT '产品类型',
  `count_warning_level_light` bigint(11) DEFAULT NULL COMMENT '统计疑似遗失等级轻微',
  `count_warning_level_normal` bigint(11) DEFAULT NULL COMMENT '统计疑似遗失等级一般',
  `count_warning_level_urgent` bigint(11) DEFAULT NULL COMMENT '统计疑似遗失等级紧急',
  `count_warning_level_serious` bigint(11) DEFAULT NULL COMMENT '统计疑似遗失等级严重',
  `count_total` bigint(11) DEFAULT NULL COMMENT '合计',
  PRIMARY KEY (`id`,`seem_lost_detailed_insert_date`),
  UNIQUE KEY `unique_seem_lost_detailed_insert_date` (`seem_lost_detailed_insert_date`,`lost_network_code`,`handle_status`,`order_status`,`product_type`) USING HASH COMMENT '产生日期 + 最后操作网点 + 处理状态 + 工单状态 + 产品类型 唯一',
  KEY `index_seem_lost_detailed_insert_date` (`seem_lost_detailed_insert_date`) USING BTREE,
  KEY `index_insert_time` (`insert_time`) USING BTREE,
  KEY `index_update_time` (`update_time`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4260912 DEFAULT CHARSET=utf8mb4 COMMENT='疑似遗失汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(seem_lost_detailed_insert_date)
(PARTITION p20180801 VALUES LESS THAN ('2018-08-01') ENGINE = InnoDB,
 PARTITION p20180901 VALUES LESS THAN ('2018-09-01') ENGINE = InnoDB,
 PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181101 VALUES LESS THAN ('2018-11-01') ENGINE = InnoDB,
 PARTITION p20181201 VALUES LESS THAN ('2018-12-01') ENGINE = InnoDB,
 PARTITION p20190101 VALUES LESS THAN ('2019-01-01') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN ('2019-03-01') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190501 VALUES LESS THAN ('2019-05-01') ENGINE = InnoDB,
 PARTITION p20190601 VALUES LESS THAN ('2019-06-01') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `seem_lost_summary_old` */

DROP TABLE IF EXISTS `seem_lost_summary_old`;

CREATE TABLE `seem_lost_summary_old` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `seem_lost_detailed_insert_date` date DEFAULT NULL COMMENT '疑似遗失明细产生日期',
  `last_op_network_code` varchar(50) DEFAULT NULL COMMENT '最后操作网点代码',
  `last_op_area_code` varchar(50) DEFAULT NULL COMMENT '最后操作地区代码',
  `last_op_hq_code` varchar(50) DEFAULT NULL COMMENT '最后操作本部代码',
  `last_op_country_code` varchar(50) DEFAULT NULL COMMENT '最后操作国家代码',
  `last_op_country` varchar(50) DEFAULT NULL COMMENT '最后操作国家（中文）',
  `last_op_country_en` varchar(50) DEFAULT NULL COMMENT '最后操作国家（英文）',
  `handle_status` varchar(50) DEFAULT NULL COMMENT '处理状态',
  `order_status` varchar(50) DEFAULT NULL COMMENT '工单状态',
  `product_type` varchar(50) DEFAULT NULL COMMENT '产品类型',
  `count_warning_level_light` bigint(11) DEFAULT NULL COMMENT '统计疑似遗失等级轻微',
  `count_warning_level_normal` bigint(11) DEFAULT NULL COMMENT '统计疑似遗失等级一般',
  `count_warning_level_urgent` bigint(11) DEFAULT NULL COMMENT '统计疑似遗失等级紧急',
  `count_warning_level_serious` bigint(11) DEFAULT NULL COMMENT '统计疑似遗失等级严重',
  `count_total` bigint(11) DEFAULT NULL COMMENT '合计',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_seem_lost_detailed_insert_date` (`seem_lost_detailed_insert_date`,`last_op_network_code`,`handle_status`,`order_status`,`product_type`) USING HASH COMMENT '产生日期 + 最后操作网点 + 处理状态 + 工单状态 + 产品类型 唯一',
  KEY `index_insert_time` (`insert_time`) USING BTREE,
  KEY `index_seem_lost_detailed_insert_date` (`seem_lost_detailed_insert_date`) USING BTREE,
  KEY `index_update_time` (`update_time`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4062037 DEFAULT CHARSET=utf8mb4 COMMENT='疑似遗失汇总表';

/*Table structure for table `seem_lost_warning_level_config` */

DROP TABLE IF EXISTS `seem_lost_warning_level_config`;

CREATE TABLE `seem_lost_warning_level_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `warning_level` varchar(50) DEFAULT NULL COMMENT '预警等级（中文）',
  `warning_level_en` varchar(50) DEFAULT NULL COMMENT '预警等级（英文）',
  `warning_level_standard_day_begin` bigint(11) DEFAULT NULL COMMENT '预警等级标准天数（开始）',
  `warning_level_standard_day_end` bigint(11) DEFAULT NULL COMMENT '预警等级标准天数（结束）',
  `remarks` varchar(200) DEFAULT NULL COMMENT '备注',
  `enable_status` int(11) DEFAULT NULL COMMENT '是否有效（0：是，1：否）',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `Unique_key` (`warning_level`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8 COMMENT='疑似遗失预警等级配置表';

/*Table structure for table `sheet1` */

DROP TABLE IF EXISTS `sheet1`;

CREATE TABLE `sheet1` (
  `运单号` varchar(255) DEFAULT NULL,
  `报关批次` varchar(255) DEFAULT NULL,
  `报关部门` varchar(255) DEFAULT NULL,
  `报关日期` varchar(255) DEFAULT NULL,
  `车次` varchar(255) DEFAULT NULL,
  `报关类型` varchar(255) DEFAULT NULL,
  `车牌/航班号` varchar(255) DEFAULT NULL,
  `主提单号` varchar(255) DEFAULT NULL,
  `件数` varchar(255) DEFAULT NULL,
  `实际重量` varchar(255) DEFAULT NULL,
  `托寄物内容` varchar(255) DEFAULT NULL,
  `申报价值` varchar(255) DEFAULT NULL,
  `付款方式` varchar(255) DEFAULT NULL,
  `收件地址邮政编码` varchar(255) DEFAULT NULL,
  `寄件公司` varchar(255) DEFAULT NULL,
  `寄件联络人` varchar(255) DEFAULT NULL,
  `寄件地址` varchar(255) DEFAULT NULL,
  `寄件城市名称` varchar(255) DEFAULT NULL,
  `寄件人州省` varchar(255) DEFAULT NULL,
  `寄件电话` varchar(255) DEFAULT NULL,
  `收件联络人` varchar(255) DEFAULT NULL,
  `收件公司` varchar(255) DEFAULT NULL,
  `收件地址` varchar(255) DEFAULT NULL,
  `收件城市` varchar(255) DEFAULT NULL,
  `收件州省` varchar(255) DEFAULT NULL,
  `收件国别地区代码` varchar(255) DEFAULT NULL,
  `收件电话` varchar(255) DEFAULT NULL,
  `子运单号` varchar(255) DEFAULT NULL,
  `创建时间` varchar(255) DEFAULT NULL,
  `数量/单位` varchar(255) DEFAULT NULL,
  `快件类型` varchar(255) DEFAULT NULL,
  `快件内容` varchar(255) DEFAULT NULL,
  `原始订单号` varchar(255) DEFAULT NULL,
  `商品编码` varchar(255) DEFAULT NULL,
  `寄件人国别地区代码` varchar(255) DEFAULT NULL,
  `原寄地代码` varchar(255) DEFAULT NULL,
  `目的地代码` varchar(255) DEFAULT NULL,
  `计费重量` varchar(255) DEFAULT NULL,
  `月结卡号` varchar(255) DEFAULT NULL,
  `入库时间` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `source_full_waybill` */

DROP TABLE IF EXISTS `source_full_waybill`;

CREATE TABLE `source_full_waybill` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `content` longtext COMMENT 'kafka全量订单内容',
  `create_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '入库时间',
  `handle_status` int(1) DEFAULT '0' COMMENT '处理状态 ，0：未处理 ,1：已处理 ，默认0。',
  `handle_time` datetime DEFAULT NULL COMMENT '处理时间',
  PRIMARY KEY (`id`,`create_time`),
  KEY `idx_waybill_no` (`waybill_no`) USING BTREE COMMENT '索引单号',
  KEY `idx_create_time` (`create_time`) USING BTREE COMMENT '索引入库时间',
  KEY `idx_handle_status` (`handle_status`) USING HASH,
  KEY `idx_handle_time` (`handle_time`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=1340635 DEFAULT CHARSET=utf8 COMMENT='全量运单原始数据'
/*!50100 PARTITION BY LIST (MONTH(create_time))
(PARTITION p1 VALUES IN (1) ENGINE = InnoDB,
 PARTITION p2 VALUES IN (2) ENGINE = InnoDB,
 PARTITION p3 VALUES IN (3) ENGINE = InnoDB,
 PARTITION p4 VALUES IN (4) ENGINE = InnoDB,
 PARTITION p5 VALUES IN (5) ENGINE = InnoDB,
 PARTITION p6 VALUES IN (6) ENGINE = InnoDB,
 PARTITION p7 VALUES IN (7) ENGINE = InnoDB,
 PARTITION p8 VALUES IN (8) ENGINE = InnoDB,
 PARTITION p9 VALUES IN (9) ENGINE = InnoDB,
 PARTITION p10 VALUES IN (10) ENGINE = InnoDB,
 PARTITION p11 VALUES IN (11) ENGINE = InnoDB,
 PARTITION p12 VALUES IN (12) ENGINE = InnoDB) */;

/*Table structure for table `stms_ais_send_and_get_task` */

DROP TABLE IF EXISTS `stms_ais_send_and_get_task`;

CREATE TABLE `stms_ais_send_and_get_task` (
  `task_id` varchar(20) NOT NULL COMMENT '任务ID,如：2018022700415',
  `send_date` varchar(30) DEFAULT NULL COMMENT '发货日期,格式“yyyy-mm-dd”如：2018-08-15',
  `transfer_batch` varchar(50) DEFAULT NULL COMMENT '发货中转批次',
  `main_number` varchar(15) DEFAULT NULL COMMENT '主运单号',
  `mark_number` varchar(100) DEFAULT NULL COMMENT '车标号',
  `line_coding` varchar(50) DEFAULT NULL COMMENT '线路编码',
  `actual_fly_date` varchar(30) DEFAULT NULL COMMENT '实际起飞日期,格式“yyyy-mm-dd”如：2018-08-15',
  `actual_fly_tm` int(10) DEFAULT NULL COMMENT '实际起飞时间,如1012',
  `send_weight` double(10,3) DEFAULT NULL COMMENT '发货重量',
  `charge_weight` double(10,3) DEFAULT NULL COMMENT '计费重量',
  `send_deliverly` int(10) DEFAULT NULL COMMENT '发货票数',
  `state` int(5) DEFAULT NULL COMMENT '任务状态：1）AIR中包含：1待执行任务、2接收任务、3离场、4到达货站、5已发货、6航班起飞、7航班到达、8提货开始、9提货结束、10离开货站、11到达中转场（完成）、12 已取消；2）TCMS状态(1未发货、2已发货、3已提货)',
  `transport_sate` varchar(30) DEFAULT NULL COMMENT '运力状态（中文）',
  `stand_type_1` int(5) DEFAULT NULL COMMENT '过站类型1(1经停   2转板)',
  `comfirm_send_tm` datetime DEFAULT NULL COMMENT '确认发货时间',
  `send_modifeid_tm` datetime DEFAULT NULL COMMENT '发货修改时间',
  `plane_type` varchar(30) DEFAULT NULL COMMENT '执飞机型',
  `capacity_name` varchar(50) DEFAULT NULL COMMENT '运力名称',
  `exception_type` int(5) DEFAULT NULL COMMENT '异常类型(0无,1提货，2发货，3发提货异常)',
  `capacity_names` varchar(200) DEFAULT NULL COMMENT '组合运力名称',
  `capacity_type` int(5) DEFAULT NULL COMMENT '运力类型:1 全货机,2 散航班',
  `send_dept_code` varchar(40) DEFAULT NULL COMMENT '发货网点代码',
  `plan_arrive_tm` int(10) DEFAULT NULL COMMENT '计划到达时间',
  `plan_depart_tm` int(10) DEFAULT NULL COMMENT '计划起飞时间',
  `delivery_bill_batch_no` varchar(50) DEFAULT NULL COMMENT '提货中转班次',
  `arrive_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市代码',
  `depart_city_code` varchar(30) DEFAULT NULL COMMENT '始发地城市代码',
  `send_belong_network_code` varchar(30) DEFAULT NULL COMMENT '发货归属网点代码',
  `get_belong_network_code` varchar(30) DEFAULT NULL COMMENT '提货归属网点代码',
  `depart_thr_letter_code` varchar(3) DEFAULT NULL COMMENT '始发地机场三字码',
  `arrive_thr_letter_code` varchar(3) DEFAULT NULL COMMENT '目的地机场三字码',
  `get_bill_date` varchar(30) DEFAULT NULL COMMENT '提货日期,格式“yyyy-mm-dd”如：2018-08-15',
  `get_bill_tm` int(10) DEFAULT NULL COMMENT '提货时间',
  `actual_arrive_date` varchar(30) DEFAULT NULL COMMENT '实际到达日期,格式“yyyy-mm-dd”如：2018-08-15',
  `actual_arrive_tm` int(10) DEFAULT NULL COMMENT '实际到达时间',
  `actual_tranfer_count` varchar(2000) DEFAULT NULL COMMENT '实际散货班次',
  `get_bill_weight` double(10,3) DEFAULT NULL COMMENT '提货重量',
  `get_bill_count` int(10) DEFAULT NULL COMMENT '提货件数',
  `comfirm_get_bill_tm` datetime DEFAULT NULL COMMENT '确认提货时间',
  `arrive_modified_tm` datetime DEFAULT NULL COMMENT '提货修改时间',
  `actual_trans_dt` varchar(30) DEFAULT NULL COMMENT '实际散货日期,格式“yyyy-mm-dd”如：2018-08-15',
  `arrive_dept_code` varchar(40) DEFAULT NULL COMMENT '提货网点代码',
  `cargo_type` int(5) DEFAULT NULL COMMENT '发货货物配载类型',
  `schedule_flight_type` int(5) DEFAULT NULL COMMENT '时效性航班类型:1 早航班,2 午航班,3 晚航班',
  `is_delete` int(5) DEFAULT NULL COMMENT '是否删除（1:是 0:否）',
  `synchronized_tm` datetime DEFAULT NULL COMMENT '同步时间',
  `stms_insert_tm` datetime DEFAULT NULL COMMENT 'stms系统入库时间',
  PRIMARY KEY (`task_id`),
  KEY `idx_main_number` (`main_number`) USING HASH,
  KEY `idx_actual_fly_date` (`actual_fly_date`) USING HASH,
  KEY `idx_depart_city_code` (`depart_city_code`) USING HASH,
  KEY `idx_arrive_city_code` (`arrive_city_code`) USING HASH,
  KEY `idx_actual_arrive_date` (`actual_arrive_date`) USING HASH,
  KEY `idx_stms_insert_tm` (`stms_insert_tm`) USING BTREE,
  KEY `idx_mark_number` (`mark_number`) USING HASH
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='AIS系统的发提货任务表';

/*Table structure for table `stms_ais_send_and_get_task_excp` */

DROP TABLE IF EXISTS `stms_ais_send_and_get_task_excp`;

CREATE TABLE `stms_ais_send_and_get_task_excp` (
  `id` bigint(22) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `task_id` varchar(40) CHARACTER SET utf8 DEFAULT NULL COMMENT '提发货任务ID',
  `exception_id` bigint(22) DEFAULT NULL COMMENT '提发货异常id',
  `process_result` int(1) DEFAULT NULL COMMENT '处理结果：1、转运，2、退运',
  `tranfer_date` varchar(30) CHARACTER SET utf8 DEFAULT NULL COMMENT '转运发货日期：格式“yyyy-mm-dd”如：2018-08-15',
  `exception_count` int(10) DEFAULT NULL COMMENT '异常件数',
  `exception_deliverly` int(10) DEFAULT NULL COMMENT '异常票数',
  `exception_weight` double(10,3) DEFAULT NULL COMMENT '异常重量',
  `remark` varchar(1500) CHARACTER SET utf8 DEFAULT NULL COMMENT '备注',
  `business_type` int(1) DEFAULT NULL COMMENT '业务类别：(1 提货、2发货)',
  `exception_dt` varchar(30) CHARACTER SET utf8 DEFAULT NULL COMMENT '异常日期：格式“yyyy-mm-dd”如：2018-08-15',
  `exception_module` varchar(500) CHARACTER SET utf8 DEFAULT NULL COMMENT '异常模块：【散航出港】可控因素--机场操作',
  `exception_result` varchar(500) CHARACTER SET utf8 DEFAULT NULL COMMENT '异常结果',
  `exception_cause` varchar(500) CHARACTER SET utf8 DEFAULT NULL COMMENT '异常原因',
  `capacity_type` int(1) DEFAULT NULL COMMENT '运力类型:1 全货机,2 散航班',
  `is_delete` int(1) DEFAULT NULL COMMENT '是否删除（1:是 0:否）',
  `synchronized_tm` datetime DEFAULT NULL COMMENT '同步时间',
  `insert_tm` datetime DEFAULT NULL COMMENT '插入时间',
  `update_tm` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_task_id_exception_id` (`task_id`,`exception_id`) USING BTREE,
  KEY `idx_task_id` (`task_id`) USING BTREE,
  KEY `idx_exception_id` (`exception_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1269 DEFAULT CHARSET=utf8mb4 COMMENT='AIS系统的发提货任务异常表';

/*Table structure for table `stms_ais_send_and_get_task_mark_number` */

DROP TABLE IF EXISTS `stms_ais_send_and_get_task_mark_number`;

CREATE TABLE `stms_ais_send_and_get_task_mark_number` (
  `id` int(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `task_id` varchar(30) NOT NULL COMMENT '任务ID,如：2018022700415',
  `mark_number` varchar(100) DEFAULT NULL COMMENT '车标号',
  `stms_insert_tm` datetime DEFAULT NULL COMMENT 'stms系统入库时间',
  PRIMARY KEY (`id`),
  KEY `idx_task_id` (`task_id`) USING HASH,
  KEY `idx_mark_number` (`mark_number`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=12134 DEFAULT CHARSET=utf8 COMMENT='AIS系统的发提货任务表关联的车标号表';

/*Table structure for table `stms_omp_pickup_depot_pc` */

DROP TABLE IF EXISTS `stms_omp_pickup_depot_pc`;

CREATE TABLE `stms_omp_pickup_depot_pc` (
  `id` bigint(18) NOT NULL COMMENT '主键ID',
  `created_tm` datetime DEFAULT NULL COMMENT '创建时间',
  `batch_code` varchar(30) DEFAULT NULL COMMENT '收件班次编码',
  `operate_zone_code` varchar(30) DEFAULT NULL COMMENT '操作网点',
  `begin_tm` varchar(30) DEFAULT NULL COMMENT '开始时间',
  `last_indepot_tm` varchar(30) DEFAULT NULL COMMENT '最晚到达时间',
  `end_tm` varchar(30) DEFAULT NULL COMMENT '结束时间',
  `work_day` varchar(30) DEFAULT NULL COMMENT '适用工作日',
  `pickphase_begin_tm` varchar(30) DEFAULT NULL COMMENT '收件开始时间',
  `pickphase_end_tm` varchar(30) DEFAULT NULL COMMENT '收件结束时间',
  `batch_no` int(2) DEFAULT NULL COMMENT '班次号',
  `version_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '版本日期',
  `network_country_abb` varchar(10) DEFAULT NULL COMMENT '网点对应的国家',
  PRIMARY KEY (`id`,`version_dt`),
  KEY `idx_operate_zone_code` (`operate_zone_code`) USING HASH,
  KEY `idx_batch_code` (`batch_code`) USING HASH,
  KEY `idx_work_day` (`work_day`) USING HASH,
  KEY `idx_network_country_abb` (`network_country_abb`) USING HASH,
  KEY `idx_version_dt` (`version_dt`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='OMP的收件仓库班次表'
/*!50100 PARTITION BY LIST (DAYOFYEAR(version_dt))
(PARTITION p1 VALUES IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30) ENGINE = InnoDB,
 PARTITION p2 VALUES IN (31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60) ENGINE = InnoDB,
 PARTITION p3 VALUES IN (61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90) ENGINE = InnoDB,
 PARTITION p4 VALUES IN (91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120) ENGINE = InnoDB,
 PARTITION p5 VALUES IN (121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150) ENGINE = InnoDB,
 PARTITION p6 VALUES IN (151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180) ENGINE = InnoDB,
 PARTITION p7 VALUES IN (181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210) ENGINE = InnoDB,
 PARTITION p8 VALUES IN (211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240) ENGINE = InnoDB,
 PARTITION p9 VALUES IN (241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270) ENGINE = InnoDB,
 PARTITION p10 VALUES IN (271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300) ENGINE = InnoDB,
 PARTITION p11 VALUES IN (301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330) ENGINE = InnoDB,
 PARTITION p12 VALUES IN (331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366) ENGINE = InnoDB) */;

/*Table structure for table `stms_omp_transfer_batch_pc` */

DROP TABLE IF EXISTS `stms_omp_transfer_batch_pc`;

CREATE TABLE `stms_omp_transfer_batch_pc` (
  `id` bigint(18) NOT NULL COMMENT '班次ID',
  `created_tm` datetime DEFAULT NULL COMMENT '创建时间',
  `batch_code` varchar(30) DEFAULT NULL COMMENT '中转班次编码',
  `batch_name` varchar(100) DEFAULT NULL COMMENT '中转班次名称',
  `transfer_level` varchar(30) DEFAULT NULL COMMENT '中转级别',
  `operate_zone_code` varchar(30) DEFAULT NULL COMMENT '操作网点',
  `begin_tm` varchar(30) DEFAULT NULL COMMENT '开始时间',
  `last_arrive_tm` varchar(30) DEFAULT NULL COMMENT '最晚到达时间',
  `end_tm` varchar(30) DEFAULT NULL COMMENT '结束时间',
  `work_day` varchar(30) DEFAULT NULL COMMENT '适用工作日',
  `distributed_type` varchar(2) DEFAULT NULL COMMENT '集散类型1：集货 ，2：散货，3：集散货',
  `version_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '版本日期',
  `coll_mark` varchar(30) DEFAULT NULL COMMENT '集货标签',
  `dist_mark` varchar(30) DEFAULT NULL COMMENT '散货标签',
  PRIMARY KEY (`id`,`version_dt`),
  KEY `idx_operate_zone_code` (`operate_zone_code`) USING HASH,
  KEY `idx_batch_code` (`batch_code`) USING HASH,
  KEY `idx_work_day` (`work_day`) USING HASH,
  KEY `idx_ov` (`version_dt`,`operate_zone_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='OMP的中转班次表'
/*!50500 PARTITION BY RANGE  COLUMNS(version_dt)
(PARTITION p20181201 VALUES LESS THAN ('2018-12-01') ENGINE = InnoDB,
 PARTITION p20181202 VALUES LESS THAN ('2018-12-02') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181204 VALUES LESS THAN ('2018-12-04') ENGINE = InnoDB,
 PARTITION p20181205 VALUES LESS THAN ('2018-12-05') ENGINE = InnoDB,
 PARTITION p20181206 VALUES LESS THAN ('2018-12-06') ENGINE = InnoDB,
 PARTITION p20181207 VALUES LESS THAN ('2018-12-07') ENGINE = InnoDB,
 PARTITION p20181208 VALUES LESS THAN ('2018-12-08') ENGINE = InnoDB,
 PARTITION p20181209 VALUES LESS THAN ('2018-12-09') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181211 VALUES LESS THAN ('2018-12-11') ENGINE = InnoDB,
 PARTITION p20181212 VALUES LESS THAN ('2018-12-12') ENGINE = InnoDB,
 PARTITION p20181213 VALUES LESS THAN ('2018-12-13') ENGINE = InnoDB,
 PARTITION p20181214 VALUES LESS THAN ('2018-12-14') ENGINE = InnoDB,
 PARTITION p20181215 VALUES LESS THAN ('2018-12-15') ENGINE = InnoDB,
 PARTITION p20181216 VALUES LESS THAN ('2018-12-16') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181218 VALUES LESS THAN ('2018-12-18') ENGINE = InnoDB,
 PARTITION p20181219 VALUES LESS THAN ('2018-12-19') ENGINE = InnoDB,
 PARTITION p20181220 VALUES LESS THAN ('2018-12-20') ENGINE = InnoDB,
 PARTITION p20181221 VALUES LESS THAN ('2018-12-21') ENGINE = InnoDB,
 PARTITION p20181222 VALUES LESS THAN ('2018-12-22') ENGINE = InnoDB,
 PARTITION p20181223 VALUES LESS THAN ('2018-12-23') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181225 VALUES LESS THAN ('2018-12-25') ENGINE = InnoDB,
 PARTITION p20181226 VALUES LESS THAN ('2018-12-26') ENGINE = InnoDB,
 PARTITION p20181227 VALUES LESS THAN ('2018-12-27') ENGINE = InnoDB,
 PARTITION p20181228 VALUES LESS THAN ('2018-12-28') ENGINE = InnoDB,
 PARTITION p20181229 VALUES LESS THAN ('2018-12-29') ENGINE = InnoDB,
 PARTITION p20181230 VALUES LESS THAN ('2018-12-30') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION p20190101 VALUES LESS THAN ('2019-01-01') ENGINE = InnoDB,
 PARTITION p20190102 VALUES LESS THAN ('2019-01-02') ENGINE = InnoDB,
 PARTITION p20190103 VALUES LESS THAN ('2019-01-03') ENGINE = InnoDB,
 PARTITION p20190104 VALUES LESS THAN ('2019-01-04') ENGINE = InnoDB,
 PARTITION p20190105 VALUES LESS THAN ('2019-01-05') ENGINE = InnoDB,
 PARTITION p20190106 VALUES LESS THAN ('2019-01-06') ENGINE = InnoDB,
 PARTITION p20190107 VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190108 VALUES LESS THAN ('2019-01-08') ENGINE = InnoDB,
 PARTITION p20190109 VALUES LESS THAN ('2019-01-09') ENGINE = InnoDB,
 PARTITION p20190110 VALUES LESS THAN ('2019-01-10') ENGINE = InnoDB,
 PARTITION p20190111 VALUES LESS THAN ('2019-01-11') ENGINE = InnoDB,
 PARTITION p20190112 VALUES LESS THAN ('2019-01-12') ENGINE = InnoDB,
 PARTITION p20190113 VALUES LESS THAN ('2019-01-13') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190115 VALUES LESS THAN ('2019-01-15') ENGINE = InnoDB,
 PARTITION p20190116 VALUES LESS THAN ('2019-01-16') ENGINE = InnoDB,
 PARTITION p20190117 VALUES LESS THAN ('2019-01-17') ENGINE = InnoDB,
 PARTITION p20190118 VALUES LESS THAN ('2019-01-18') ENGINE = InnoDB,
 PARTITION p20190119 VALUES LESS THAN ('2019-01-19') ENGINE = InnoDB,
 PARTITION p20190120 VALUES LESS THAN ('2019-01-20') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190122 VALUES LESS THAN ('2019-01-22') ENGINE = InnoDB,
 PARTITION p20190123 VALUES LESS THAN ('2019-01-23') ENGINE = InnoDB,
 PARTITION p20190124 VALUES LESS THAN ('2019-01-24') ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN ('2019-01-25') ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN ('2019-01-26') ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN ('2019-01-27') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN ('2019-01-29') ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN ('2019-01-30') ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN ('2019-01-31') ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN ('2019-02-01') ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN ('2019-02-02') ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN ('2019-02-03') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN ('2019-02-05') ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN ('2019-02-06') ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN ('2019-02-07') ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN ('2019-02-08') ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN ('2019-02-09') ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN ('2019-02-10') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB) */;

/*Table structure for table `stms_omp_transfer_batch_pc_bakup` */

DROP TABLE IF EXISTS `stms_omp_transfer_batch_pc_bakup`;

CREATE TABLE `stms_omp_transfer_batch_pc_bakup` (
  `id` bigint(18) NOT NULL COMMENT '班次ID',
  `created_tm` datetime DEFAULT NULL COMMENT '创建时间',
  `batch_code` varchar(30) DEFAULT NULL COMMENT '中转班次编码',
  `batch_name` varchar(100) DEFAULT NULL COMMENT '中转班次名称',
  `transfer_level` varchar(30) DEFAULT NULL COMMENT '中转级别',
  `operate_zone_code` varchar(30) DEFAULT NULL COMMENT '操作网点',
  `begin_tm` varchar(30) DEFAULT NULL COMMENT '开始时间',
  `last_arrive_tm` varchar(30) DEFAULT NULL COMMENT '最晚到达时间',
  `end_tm` varchar(30) DEFAULT NULL COMMENT '结束时间',
  `work_day` varchar(30) DEFAULT NULL COMMENT '适用工作日',
  `distributed_type` varchar(2) DEFAULT NULL COMMENT '集散类型1：集货 ，2：散货，3：集散货',
  `version_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '版本日期',
  `coll_mark` varchar(30) DEFAULT NULL COMMENT '集货标签',
  `dist_mark` varchar(30) DEFAULT NULL COMMENT '散货标签',
  PRIMARY KEY (`id`,`version_dt`),
  KEY `idx_operate_zone_code` (`operate_zone_code`) USING HASH,
  KEY `idx_batch_code` (`batch_code`) USING HASH,
  KEY `idx_work_day` (`work_day`) USING HASH
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='OMP的中转班次表'
/*!50100 PARTITION BY LIST (DAYOFYEAR(version_dt))
(PARTITION p1 VALUES IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30) ENGINE = InnoDB,
 PARTITION p2 VALUES IN (31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60) ENGINE = InnoDB,
 PARTITION p3 VALUES IN (61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90) ENGINE = InnoDB,
 PARTITION p4 VALUES IN (91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120) ENGINE = InnoDB,
 PARTITION p5 VALUES IN (121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150) ENGINE = InnoDB,
 PARTITION p6 VALUES IN (151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180) ENGINE = InnoDB,
 PARTITION p7 VALUES IN (181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210) ENGINE = InnoDB,
 PARTITION p8 VALUES IN (211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240) ENGINE = InnoDB,
 PARTITION p9 VALUES IN (241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270) ENGINE = InnoDB,
 PARTITION p10 VALUES IN (271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300) ENGINE = InnoDB,
 PARTITION p11 VALUES IN (301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330) ENGINE = InnoDB,
 PARTITION p12 VALUES IN (331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366) ENGINE = InnoDB) */;

/*Table structure for table `stms_omp_transport_batch_pc` */

DROP TABLE IF EXISTS `stms_omp_transport_batch_pc`;

CREATE TABLE `stms_omp_transport_batch_pc` (
  `id` bigint(18) NOT NULL COMMENT '线路ID',
  `created_tm` datetime DEFAULT NULL,
  `send_batch_code` varchar(180) DEFAULT NULL COMMENT '发出班次编码',
  `batch_code` varchar(180) DEFAULT NULL COMMENT '线路编码',
  `line_name` varchar(600) DEFAULT NULL COMMENT '名称',
  `line_desc` varchar(3000) DEFAULT NULL COMMENT '描述',
  `line_level` varchar(180) DEFAULT NULL COMMENT '线路等级类型编码,1-一级干线(跨省公路干线),2-二级干线(同省跨市公路干线),3-一级支线(同一城市内中转场与分点部-分部与分部之间公路线路),4-二级支线(同一城市同一分部的分部与点部-点部与点部的公路线路)；其它线路全部填0',
  `load_zone_code` varchar(180) DEFAULT NULL COMMENT '装车网点',
  `takegoods_zone_code` varchar(180) DEFAULT NULL COMMENT '提货/到场网点',
  `line_distance` double(10,3) DEFAULT NULL COMMENT '里程（KM）',
  `conveyance_name` varchar(180) DEFAULT NULL COMMENT '运力名称',
  `conveyance_type` varchar(180) DEFAULT NULL COMMENT '运力类型，代码具体为：1：全货机，2：散航班，3：铁路，4：干支线，5：水运',
  `conduct_type_code` varchar(180) DEFAULT NULL COMMENT '经营模式',
  `efficiency_type` varchar(180) DEFAULT NULL COMMENT '时效性航班类型',
  `util_type` varchar(180) DEFAULT NULL COMMENT '实用性航班类型',
  `plane_type` varchar(180) DEFAULT NULL COMMENT '机型',
  `load_capacity` double(10,3) DEFAULT NULL COMMENT '运力载量（KG）',
  `src_zone_code` varchar(180) DEFAULT NULL COMMENT '运力始发地',
  `dest_zone_code` varchar(180) DEFAULT NULL COMMENT '运力目的地',
  `work_day` varchar(180) DEFAULT NULL COMMENT '适用工作日',
  `separate_day` varchar(60) DEFAULT NULL COMMENT '时差天数',
  `disallow_tm` varchar(180) DEFAULT NULL COMMENT '截载时间',
  `depart_tm` varchar(180) DEFAULT NULL COMMENT '规定起飞/发车时间',
  `arrive_tm` varchar(180) DEFAULT NULL COMMENT '规定落地/到车时间',
  `takegoods_start_tm` varchar(180) DEFAULT NULL COMMENT '提货开始时间',
  `takegoods_end_tm` varchar(180) DEFAULT NULL COMMENT '提货结束时间',
  `takegoods_transport_time` int(10) DEFAULT NULL COMMENT '提货运输时长（分钟）',
  `takegoods_transport_distance` double(10,3) DEFAULT NULL COMMENT '提货运输距离（KM）',
  `next_node_code` varchar(180) DEFAULT NULL COMMENT '下一班次编码',
  `auth_zone_code` varchar(180) DEFAULT NULL COMMENT '权限网点',
  `shipment_transport_distance` double(10,3) DEFAULT NULL COMMENT '发货运输距离',
  `last_hand_tm` varchar(180) DEFAULT NULL COMMENT '最晚交货时间',
  `flights_indate` varchar(4000) DEFAULT NULL COMMENT '航班有效期',
  `last_arrive_tm` varchar(180) DEFAULT NULL COMMENT '最晚到车时间',
  `run_mode` varchar(180) DEFAULT NULL COMMENT '运行模式',
  `connect_poit_id` varchar(180) DEFAULT NULL COMMENT '串点标识',
  `next_node_work_day` varchar(180) DEFAULT NULL COMMENT '下一班次编码工作日',
  `version_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '版本日期',
  `custom_batch_set` varchar(500) DEFAULT NULL COMMENT '报关批次集合',
  `is_stopover` int(1) DEFAULT NULL COMMENT '是否经停:1:是,0:否',
  `load_zonecode_belong` varchar(30) DEFAULT NULL COMMENT '发货归属网点',
  `takegoods_zonecode_belong` varchar(30) DEFAULT NULL COMMENT '提货归属网点',
  `area_type` varchar(30) DEFAULT NULL COMMENT '区域类型',
  `is_admin` char(1) DEFAULT NULL COMMENT '是否超管0=非超管，1=超管',
  `customer_no` varchar(50) DEFAULT NULL COMMENT '客户编码',
  `car_quantity` varchar(100) DEFAULT NULL COMMENT '车辆数',
  `is_control` char(1) DEFAULT '0' COMMENT '代码是否管控：0=否，1=是',
  PRIMARY KEY (`id`,`version_dt`),
  KEY `conveyance_type` (`conveyance_type`) USING HASH,
  KEY `conveyance_name` (`conveyance_name`) USING HASH,
  KEY `work_day` (`work_day`) USING HASH,
  KEY `takegoods_zone_code` (`takegoods_zone_code`) USING HASH,
  KEY `load_zone_code` (`load_zone_code`) USING HASH,
  KEY `send_batch_code` (`send_batch_code`) USING HASH,
  KEY `batch_code` (`batch_code`) USING HASH,
  KEY `created_tm` (`created_tm`),
  KEY `version_dt` (`version_dt`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='OMP的运输班次'
/*!50100 PARTITION BY LIST (DAYOFYEAR(version_dt))
(PARTITION p1 VALUES IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30) ENGINE = InnoDB,
 PARTITION p2 VALUES IN (31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60) ENGINE = InnoDB,
 PARTITION p3 VALUES IN (61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90) ENGINE = InnoDB,
 PARTITION p4 VALUES IN (91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120) ENGINE = InnoDB,
 PARTITION p5 VALUES IN (121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150) ENGINE = InnoDB,
 PARTITION p6 VALUES IN (151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180) ENGINE = InnoDB,
 PARTITION p7 VALUES IN (181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210) ENGINE = InnoDB,
 PARTITION p8 VALUES IN (211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240) ENGINE = InnoDB,
 PARTITION p9 VALUES IN (241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270) ENGINE = InnoDB,
 PARTITION p10 VALUES IN (271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300) ENGINE = InnoDB,
 PARTITION p11 VALUES IN (301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330) ENGINE = InnoDB,
 PARTITION p12 VALUES IN (331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366) ENGINE = InnoDB) */;

/*Table structure for table `stms_omp_transport_motivation` */

DROP TABLE IF EXISTS `stms_omp_transport_motivation`;

CREATE TABLE `stms_omp_transport_motivation` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `trans_id` bigint(20) DEFAULT NULL COMMENT '主表ID',
  `custom_batch` varchar(100) DEFAULT NULL COMMENT '报关批次',
  `product_type_code` varchar(30) DEFAULT NULL COMMENT '产品类型',
  `cargo_area` varchar(4000) DEFAULT NULL COMMENT '配载-区域',
  `cargo_city` varchar(4000) DEFAULT NULL COMMENT '配载-城市',
  `cargo_dest` varchar(4000) DEFAULT NULL COMMENT '配载-网点',
  `version_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '版本',
  PRIMARY KEY (`id`,`version_dt`),
  KEY `trans_id` (`trans_id`),
  KEY `product_type_code` (`product_type_code`) USING HASH,
  KEY `custom_batch` (`custom_batch`),
  KEY `version_dt` (`version_dt`)
) ENGINE=InnoDB AUTO_INCREMENT=84307747 DEFAULT CHARSET=utf8mb4 COMMENT='OMP的运输班次关联表'
/*!50100 PARTITION BY LIST (DAYOFYEAR(version_dt))
(PARTITION p1 VALUES IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30) ENGINE = InnoDB,
 PARTITION p2 VALUES IN (31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60) ENGINE = InnoDB,
 PARTITION p3 VALUES IN (61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90) ENGINE = InnoDB,
 PARTITION p4 VALUES IN (91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120) ENGINE = InnoDB,
 PARTITION p5 VALUES IN (121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150) ENGINE = InnoDB,
 PARTITION p6 VALUES IN (151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180) ENGINE = InnoDB,
 PARTITION p7 VALUES IN (181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210) ENGINE = InnoDB,
 PARTITION p8 VALUES IN (211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240) ENGINE = InnoDB,
 PARTITION p9 VALUES IN (241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270) ENGINE = InnoDB,
 PARTITION p10 VALUES IN (271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300) ENGINE = InnoDB,
 PARTITION p11 VALUES IN (301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330) ENGINE = InnoDB,
 PARTITION p12 VALUES IN (331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366) ENGINE = InnoDB) */;

/*Table structure for table `stms_tcms_get_bill` */

DROP TABLE IF EXISTS `stms_tcms_get_bill`;

CREATE TABLE `stms_tcms_get_bill` (
  `id` bigint(18) NOT NULL COMMENT '主键id',
  `get_bill_date` datetime DEFAULT NULL COMMENT '提货日期',
  `get_bill_id` bigint(18) DEFAULT NULL COMMENT '提货id',
  `send_id` bigint(18) DEFAULT NULL COMMENT '发货id',
  `line_code` varchar(20) DEFAULT NULL COMMENT '线路编码',
  `capacity_name` varchar(40) DEFAULT NULL COMMENT '运力名称',
  `capacity_type` int(5) DEFAULT NULL COMMENT '运力类型:1 全货机,2 散航班,3 铁路,4 干支线,5 零担,6 大巴,7 水运',
  `mark_number` varchar(50) DEFAULT NULL COMMENT '车标号',
  `depart_city_code` varchar(30) DEFAULT NULL COMMENT '始发地城市代码',
  `arrive_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市代码',
  `actual_arrive_tm` datetime DEFAULT NULL COMMENT '实际落地时间',
  `flag` int(1) DEFAULT NULL COMMENT '操作类型:1 新增,2 修改,3 删除',
  `created_emp_code` varchar(10) DEFAULT NULL COMMENT '创建人',
  `created_tm` datetime DEFAULT NULL COMMENT '创建时间',
  `resource_info_id` bigint(18) DEFAULT NULL COMMENT '日常运力信息视图id',
  `main_number` varchar(15) DEFAULT NULL COMMENT '主运单号',
  `get_bill_tm` int(4) DEFAULT NULL COMMENT '提货时间',
  `transfer_count` varchar(50) DEFAULT NULL COMMENT '计划散货班次',
  `actual_tranfer_count` varchar(2000) DEFAULT NULL COMMENT '实际散货班次',
  `get_bill_type` int(1) DEFAULT NULL COMMENT '提货货物类型(1鲜活、2快件、3贵重物品、4普货、5电子类、6其它、7医药)',
  `get_bill_count` int(5) DEFAULT NULL COMMENT '提货件数',
  `get_bill_deliverly` int(5) DEFAULT NULL COMMENT '提货票数',
  `state` int(1) DEFAULT NULL COMMENT '状态(状态1已确认  2 未确认)',
  `transport_state` varchar(30) DEFAULT NULL COMMENT '运力状态',
  `has_expt` int(1) DEFAULT NULL COMMENT '是否有异常(1有 0无)',
  `is_check` int(1) DEFAULT NULL COMMENT '审核状态(1已审核 0未审核)',
  `remark` varchar(1500) DEFAULT NULL COMMENT '备注',
  `comfirm_get_bill_tm` datetime DEFAULT NULL COMMENT '确认提货时间',
  `modified_emp_code` varchar(10) DEFAULT NULL COMMENT '修改人',
  `modified_tm` datetime DEFAULT NULL COMMENT '修改时间',
  `supplier_id` bigint(18) DEFAULT NULL COMMENT '供应商id',
  `dept_id` bigint(20) DEFAULT NULL COMMENT '网点id',
  `actual_trans_dt` datetime DEFAULT NULL COMMENT '实际散货日期',
  `is_exception` int(1) DEFAULT NULL COMMENT '发货异常',
  `capacity_names` varchar(200) DEFAULT NULL COMMENT '组合运力名称',
  `arrive_city_name` varchar(100) DEFAULT NULL COMMENT '目的地城市名称',
  `depart_city_name` varchar(100) DEFAULT NULL COMMENT '始发地城市名称',
  `dept_name` varchar(200) DEFAULT NULL COMMENT '网点名称',
  `dept_code` varchar(40) DEFAULT NULL COMMENT '网点代码',
  `cargo_type` int(1) DEFAULT NULL COMMENT '发货货物配载类型,包括：1急件、2普货、3即日件、4鲜活、5超大件、6其它、8空舱销售、9包舱-大机型-普货、-4包舱-大机型-鲜活、-2包舱-小机型-普货、-3包舱-小机型-鲜活',
  `supplier_name` varchar(100) DEFAULT NULL COMMENT '供应商名称',
  `depart_city_py` varchar(50) DEFAULT NULL COMMENT '始发地城市名称拼音',
  `pre_arrive_tm` int(4) DEFAULT NULL COMMENT '预计到达时间',
  `pre_arrive_date` datetime DEFAULT NULL COMMENT '预计到达日期',
  `audit_tm` datetime DEFAULT NULL COMMENT '审核时间',
  `version` int(15) DEFAULT NULL COMMENT '版本号',
  `auditor` varchar(10) DEFAULT NULL COMMENT '审核人',
  `transport_state_en` varchar(100) DEFAULT NULL COMMENT '运力状态英文',
  `delivery_times` int(5) DEFAULT NULL COMMENT '提货趟数',
  `modify_state` int(1) DEFAULT NULL COMMENT '修改状态',
  `get_bill_weight` double(15,3) DEFAULT NULL COMMENT '提货重量',
  `charge_weight` double(15,3) DEFAULT NULL COMMENT '计费重量',
  `supplier_id_2` bigint(18) DEFAULT NULL COMMENT '供应商id2',
  `supplier_id_3` bigint(18) DEFAULT NULL COMMENT '供应商id3',
  `short_distance_count` bigint(12) DEFAULT NULL COMMENT '短驳趟数',
  `short_distance_weight` double(15,3) DEFAULT NULL COMMENT '短驳重量',
  `railway_wagon_count` double(15,3) DEFAULT NULL COMMENT '车皮数',
  `send_belong_network_code` varchar(30) DEFAULT NULL COMMENT '计划发货归属网点代码',
  `get_belong_network_code` varchar(30) DEFAULT NULL COMMENT '计划提货归属网点代码',
  `pre_distr_batch_no` varchar(2000) DEFAULT NULL COMMENT '预计散货班次',
  `pre_distr_date` datetime DEFAULT NULL COMMENT '预计散货日期',
  `planned_distr_date` datetime DEFAULT NULL COMMENT '计划散货日期',
  PRIMARY KEY (`id`),
  KEY `idx_stms_tcms_get_bill_cr_tm` (`created_tm`) USING BTREE,
  KEY `idx_main_number` (`main_number`) USING BTREE,
  KEY `key_get_bill_date` (`get_bill_date`) USING BTREE,
  KEY `key_line_code` (`line_code`) USING BTREE,
  KEY `key_city_code` (`depart_city_code`) USING BTREE,
  KEY `key_arrive_code` (`arrive_city_code`) USING BTREE,
  KEY `key_actual_arrive_tm` (`actual_arrive_tm`) USING BTREE,
  KEY `idx_modified_tm` (`modified_tm`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='提货接口表';

/*Table structure for table `stms_tcms_get_bill_filter` */

DROP TABLE IF EXISTS `stms_tcms_get_bill_filter`;

CREATE TABLE `stms_tcms_get_bill_filter` (
  `id` bigint(18) NOT NULL COMMENT '主键id',
  `get_bill_date` datetime DEFAULT NULL COMMENT '提货日期',
  `get_bill_id` bigint(18) DEFAULT NULL COMMENT '提货id',
  `send_id` bigint(18) DEFAULT NULL COMMENT '发货id',
  `line_code` varchar(20) DEFAULT NULL COMMENT '线路编码',
  `capacity_name` varchar(40) DEFAULT NULL COMMENT '运力名称',
  `capacity_type` int(5) DEFAULT NULL COMMENT '运力类型:1 全货机,2 散航班,3 铁路,4 干支线,5 零担,6 大巴,7 水运',
  `mark_number` varchar(50) DEFAULT NULL COMMENT '车标号',
  `depart_city_code` varchar(30) DEFAULT NULL COMMENT '始发地城市代码',
  `arrive_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市代码',
  `actual_arrive_tm` datetime DEFAULT NULL COMMENT '实际落地时间',
  `flag` int(1) DEFAULT NULL COMMENT '操作类型:1 新增,2 修改,3 删除',
  `created_emp_code` varchar(10) DEFAULT NULL COMMENT '创建人',
  `created_tm` datetime DEFAULT NULL COMMENT '创建时间',
  `resource_info_id` bigint(18) DEFAULT NULL COMMENT '日常运力信息视图id',
  `main_number` varchar(15) DEFAULT NULL COMMENT '主运单号',
  `get_bill_tm` int(4) DEFAULT NULL COMMENT '提货时间',
  `transfer_count` varchar(50) DEFAULT NULL COMMENT '计划散货班次',
  `actual_tranfer_count` varchar(2000) DEFAULT NULL COMMENT '实际散货班次',
  `get_bill_type` int(1) DEFAULT NULL COMMENT '提货货物类型(1鲜活、2快件、3贵重物品、4普货、5电子类、6其它、7医药)',
  `get_bill_count` int(5) DEFAULT NULL COMMENT '提货件数',
  `get_bill_deliverly` int(5) DEFAULT NULL COMMENT '提货票数',
  `state` int(1) DEFAULT NULL COMMENT '状态(状态1已确认  2 未确认)',
  `transport_state` varchar(30) DEFAULT NULL COMMENT '运力状态',
  `has_expt` int(1) DEFAULT NULL COMMENT '是否有异常(1有 0无)',
  `is_check` int(1) DEFAULT NULL COMMENT '审核状态(1已审核 0未审核)',
  `remark` varchar(1500) DEFAULT NULL COMMENT '备注',
  `comfirm_get_bill_tm` datetime DEFAULT NULL COMMENT '确认提货时间',
  `modified_emp_code` varchar(10) DEFAULT NULL COMMENT '修改人',
  `modified_tm` datetime DEFAULT NULL COMMENT '修改时间',
  `supplier_id` bigint(18) DEFAULT NULL COMMENT '供应商id',
  `dept_id` bigint(20) DEFAULT NULL COMMENT '网点id',
  `actual_trans_dt` datetime DEFAULT NULL COMMENT '实际散货日期',
  `is_exception` int(1) DEFAULT NULL COMMENT '发货异常',
  `capacity_names` varchar(200) DEFAULT NULL COMMENT '组合运力名称',
  `arrive_city_name` varchar(100) DEFAULT NULL COMMENT '目的地城市名称',
  `depart_city_name` varchar(100) DEFAULT NULL COMMENT '始发地城市名称',
  `dept_name` varchar(200) DEFAULT NULL COMMENT '网点名称',
  `dept_code` varchar(40) DEFAULT NULL COMMENT '网点代码',
  `cargo_type` int(1) DEFAULT NULL COMMENT '发货货物配载类型,包括：1急件、2普货、3即日件、4鲜活、5超大件、6其它、8空舱销售、9包舱-大机型-普货、-4包舱-大机型-鲜活、-2包舱-小机型-普货、-3包舱-小机型-鲜活',
  `supplier_name` varchar(100) DEFAULT NULL COMMENT '供应商名称',
  `depart_city_py` varchar(50) DEFAULT NULL COMMENT '始发地城市名称拼音',
  `pre_arrive_tm` int(4) DEFAULT NULL COMMENT '预计到达时间',
  `pre_arrive_date` datetime DEFAULT NULL COMMENT '预计到达日期',
  `audit_tm` datetime DEFAULT NULL COMMENT '审核时间',
  `version` int(15) DEFAULT NULL COMMENT '版本号',
  `auditor` varchar(10) DEFAULT NULL COMMENT '审核人',
  `transport_state_en` varchar(100) DEFAULT NULL COMMENT '运力状态英文',
  `delivery_times` int(5) DEFAULT NULL COMMENT '提货趟数',
  `modify_state` int(1) DEFAULT NULL COMMENT '修改状态',
  `get_bill_weight` double(15,3) DEFAULT NULL COMMENT '提货重量',
  `charge_weight` double(15,3) DEFAULT NULL COMMENT '计费重量',
  `supplier_id_2` bigint(18) DEFAULT NULL COMMENT '供应商id2',
  `supplier_id_3` bigint(18) DEFAULT NULL COMMENT '供应商id3',
  `short_distance_count` bigint(12) DEFAULT NULL COMMENT '短驳趟数',
  `short_distance_weight` double(15,3) DEFAULT NULL COMMENT '短驳重量',
  `railway_wagon_count` double(15,3) DEFAULT NULL COMMENT '车皮数',
  `send_belong_network_code` varchar(30) DEFAULT NULL COMMENT '计划发货归属网点代码',
  `get_belong_network_code` varchar(30) DEFAULT NULL COMMENT '计划提货归属网点代码',
  `pre_distr_batch_no` varchar(2000) DEFAULT NULL COMMENT '预计散货班次',
  `pre_distr_date` datetime DEFAULT NULL COMMENT '预计散货日期',
  `planned_distr_date` datetime DEFAULT NULL COMMENT '计划散货日期',
  PRIMARY KEY (`id`),
  KEY `idx_stms_tcms_get_bill_cr_tm` (`created_tm`) USING BTREE,
  KEY `idx_main_number` (`main_number`) USING BTREE,
  KEY `key_get_bill_date` (`get_bill_date`) USING BTREE,
  KEY `key_line_code` (`line_code`) USING BTREE,
  KEY `key_city_code` (`depart_city_code`) USING BTREE,
  KEY `key_arrive_code` (`arrive_city_code`) USING BTREE,
  KEY `key_actual_arrive_tm` (`actual_arrive_tm`) USING BTREE,
  KEY `idx_modified_tm` (`modified_tm`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='TCMS提货接口中间过滤表';

/*Table structure for table `stms_tcms_send` */

DROP TABLE IF EXISTS `stms_tcms_send`;

CREATE TABLE `stms_tcms_send` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `send_dt` datetime DEFAULT NULL COMMENT '发货日期',
  `send_id` bigint(18) DEFAULT NULL COMMENT '发货ID',
  `line_coding` varchar(50) DEFAULT NULL COMMENT '线路编码',
  `capacity_name` varchar(40) DEFAULT NULL COMMENT '运力名称',
  `capacity_type` int(1) DEFAULT NULL COMMENT '运力类型:1 全货机,2 散航班,3 铁路,4 干支线,5 零担,6 大巴,7 水运',
  `depart_city_code` varchar(30) DEFAULT NULL COMMENT '始发地城市代码',
  `arrive_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市代码',
  `depart_airport_code` varchar(10) DEFAULT NULL COMMENT '始发地机场三字码',
  `arrive_airport_code` varchar(10) DEFAULT NULL COMMENT '目的地机场三字码',
  `mark_number` varchar(4000) DEFAULT NULL COMMENT '车标号',
  `supplier_name` varchar(200) DEFAULT NULL COMMENT '供应商名称',
  `actual_fly_tm` int(4) DEFAULT NULL COMMENT '实际起飞时间',
  `send_weight` double(15,3) DEFAULT NULL COMMENT '发货重量',
  `flag` int(5) DEFAULT '0' COMMENT '操作类型:1 新增,2 修改,3 删除',
  `deal_flg` varchar(1) DEFAULT '0' COMMENT '同步飞友处理标识:0:未处理, 1:正在装载状态, 2:正在同步状态, 3:同步成功状态, 4:同步失败',
  `deal_ip` varchar(50) DEFAULT NULL COMMENT '同步飞友IP',
  `deal_count` int(4) DEFAULT '0' COMMENT '同步飞友次数',
  `deal_tm` datetime DEFAULT NULL COMMENT '同步飞友时间',
  `result` varchar(50) DEFAULT NULL COMMENT '同步飞友结果',
  `created_emp_code` varchar(10) DEFAULT NULL COMMENT '创建人',
  `created_tm` datetime DEFAULT NULL COMMENT '创建时间',
  `foc_exception` varchar(4000) DEFAULT NULL COMMENT '全货机异常',
  `foc_remark` varchar(1500) DEFAULT NULL COMMENT '全货机异常备注',
  `state` int(1) DEFAULT NULL COMMENT '状态(1未发货、2已发货、3已提货)',
  `actual_fly_date` datetime DEFAULT NULL COMMENT '实际起飞日期',
  `supplier_id` bigint(18) DEFAULT NULL COMMENT '供应商ID',
  `pre_depart_tm` int(4) DEFAULT NULL COMMENT '预计起飞时间',
  `resource_info_id` bigint(18) DEFAULT NULL COMMENT '日常运力信息视图ID',
  `transfer_batch` varchar(50) DEFAULT NULL COMMENT '发货中转批次',
  `main_number` varchar(15) DEFAULT NULL COMMENT '主运单号',
  `cargo_type` int(1) DEFAULT NULL COMMENT '货物配载类型(1 急件（舱位）、2普货、3即日件、4鲜活、5超大件、6其它、7医药)',
  `transfer_weight` bigint(15) DEFAULT NULL COMMENT '交接单重量',
  `charge_weight` bigint(15) DEFAULT NULL COMMENT '计费重量',
  `send_count` int(5) DEFAULT NULL COMMENT '发货件数',
  `send_deliverly` int(5) DEFAULT NULL COMMENT '发货票数',
  `state_audit` int(1) DEFAULT NULL COMMENT '审核状态(0草稿、1待审核、2已审核、3退回)',
  `transport_sate` varchar(30) DEFAULT NULL COMMENT '运力状态',
  `has_expt` int(1) DEFAULT NULL COMMENT '是否有异常(1有 0无)',
  `is_check` int(1) DEFAULT NULL COMMENT '审核状态(1已审核  0 未审核)',
  `stand_type_1` int(1) DEFAULT NULL COMMENT '过站类型1(1经停   2转板)',
  `stand_place_1` varchar(100) DEFAULT NULL COMMENT '过站地1',
  `stand_type_2` int(1) DEFAULT NULL COMMENT '过站类型2(1经停   2转板)',
  `stand_place_2` varchar(100) DEFAULT NULL COMMENT '过站地2',
  `remark` varchar(1500) DEFAULT NULL COMMENT '备注',
  `comfirm_send_tm` datetime DEFAULT NULL COMMENT '确认发货时间',
  `modified_emp_code` varchar(10) DEFAULT NULL COMMENT '修改人',
  `modifeid_tm` datetime DEFAULT NULL COMMENT '修改时间',
  `dept_id` bigint(20) DEFAULT NULL COMMENT '网点ID',
  `stand_supplier_id2` bigint(18) DEFAULT NULL COMMENT '过站地2供应商ID1',
  `stand_supplier_id1` bigint(18) DEFAULT NULL COMMENT '过站地1供应商ID1',
  `cargo_exception` varchar(4000) DEFAULT NULL COMMENT '全货机异常',
  `plane_type` varchar(30) DEFAULT NULL COMMENT '执飞机型',
  `bill_id` bigint(18) DEFAULT NULL COMMENT '提货ID',
  `has_exception` int(1) DEFAULT NULL COMMENT '提货异常(1有 0无)',
  `capacity_names` varchar(200) DEFAULT NULL COMMENT '组合运力名称',
  `arrive_city_name` varchar(100) DEFAULT NULL COMMENT '目的地城市名称',
  `depart_city_name` varchar(100) DEFAULT NULL COMMENT '始发地城市名称',
  `dept_name` varchar(200) DEFAULT NULL COMMENT '网点名称',
  `stand_place1_city_name` varchar(100) DEFAULT NULL COMMENT '过站地1城市名称',
  `stand_place2_city_name` varchar(100) DEFAULT NULL COMMENT '过站地2城市名称',
  `stand_place1_dept_code` varchar(40) DEFAULT NULL COMMENT '过站地1网点代码',
  `stand_place2_dept_code` varchar(40) DEFAULT NULL COMMENT '过站地2网点代码',
  `dept_code` varchar(40) DEFAULT NULL COMMENT '网点代码',
  `pre_arrive_tm` int(4) DEFAULT NULL COMMENT '预计到达时间',
  `delivery_bill_batch_no` varchar(50) DEFAULT NULL COMMENT '提货中转班次',
  `arrive_city_py` varchar(100) DEFAULT NULL COMMENT '目的地城市名称拼音',
  `depart_city_py` varchar(100) DEFAULT NULL COMMENT '始发地城市名称拼音',
  `is_transport` int(1) DEFAULT NULL COMMENT '是否是异常转机后新增的记录1是  0否',
  `audit_tm` datetime DEFAULT NULL COMMENT '审核时间',
  `auditor` varchar(10) DEFAULT NULL COMMENT '审核人',
  `mark` int(1) DEFAULT NULL COMMENT '标记(1导入   2新增)',
  `version` int(5) DEFAULT NULL COMMENT '版本号',
  `main_id` bigint(18) DEFAULT NULL COMMENT '拉货转机后原单发货id',
  `transport_sate_en` varchar(500) DEFAULT NULL COMMENT '运力状态英文',
  `send_times` int(5) DEFAULT NULL COMMENT '发货趟数',
  `modify_state` int(1) DEFAULT NULL COMMENT '修改状态(1已提交申请)',
  `util_type` varchar(10) DEFAULT NULL COMMENT '实用性运力类型 MFL/SFL/BFL',
  `return_remark` varchar(1500) DEFAULT NULL COMMENT '退运备注(returnGoodsTo:退运货物改配,Morningflight:早航班;Afternoonflight:午航班;Nightflight:晚航班)',
  `stand_place1_dept_id` bigint(18) DEFAULT NULL COMMENT '过站地1网点ID',
  `stand_place2_dept_id` bigint(18) DEFAULT NULL COMMENT '过站地2网点ID',
  `is_by_main_number` int(2) DEFAULT NULL COMMENT '是否按主运单结算：1.是，2.否',
  `stand_supplier_id2_2` bigint(18) DEFAULT NULL COMMENT '过站地2供应商ID2',
  `supplier_id_2` bigint(18) DEFAULT NULL COMMENT '供应商ID2',
  `stand_supplier_id1_2` bigint(18) DEFAULT NULL COMMENT '过站地1供应商ID2',
  `stand_supplier_id2_3` bigint(18) DEFAULT NULL COMMENT '过站地2供应商ID3',
  `supplier_id_3` bigint(18) DEFAULT NULL COMMENT '供应商ID3',
  `stand_supplier_id1_3` bigint(18) DEFAULT NULL COMMENT '过站地1供应商ID3',
  `short_distance_count` int(10) DEFAULT NULL COMMENT '短驳趟数',
  `short_distance_weight` double(15,1) DEFAULT NULL COMMENT '短驳重量',
  `railway_wagon_count` double(10,1) DEFAULT NULL COMMENT '车皮数',
  `parent_send_id` bigint(18) DEFAULT NULL COMMENT '原发货ID',
  `has_transfer_exception` int(1) DEFAULT '2' COMMENT '是否有转运异常1：有，2：否',
  `send_belong_network_code` varchar(30) DEFAULT NULL COMMENT '计划发货归属网点代码',
  `get_belong_network_code` varchar(30) DEFAULT NULL COMMENT '计划提货归属网点代码',
  `cg_deliverly` int(5) DEFAULT NULL COMMENT 'CG票数',
  `isac_deliverly` int(5) DEFAULT NULL COMMENT 'ISAC票数',
  `bg_attribution` varchar(300) DEFAULT NULL COMMENT 'BG 归属',
  `transfer_org_send_id` bigint(18) DEFAULT NULL COMMENT '转运发货原id（上一级的发货id）',
  PRIMARY KEY (`id`),
  KEY `idx_created_tm` (`created_tm`) USING BTREE,
  KEY `idx_main_number` (`main_number`) USING BTREE,
  KEY `key_send_dt` (`send_dt`) USING BTREE,
  KEY `key_depart_city_code` (`depart_city_code`) USING BTREE,
  KEY `key_arrive_city_code` (`arrive_city_code`) USING BTREE,
  KEY `key_actual_fly_tm` (`actual_fly_tm`) USING BTREE,
  KEY `idx_modifeid_tm` (`modifeid_tm`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5531328762 DEFAULT CHARSET=utf8 COMMENT='发货信息接口表';

/*Table structure for table `stms_tcms_send_filter` */

DROP TABLE IF EXISTS `stms_tcms_send_filter`;

CREATE TABLE `stms_tcms_send_filter` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `send_dt` datetime DEFAULT NULL COMMENT '发货日期',
  `send_id` bigint(18) DEFAULT NULL COMMENT '发货ID',
  `line_coding` varchar(50) DEFAULT NULL COMMENT '线路编码',
  `capacity_name` varchar(40) DEFAULT NULL COMMENT '运力名称',
  `capacity_type` int(1) DEFAULT NULL COMMENT '运力类型:1 全货机,2 散航班,3 铁路,4 干支线,5 零担,6 大巴,7 水运',
  `depart_city_code` varchar(30) DEFAULT NULL COMMENT '始发地城市代码',
  `arrive_city_code` varchar(30) DEFAULT NULL COMMENT '目的地城市代码',
  `depart_airport_code` varchar(10) DEFAULT NULL COMMENT '始发地机场三字码',
  `arrive_airport_code` varchar(10) DEFAULT NULL COMMENT '目的地机场三字码',
  `mark_number` varchar(4000) DEFAULT NULL COMMENT '车标号',
  `supplier_name` varchar(200) DEFAULT NULL COMMENT '供应商名称',
  `actual_fly_tm` int(4) DEFAULT NULL COMMENT '实际起飞时间',
  `send_weight` double(15,3) DEFAULT NULL COMMENT '发货重量',
  `flag` int(5) DEFAULT '0' COMMENT '操作类型:1 新增,2 修改,3 删除',
  `deal_flg` varchar(1) DEFAULT '0' COMMENT '同步飞友处理标识:0:未处理, 1:正在装载状态, 2:正在同步状态, 3:同步成功状态, 4:同步失败',
  `deal_ip` varchar(50) DEFAULT NULL COMMENT '同步飞友IP',
  `deal_count` int(4) DEFAULT '0' COMMENT '同步飞友次数',
  `deal_tm` datetime DEFAULT NULL COMMENT '同步飞友时间',
  `result` varchar(50) DEFAULT NULL COMMENT '同步飞友结果',
  `created_emp_code` varchar(10) DEFAULT NULL COMMENT '创建人',
  `created_tm` datetime DEFAULT NULL COMMENT '创建时间',
  `foc_exception` varchar(4000) DEFAULT NULL COMMENT '全货机异常',
  `foc_remark` varchar(1500) DEFAULT NULL COMMENT '全货机异常备注',
  `state` int(1) DEFAULT NULL COMMENT '状态(1未发货、2已发货、3已提货)',
  `actual_fly_date` datetime DEFAULT NULL COMMENT '实际起飞日期',
  `supplier_id` bigint(18) DEFAULT NULL COMMENT '供应商ID',
  `pre_depart_tm` int(4) DEFAULT NULL COMMENT '预计起飞时间',
  `resource_info_id` bigint(18) DEFAULT NULL COMMENT '日常运力信息视图ID',
  `transfer_batch` varchar(50) DEFAULT NULL COMMENT '发货中转批次',
  `main_number` varchar(15) DEFAULT NULL COMMENT '主运单号',
  `cargo_type` int(1) DEFAULT NULL COMMENT '货物配载类型(1 急件（舱位）、2普货、3即日件、4鲜活、5超大件、6其它、7医药)',
  `transfer_weight` bigint(15) DEFAULT NULL COMMENT '交接单重量',
  `charge_weight` bigint(15) DEFAULT NULL COMMENT '计费重量',
  `send_count` int(5) DEFAULT NULL COMMENT '发货件数',
  `send_deliverly` int(5) DEFAULT NULL COMMENT '发货票数',
  `state_audit` int(1) DEFAULT NULL COMMENT '审核状态(0草稿、1待审核、2已审核、3退回)',
  `transport_sate` varchar(30) DEFAULT NULL COMMENT '运力状态',
  `has_expt` int(1) DEFAULT NULL COMMENT '是否有异常(1有 0无)',
  `is_check` int(1) DEFAULT NULL COMMENT '审核状态(1已审核  0 未审核)',
  `stand_type_1` int(1) DEFAULT NULL COMMENT '过站类型1(1经停   2转板)',
  `stand_place_1` varchar(100) DEFAULT NULL COMMENT '过站地1',
  `stand_type_2` int(1) DEFAULT NULL COMMENT '过站类型2(1经停   2转板)',
  `stand_place_2` varchar(100) DEFAULT NULL COMMENT '过站地2',
  `remark` varchar(1500) DEFAULT NULL COMMENT '备注',
  `comfirm_send_tm` datetime DEFAULT NULL COMMENT '确认发货时间',
  `modified_emp_code` varchar(10) DEFAULT NULL COMMENT '修改人',
  `modifeid_tm` datetime DEFAULT NULL COMMENT '修改时间',
  `dept_id` bigint(20) DEFAULT NULL COMMENT '网点ID',
  `stand_supplier_id2` bigint(18) DEFAULT NULL COMMENT '过站地2供应商ID1',
  `stand_supplier_id1` bigint(18) DEFAULT NULL COMMENT '过站地1供应商ID1',
  `cargo_exception` varchar(4000) DEFAULT NULL COMMENT '全货机异常',
  `plane_type` varchar(30) DEFAULT NULL COMMENT '执飞机型',
  `bill_id` bigint(18) DEFAULT NULL COMMENT '提货ID',
  `has_exception` int(1) DEFAULT NULL COMMENT '提货异常(1有 0无)',
  `capacity_names` varchar(200) DEFAULT NULL COMMENT '组合运力名称',
  `arrive_city_name` varchar(100) DEFAULT NULL COMMENT '目的地城市名称',
  `depart_city_name` varchar(100) DEFAULT NULL COMMENT '始发地城市名称',
  `dept_name` varchar(200) DEFAULT NULL COMMENT '网点名称',
  `stand_place1_city_name` varchar(100) DEFAULT NULL COMMENT '过站地1城市名称',
  `stand_place2_city_name` varchar(100) DEFAULT NULL COMMENT '过站地2城市名称',
  `stand_place1_dept_code` varchar(40) DEFAULT NULL COMMENT '过站地1网点代码',
  `stand_place2_dept_code` varchar(40) DEFAULT NULL COMMENT '过站地2网点代码',
  `dept_code` varchar(40) DEFAULT NULL COMMENT '网点代码',
  `pre_arrive_tm` int(4) DEFAULT NULL COMMENT '预计到达时间',
  `delivery_bill_batch_no` varchar(50) DEFAULT NULL COMMENT '提货中转班次',
  `arrive_city_py` varchar(100) DEFAULT NULL COMMENT '目的地城市名称拼音',
  `depart_city_py` varchar(100) DEFAULT NULL COMMENT '始发地城市名称拼音',
  `is_transport` int(1) DEFAULT NULL COMMENT '是否是异常转机后新增的记录1是  0否',
  `audit_tm` datetime DEFAULT NULL COMMENT '审核时间',
  `auditor` varchar(10) DEFAULT NULL COMMENT '审核人',
  `mark` int(1) DEFAULT NULL COMMENT '标记(1导入   2新增)',
  `version` int(5) DEFAULT NULL COMMENT '版本号',
  `main_id` bigint(18) DEFAULT NULL COMMENT '拉货转机后原单发货id',
  `transport_sate_en` varchar(500) DEFAULT NULL COMMENT '运力状态英文',
  `send_times` int(5) DEFAULT NULL COMMENT '发货趟数',
  `modify_state` int(1) DEFAULT NULL COMMENT '修改状态(1已提交申请)',
  `util_type` varchar(10) DEFAULT NULL COMMENT '实用性运力类型 MFL/SFL/BFL',
  `return_remark` varchar(1500) DEFAULT NULL COMMENT '退运备注(returnGoodsTo:退运货物改配,Morningflight:早航班;Afternoonflight:午航班;Nightflight:晚航班)',
  `stand_place1_dept_id` bigint(18) DEFAULT NULL COMMENT '过站地1网点ID',
  `stand_place2_dept_id` bigint(18) DEFAULT NULL COMMENT '过站地2网点ID',
  `is_by_main_number` int(2) DEFAULT NULL COMMENT '是否按主运单结算：1.是，2.否',
  `stand_supplier_id2_2` bigint(18) DEFAULT NULL COMMENT '过站地2供应商ID2',
  `supplier_id_2` bigint(18) DEFAULT NULL COMMENT '供应商ID2',
  `stand_supplier_id1_2` bigint(18) DEFAULT NULL COMMENT '过站地1供应商ID2',
  `stand_supplier_id2_3` bigint(18) DEFAULT NULL COMMENT '过站地2供应商ID3',
  `supplier_id_3` bigint(18) DEFAULT NULL COMMENT '供应商ID3',
  `stand_supplier_id1_3` bigint(18) DEFAULT NULL COMMENT '过站地1供应商ID3',
  `short_distance_count` int(10) DEFAULT NULL COMMENT '短驳趟数',
  `short_distance_weight` double(15,1) DEFAULT NULL COMMENT '短驳重量',
  `railway_wagon_count` double(10,1) DEFAULT NULL COMMENT '车皮数',
  `parent_send_id` bigint(18) DEFAULT NULL COMMENT '原发货ID',
  `has_transfer_exception` int(1) DEFAULT '2' COMMENT '是否有转运异常1：有，2：否',
  `send_belong_network_code` varchar(30) DEFAULT NULL COMMENT '计划发货归属网点代码',
  `get_belong_network_code` varchar(30) DEFAULT NULL COMMENT '计划提货归属网点代码',
  `cg_deliverly` int(5) DEFAULT NULL COMMENT 'CG票数',
  `isac_deliverly` int(5) DEFAULT NULL COMMENT 'ISAC票数',
  `bg_attribution` varchar(300) DEFAULT NULL COMMENT 'BG 归属',
  `transfer_org_send_id` bigint(18) DEFAULT NULL COMMENT '转运发货原id（上一级的发货id）',
  PRIMARY KEY (`id`),
  KEY `idx_created_tm` (`created_tm`) USING BTREE,
  KEY `idx_main_number` (`main_number`) USING BTREE,
  KEY `key_send_dt` (`send_dt`) USING BTREE,
  KEY `key_depart_city_code` (`depart_city_code`) USING BTREE,
  KEY `key_arrive_city_code` (`arrive_city_code`) USING BTREE,
  KEY `key_actual_fly_tm` (`actual_fly_tm`) USING BTREE,
  KEY `idx_modifeid_tm` (`modifeid_tm`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=398933935 DEFAULT CHARSET=utf8 COMMENT='TCMS发货接口中间过滤表';

/*Table structure for table `stms_track` */

DROP TABLE IF EXISTS `stms_track`;

CREATE TABLE `stms_track` (
  `id` bigint(30) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `stms_insert_time` datetime NOT NULL COMMENT 'STMS后台系统插入数据库的时间',
  `mainWaybillNo` varchar(50) NOT NULL COMMENT '运单号',
  `waybillNo` varchar(50) DEFAULT NULL COMMENT '操作对象号码',
  `barScanTm` datetime NOT NULL COMMENT '巴枪扫描时间',
  `opCode` varchar(150) NOT NULL COMMENT '操作码',
  `status` int(8) DEFAULT NULL COMMENT '推断状态，0 推断可信，1 推断新增，2 推断可疑，3 推断临时，4 推断整车可信，5 推断单件可信，6 过程可疑，7 广播可疑，8 升格可信，9 升格新增',
  `dataStatus` int(8) DEFAULT NULL COMMENT '1 有效,2 无效',
  `ordinal` bigint(18) DEFAULT NULL COMMENT '序号',
  `createTm` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间timestamp',
  `barRecordId` varchar(50) DEFAULT NULL COMMENT '数据的唯一编码',
  `zoneCode` varchar(100) DEFAULT NULL COMMENT '操作网点',
  `opAttachInfo` varchar(250) DEFAULT NULL COMMENT '操作附加信息',
  `courierCode` varchar(150) DEFAULT NULL COMMENT '收派员工号',
  `barOprCode` varchar(150) DEFAULT NULL COMMENT '操作员工号',
  `barUploadTm` datetime DEFAULT NULL COMMENT '巴枪上传时间',
  `objTypeCode` varchar(150) DEFAULT NULL COMMENT '操作对象类型',
  `contnrCode` varchar(250) DEFAULT NULL COMMENT '容器号',
  `payFlg` int(11) DEFAULT NULL COMMENT '是否已付款标识',
  `stayWhyCode` varchar(200) DEFAULT NULL COMMENT '滞留原因代码',
  `subbillPieceQty` int(11) DEFAULT NULL COMMENT '件数（字母件中的子件数量）',
  `barUploadTypeCode` int(11) DEFAULT NULL COMMENT '巴枪输入方法',
  `weightQty` decimal(10,4) DEFAULT NULL COMMENT '计费重量',
  `feeAmt` decimal(20,8) DEFAULT NULL COMMENT '运费',
  `accountantCode` varchar(200) DEFAULT NULL COMMENT '月结账号',
  `otherInfo` varchar(250) DEFAULT NULL COMMENT '其他信息',
  `opName` varchar(250) DEFAULT NULL COMMENT '操作名称',
  `zoneTypeCode` int(11) DEFAULT NULL COMMENT '所在地区类型',
  `encryptString` varchar(250) DEFAULT NULL COMMENT '加密串',
  `barSn` varchar(250) DEFAULT NULL COMMENT '设备号码，巴枪设备号',
  `scheduleCode` varchar(250) DEFAULT NULL COMMENT '班次',
  `signTypeCode` varchar(250) DEFAULT NULL COMMENT '未知作用',
  `srcContnrCode` varchar(250) DEFAULT NULL COMMENT '源车标号',
  `phoneZone` varchar(100) DEFAULT NULL COMMENT '电话区号',
  `phone` varchar(100) DEFAULT NULL COMMENT '电话号码',
  `stopOverFlg` int(11) DEFAULT NULL COMMENT '二程接驳:1 享受,0 不享受',
  `batchCode` varchar(200) DEFAULT NULL COMMENT '班次：中转班次、航空班次、报关批次、办事处班次',
  `destZoneCode` varchar(200) DEFAULT NULL COMMENT '目的地代码',
  `autoloading` varchar(200) DEFAULT NULL COMMENT '巴枪来源:1 DT900,2 DTX5,3 HHT,其他未知',
  `barScanDt` date NOT NULL COMMENT '巴枪扫描日期',
  `barUploadOprCode` varchar(200) DEFAULT NULL COMMENT '巴枪上传操作员工号',
  `extendAttach1` varchar(250) DEFAULT NULL COMMENT '扩展附加信息1',
  `extendAttach2` varchar(250) DEFAULT NULL COMMENT '扩展附加信息2',
  `extendAttach3` varchar(250) DEFAULT NULL COMMENT '扩展附加信息3',
  `extendAttach4` varchar(250) DEFAULT NULL COMMENT '扩展附加信息4',
  `extendAttach5` varchar(250) DEFAULT NULL COMMENT '扩展附加信息5',
  `extendAttach6` varchar(250) DEFAULT NULL COMMENT '扩展附加信息6',
  `extendAttach7` varchar(250) DEFAULT NULL COMMENT '扩展附加信息7',
  `barUploadTmStd` datetime DEFAULT NULL COMMENT '巴枪上传标准时间',
  `barScanTmStd` datetime DEFAULT NULL COMMENT '巴枪操作标准时间',
  `ext` varchar(300) DEFAULT NULL COMMENT '扩展字段存放 exts',
  `source` int(8) DEFAULT NULL,
  `originalBarcode` int(1) DEFAULT NULL COMMENT '是否解递归后的原始巴枪轨迹（是否是原始数据） 1:是,0:否',
  PRIMARY KEY (`id`,`barScanDt`),
  UNIQUE KEY `idx_mainWaybillNo_opCode_barScanTm_barScanDt` (`mainWaybillNo`,`opCode`,`barScanTm`,`barScanDt`) USING HASH,
  KEY `track_barScanTm_index` (`barScanTm`),
  KEY `track_waybill_index` (`mainWaybillNo`) USING HASH,
  KEY `track_opAttachInfo_index` (`opAttachInfo`) USING BTREE,
  KEY `track_contnrCode_index` (`contnrCode`) USING BTREE,
  KEY `track_comba_index` (`zoneCode`,`opCode`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6129527 DEFAULT CHARSET=utf8 COMMENT='全量路由表'
/*!50100 PARTITION BY LIST (DAYOFYEAR(barScanDt))
(PARTITION p1 VALUES IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15) ENGINE = InnoDB,
 PARTITION p2 VALUES IN (16,17,18,19,20,21,22,23,24,25,26,27,28,29,30) ENGINE = InnoDB,
 PARTITION p3 VALUES IN (31,32,33,34,35,36,37,38,39,40,41,42,43,44,45) ENGINE = InnoDB,
 PARTITION p4 VALUES IN (46,47,48,49,50,51,52,53,54,55,56,57,58,59,60) ENGINE = InnoDB,
 PARTITION p5 VALUES IN (61,62,63,64,65,66,67,68,69,70,71,72,73,74,75) ENGINE = InnoDB,
 PARTITION p6 VALUES IN (76,77,78,79,80,81,82,83,84,85,86,87,88,89,90) ENGINE = InnoDB,
 PARTITION p7 VALUES IN (91,92,93,94,95,96,97,98,99,100,101,102,103,104,105) ENGINE = InnoDB,
 PARTITION p8 VALUES IN (106,107,108,109,110,111,112,113,114,115,116,117,118,119,120) ENGINE = InnoDB,
 PARTITION p9 VALUES IN (121,122,123,124,125,126,127,128,129,130,131,132,133,134,135) ENGINE = InnoDB,
 PARTITION p10 VALUES IN (136,137,138,139,140,141,142,143,144,145,146,147,148,149,150) ENGINE = InnoDB,
 PARTITION p11 VALUES IN (151,152,153,154,155,156,157,158,159,160,161,162,163,164,165) ENGINE = InnoDB,
 PARTITION p12 VALUES IN (166,167,168,169,170,171,172,173,174,175,176,177,178,179,180) ENGINE = InnoDB,
 PARTITION p13 VALUES IN (181,182,183,184,185,186,187,188,189,190,191,192,193,194,195) ENGINE = InnoDB,
 PARTITION p14 VALUES IN (196,197,198,199,200,201,202,203,204,205,206,207,208,209,210) ENGINE = InnoDB,
 PARTITION p15 VALUES IN (211,212,213,214,215,216,217,218,219,220,221,222,223,224,225) ENGINE = InnoDB,
 PARTITION p16 VALUES IN (226,227,228,229,230,231,232,233,234,235,236,237,238,239,240) ENGINE = InnoDB,
 PARTITION p17 VALUES IN (241,242,243,244,245,246,247,248,249,250,251,252,253,254,255) ENGINE = InnoDB,
 PARTITION p18 VALUES IN (256,257,258,259,260,261,262,263,264,265,266,267,268,269,270) ENGINE = InnoDB,
 PARTITION p19 VALUES IN (271,272,273,274,275,276,277,278,279,280,281,282,283,284,285) ENGINE = InnoDB,
 PARTITION p20 VALUES IN (286,287,288,289,290,291,292,293,294,295,296,297,298,299,300) ENGINE = InnoDB,
 PARTITION p21 VALUES IN (301,302,303,304,305,306,307,308,309,310,311,312,313,314,315) ENGINE = InnoDB,
 PARTITION p22 VALUES IN (316,317,318,319,320,321,322,323,324,325,326,327,328,329,330) ENGINE = InnoDB,
 PARTITION p23 VALUES IN (331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348) ENGINE = InnoDB,
 PARTITION p24 VALUES IN (349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366) ENGINE = InnoDB) */;

/*Table structure for table `stms_track_auto_divide` */

DROP TABLE IF EXISTS `stms_track_auto_divide`;

CREATE TABLE `stms_track_auto_divide` (
  `id` bigint(30) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `stms_insert_time` datetime NOT NULL COMMENT 'STMS后台系统插入数据库的时间',
  `mainWaybillNo` varchar(50) NOT NULL COMMENT '运单号',
  `waybillNo` varchar(50) DEFAULT NULL COMMENT '操作对象号码',
  `barScanTm` datetime NOT NULL COMMENT '巴枪扫描时间',
  `opCode` varchar(150) NOT NULL COMMENT '操作码',
  `status` int(8) DEFAULT NULL COMMENT '推断状态，0 推断可信，1 推断新增，2 推断可疑，3 推断临时，4 推断整车可信，5 推断单件可信，6 过程可疑，7 广播可疑，8 升格可信，9 升格新增',
  `dataStatus` int(8) DEFAULT NULL COMMENT '1 有效,2 无效',
  `ordinal` bigint(18) DEFAULT NULL COMMENT '序号',
  `createTm` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间timestamp',
  `barRecordId` varchar(50) DEFAULT NULL COMMENT '数据的唯一编码',
  `zoneCode` varchar(100) DEFAULT NULL COMMENT '操作网点',
  `opAttachInfo` varchar(250) DEFAULT NULL COMMENT '操作附加信息',
  `courierCode` varchar(150) DEFAULT NULL COMMENT '收派员工号',
  `barOprCode` varchar(150) DEFAULT NULL COMMENT '操作员工号',
  `barUploadTm` datetime DEFAULT NULL COMMENT '巴枪上传时间',
  `objTypeCode` varchar(150) DEFAULT NULL COMMENT '操作对象类型',
  `contnrCode` varchar(250) DEFAULT NULL COMMENT '容器号',
  `payFlg` int(11) DEFAULT NULL COMMENT '是否已付款标识',
  `stayWhyCode` varchar(200) DEFAULT NULL COMMENT '滞留原因代码',
  `subbillPieceQty` int(11) DEFAULT NULL COMMENT '件数（字母件中的子件数量）',
  `barUploadTypeCode` int(11) DEFAULT NULL COMMENT '巴枪输入方法',
  `weightQty` decimal(10,4) DEFAULT NULL COMMENT '计费重量',
  `feeAmt` decimal(20,8) DEFAULT NULL COMMENT '运费',
  `accountantCode` varchar(200) DEFAULT NULL COMMENT '月结账号',
  `otherInfo` varchar(250) DEFAULT NULL COMMENT '其他信息',
  `opName` varchar(250) DEFAULT NULL COMMENT '操作名称',
  `zoneTypeCode` int(11) DEFAULT NULL COMMENT '所在地区类型',
  `encryptString` varchar(250) DEFAULT NULL COMMENT '加密串',
  `barSn` varchar(250) DEFAULT NULL COMMENT '设备号码，巴枪设备号',
  `scheduleCode` varchar(250) DEFAULT NULL COMMENT '班次',
  `signTypeCode` varchar(250) DEFAULT NULL COMMENT '未知作用',
  `srcContnrCode` varchar(250) DEFAULT NULL COMMENT '源车标号',
  `phoneZone` varchar(100) DEFAULT NULL COMMENT '电话区号',
  `phone` varchar(100) DEFAULT NULL COMMENT '电话号码',
  `stopOverFlg` int(11) DEFAULT NULL COMMENT '二程接驳:1 享受,0 不享受',
  `batchCode` varchar(200) DEFAULT NULL COMMENT '班次：中转班次、航空班次、报关批次、办事处班次',
  `destZoneCode` varchar(200) DEFAULT NULL COMMENT '目的地代码',
  `autoloading` varchar(200) DEFAULT NULL COMMENT '巴枪来源:1 DT900,2 DTX5,3 HHT,其他未知',
  `barScanDt` date NOT NULL COMMENT '巴枪扫描日期',
  `barUploadOprCode` varchar(200) DEFAULT NULL COMMENT '巴枪上传操作员工号',
  `extendAttach1` varchar(250) DEFAULT NULL COMMENT '扩展附加信息1',
  `extendAttach2` varchar(250) DEFAULT NULL COMMENT '扩展附加信息2',
  `extendAttach3` varchar(250) DEFAULT NULL COMMENT '扩展附加信息3',
  `extendAttach4` varchar(250) DEFAULT NULL COMMENT '扩展附加信息4',
  `extendAttach5` varchar(250) DEFAULT NULL COMMENT '扩展附加信息5',
  `extendAttach6` varchar(250) DEFAULT NULL COMMENT '扩展附加信息6',
  `extendAttach7` varchar(250) DEFAULT NULL COMMENT '扩展附加信息7',
  `barUploadTmStd` datetime DEFAULT NULL COMMENT '巴枪上传标准时间',
  `barScanTmStd` datetime DEFAULT NULL COMMENT '巴枪操作标准时间',
  `ext` varchar(300) DEFAULT NULL COMMENT '扩展字段存放 exts',
  `source` int(8) DEFAULT NULL,
  `originalBarcode` int(1) DEFAULT NULL COMMENT '是否解递归后的原始巴枪轨迹（是否是原始数据） 1:是,0:否',
  PRIMARY KEY (`id`,`barScanDt`),
  UNIQUE KEY `idx_mainWaybillNo_opCode_barScanTm_barScanDt` (`mainWaybillNo`,`opCode`,`barScanTm`,`barScanDt`) USING HASH,
  KEY `track_barScanTm_index` (`barScanTm`),
  KEY `track_waybill_index` (`mainWaybillNo`) USING HASH,
  KEY `track_opAttachInfo_index` (`opAttachInfo`) USING BTREE,
  KEY `track_contnrCode_index` (`contnrCode`) USING BTREE,
  KEY `track_comba_index` (`zoneCode`,`opCode`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='全量路由表'
/*!50100 PARTITION BY RANGE (to_days(barScanDt))
(PARTITION p20180107 VALUES LESS THAN (737067) ENGINE = InnoDB,
 PARTITION p20180114 VALUES LESS THAN (737074) ENGINE = InnoDB,
 PARTITION p20170521 VALUES LESS THAN (737081) ENGINE = InnoDB,
 PARTITION p20170728 VALUES LESS THAN (737088) ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN (737095) ENGINE = InnoDB,
 PARTITION p20180212 VALUES LESS THAN (737102) ENGINE = InnoDB,
 PARTITION p20180219 VALUES LESS THAN (737109) ENGINE = InnoDB,
 PARTITION p20180226 VALUES LESS THAN (737116) ENGINE = InnoDB,
 PARTITION p20180305 VALUES LESS THAN (737123) ENGINE = InnoDB,
 PARTITION p20180312 VALUES LESS THAN (737130) ENGINE = InnoDB,
 PARTITION p20180319 VALUES LESS THAN (737137) ENGINE = InnoDB,
 PARTITION p20180326 VALUES LESS THAN (737144) ENGINE = InnoDB,
 PARTITION p20180402 VALUES LESS THAN (737151) ENGINE = InnoDB,
 PARTITION p20180409 VALUES LESS THAN (737158) ENGINE = InnoDB,
 PARTITION p20180416 VALUES LESS THAN (737165) ENGINE = InnoDB,
 PARTITION p20180423 VALUES LESS THAN (737172) ENGINE = InnoDB,
 PARTITION p20180430 VALUES LESS THAN (737179) ENGINE = InnoDB,
 PARTITION p20180507 VALUES LESS THAN (737186) ENGINE = InnoDB,
 PARTITION p20180514 VALUES LESS THAN (737193) ENGINE = InnoDB,
 PARTITION p20180521 VALUES LESS THAN (737200) ENGINE = InnoDB,
 PARTITION p20180528 VALUES LESS THAN (737207) ENGINE = InnoDB,
 PARTITION p20180604 VALUES LESS THAN (737214) ENGINE = InnoDB,
 PARTITION p20180611 VALUES LESS THAN (737221) ENGINE = InnoDB,
 PARTITION p20180618 VALUES LESS THAN (737228) ENGINE = InnoDB,
 PARTITION p20180625 VALUES LESS THAN (737235) ENGINE = InnoDB,
 PARTITION p20180702 VALUES LESS THAN (737242) ENGINE = InnoDB,
 PARTITION p20180709 VALUES LESS THAN (737249) ENGINE = InnoDB,
 PARTITION p20180716 VALUES LESS THAN (737256) ENGINE = InnoDB,
 PARTITION p20180723 VALUES LESS THAN (737263) ENGINE = InnoDB,
 PARTITION p20180730 VALUES LESS THAN (737270) ENGINE = InnoDB,
 PARTITION p20180806 VALUES LESS THAN (737277) ENGINE = InnoDB,
 PARTITION p20180813 VALUES LESS THAN (737284) ENGINE = InnoDB,
 PARTITION p20180820 VALUES LESS THAN (737291) ENGINE = InnoDB,
 PARTITION p20180827 VALUES LESS THAN (737298) ENGINE = InnoDB,
 PARTITION p20180903 VALUES LESS THAN (737305) ENGINE = InnoDB,
 PARTITION p20180910 VALUES LESS THAN (737312) ENGINE = InnoDB,
 PARTITION p20180917 VALUES LESS THAN (737319) ENGINE = InnoDB,
 PARTITION p20180924 VALUES LESS THAN (737326) ENGINE = InnoDB,
 PARTITION p20181001 VALUES LESS THAN (737333) ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN (737340) ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN (737347) ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN (737354) ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN (737361) ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN (737368) ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN (737375) ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN (737382) ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN (737389) ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN (737396) ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN (737403) ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN (737410) ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN (737417) ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN (737424) ENGINE = InnoDB,
 PARTITION p20190107 VALUES LESS THAN (737431) ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN (737438) ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN (737445) ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN (737452) ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN (737459) ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN (737466) ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN (737473) ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN (737480) ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN (737487) ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN (737494) ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN (737501) ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN (737508) ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN (737515) ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN (737522) ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN (737529) ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN (737536) ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN (737543) ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN (737550) ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN (737557) ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN (737564) ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN (737571) ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN (737578) ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN (737585) ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN (737592) ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN (737599) ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN (737606) ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN (737613) ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN (737620) ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN (737627) ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN (737634) ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN (737641) ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN (737648) ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN (737655) ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN (737662) ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN (737669) ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN (737676) ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN (737683) ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN (737690) ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN (737697) ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN (737704) ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN (737711) ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN (737718) ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN (737725) ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (737732) ENGINE = InnoDB,
 PARTITION p20191111 VALUES LESS THAN (737739) ENGINE = InnoDB,
 PARTITION p20191118 VALUES LESS THAN (737746) ENGINE = InnoDB,
 PARTITION p20191125 VALUES LESS THAN (737753) ENGINE = InnoDB,
 PARTITION p20191202 VALUES LESS THAN (737760) ENGINE = InnoDB,
 PARTITION p20191209 VALUES LESS THAN (737767) ENGINE = InnoDB,
 PARTITION p20191216 VALUES LESS THAN (737774) ENGINE = InnoDB,
 PARTITION p20191223 VALUES LESS THAN (737781) ENGINE = InnoDB,
 PARTITION p20191230 VALUES LESS THAN (737788) ENGINE = InnoDB,
 PARTITION p20200106 VALUES LESS THAN (737795) ENGINE = InnoDB,
 PARTITION p20200113 VALUES LESS THAN (737802) ENGINE = InnoDB,
 PARTITION p20200120 VALUES LESS THAN (737809) ENGINE = InnoDB,
 PARTITION p20200127 VALUES LESS THAN (737816) ENGINE = InnoDB,
 PARTITION p20200203 VALUES LESS THAN (737823) ENGINE = InnoDB,
 PARTITION p20200210 VALUES LESS THAN MAXVALUE ENGINE = InnoDB) */;

/*Table structure for table `stms_track_auto_divide_byday` */

DROP TABLE IF EXISTS `stms_track_auto_divide_byday`;

CREATE TABLE `stms_track_auto_divide_byday` (
  `id` bigint(30) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `stms_insert_time` datetime NOT NULL COMMENT 'STMS后台系统插入数据库的时间',
  `mainWaybillNo` varchar(50) NOT NULL COMMENT '运单号',
  `waybillNo` varchar(50) DEFAULT NULL COMMENT '操作对象号码',
  `barScanTm` datetime NOT NULL COMMENT '巴枪扫描时间',
  `opCode` varchar(150) NOT NULL COMMENT '操作码',
  `status` int(8) DEFAULT NULL COMMENT '推断状态，0 推断可信，1 推断新增，2 推断可疑，3 推断临时，4 推断整车可信，5 推断单件可信，6 过程可疑，7 广播可疑，8 升格可信，9 升格新增',
  `dataStatus` int(8) DEFAULT NULL COMMENT '1 有效,2 无效',
  `ordinal` bigint(18) DEFAULT NULL COMMENT '序号',
  `createTm` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间timestamp',
  `barRecordId` varchar(50) DEFAULT NULL COMMENT '数据的唯一编码',
  `zoneCode` varchar(100) DEFAULT NULL COMMENT '操作网点',
  `opAttachInfo` varchar(250) DEFAULT NULL COMMENT '操作附加信息',
  `courierCode` varchar(150) DEFAULT NULL COMMENT '收派员工号',
  `barOprCode` varchar(150) DEFAULT NULL COMMENT '操作员工号',
  `barUploadTm` datetime DEFAULT NULL COMMENT '巴枪上传时间',
  `objTypeCode` varchar(150) DEFAULT NULL COMMENT '操作对象类型',
  `contnrCode` varchar(250) DEFAULT NULL COMMENT '容器号',
  `payFlg` int(11) DEFAULT NULL COMMENT '是否已付款标识',
  `stayWhyCode` varchar(200) DEFAULT NULL COMMENT '滞留原因代码',
  `subbillPieceQty` int(11) DEFAULT NULL COMMENT '件数（字母件中的子件数量）',
  `barUploadTypeCode` int(11) DEFAULT NULL COMMENT '巴枪输入方法',
  `weightQty` decimal(10,4) DEFAULT NULL COMMENT '计费重量',
  `feeAmt` decimal(20,8) DEFAULT NULL COMMENT '运费',
  `accountantCode` varchar(200) DEFAULT NULL COMMENT '月结账号',
  `otherInfo` varchar(250) DEFAULT NULL COMMENT '其他信息',
  `opName` varchar(250) DEFAULT NULL COMMENT '操作名称',
  `zoneTypeCode` int(11) DEFAULT NULL COMMENT '所在地区类型',
  `encryptString` varchar(250) DEFAULT NULL COMMENT '加密串',
  `barSn` varchar(250) DEFAULT NULL COMMENT '设备号码，巴枪设备号',
  `scheduleCode` varchar(250) DEFAULT NULL COMMENT '班次',
  `signTypeCode` varchar(250) DEFAULT NULL COMMENT '未知作用',
  `srcContnrCode` varchar(250) DEFAULT NULL COMMENT '源车标号',
  `phoneZone` varchar(100) DEFAULT NULL COMMENT '电话区号',
  `phone` varchar(100) DEFAULT NULL COMMENT '电话号码',
  `stopOverFlg` int(11) DEFAULT NULL COMMENT '二程接驳:1 享受,0 不享受',
  `batchCode` varchar(200) DEFAULT NULL COMMENT '班次：中转班次、航空班次、报关批次、办事处班次',
  `destZoneCode` varchar(200) DEFAULT NULL COMMENT '目的地代码',
  `autoloading` varchar(200) DEFAULT NULL COMMENT '巴枪来源:1 DT900,2 DTX5,3 HHT,其他未知',
  `barScanDt` date NOT NULL COMMENT '巴枪扫描日期',
  `barUploadOprCode` varchar(200) DEFAULT NULL COMMENT '巴枪上传操作员工号',
  `extendAttach1` varchar(250) DEFAULT NULL COMMENT '扩展附加信息1',
  `extendAttach2` varchar(250) DEFAULT NULL COMMENT '扩展附加信息2',
  `extendAttach3` varchar(250) DEFAULT NULL COMMENT '扩展附加信息3',
  `extendAttach4` varchar(250) DEFAULT NULL COMMENT '扩展附加信息4',
  `extendAttach5` varchar(250) DEFAULT NULL COMMENT '扩展附加信息5',
  `extendAttach6` varchar(250) DEFAULT NULL COMMENT '扩展附加信息6',
  `extendAttach7` varchar(250) DEFAULT NULL COMMENT '扩展附加信息7',
  `barUploadTmStd` datetime DEFAULT NULL COMMENT '巴枪上传标准时间',
  `barScanTmStd` datetime DEFAULT NULL COMMENT '巴枪操作标准时间',
  `ext` varchar(300) DEFAULT NULL COMMENT '扩展字段存放 exts',
  `source` int(8) DEFAULT NULL,
  `originalBarcode` int(1) DEFAULT NULL COMMENT '是否解递归后的原始巴枪轨迹（是否是原始数据） 1:是,0:否',
  PRIMARY KEY (`id`,`barScanDt`),
  UNIQUE KEY `idx_mainWaybillNo_opCode_barScanTm_barScanDt` (`mainWaybillNo`,`opCode`,`barScanTm`,`barScanDt`) USING HASH,
  KEY `track_barScanTm_index` (`barScanTm`),
  KEY `track_waybill_index` (`mainWaybillNo`) USING HASH,
  KEY `track_opAttachInfo_index` (`opAttachInfo`) USING BTREE,
  KEY `track_contnrCode_index` (`contnrCode`) USING BTREE,
  KEY `track_comba_index` (`zoneCode`,`opCode`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='全量路由表'
/*!50100 PARTITION BY RANGE (to_days(barScanDt))
(PARTITION p20180107 VALUES LESS THAN (737067) ENGINE = InnoDB,
 PARTITION p20180114 VALUES LESS THAN (737074) ENGINE = InnoDB,
 PARTITION p20170521 VALUES LESS THAN (737081) ENGINE = InnoDB,
 PARTITION p20170728 VALUES LESS THAN (737088) ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN (737089) ENGINE = InnoDB,
 PARTITION p20180131 VALUES LESS THAN (737090) ENGINE = InnoDB,
 PARTITION p20180201 VALUES LESS THAN (737091) ENGINE = InnoDB,
 PARTITION p20180202 VALUES LESS THAN (737092) ENGINE = InnoDB,
 PARTITION p20180203 VALUES LESS THAN (737093) ENGINE = InnoDB,
 PARTITION p20180204 VALUES LESS THAN (737094) ENGINE = InnoDB,
 PARTITION p20180205 VALUES LESS THAN (737095) ENGINE = InnoDB,
 PARTITION p20180206 VALUES LESS THAN (737096) ENGINE = InnoDB,
 PARTITION p20180207 VALUES LESS THAN (737097) ENGINE = InnoDB,
 PARTITION p20180208 VALUES LESS THAN (737098) ENGINE = InnoDB,
 PARTITION p20180209 VALUES LESS THAN (737099) ENGINE = InnoDB,
 PARTITION p20180210 VALUES LESS THAN (737100) ENGINE = InnoDB,
 PARTITION p20180211 VALUES LESS THAN (737101) ENGINE = InnoDB,
 PARTITION p20180212 VALUES LESS THAN (737102) ENGINE = InnoDB,
 PARTITION p20180213 VALUES LESS THAN (737103) ENGINE = InnoDB,
 PARTITION p20180214 VALUES LESS THAN (737104) ENGINE = InnoDB,
 PARTITION p20180215 VALUES LESS THAN (737105) ENGINE = InnoDB,
 PARTITION p20180216 VALUES LESS THAN (737106) ENGINE = InnoDB,
 PARTITION p20180217 VALUES LESS THAN (737107) ENGINE = InnoDB,
 PARTITION p20180218 VALUES LESS THAN (737108) ENGINE = InnoDB,
 PARTITION p20180219 VALUES LESS THAN (737109) ENGINE = InnoDB,
 PARTITION p20180220 VALUES LESS THAN (737110) ENGINE = InnoDB,
 PARTITION p20180221 VALUES LESS THAN (737111) ENGINE = InnoDB,
 PARTITION p20180222 VALUES LESS THAN (737112) ENGINE = InnoDB,
 PARTITION p20180223 VALUES LESS THAN (737113) ENGINE = InnoDB,
 PARTITION p20180224 VALUES LESS THAN (737114) ENGINE = InnoDB,
 PARTITION p20180225 VALUES LESS THAN (737115) ENGINE = InnoDB,
 PARTITION p20180226 VALUES LESS THAN (737116) ENGINE = InnoDB,
 PARTITION p20180227 VALUES LESS THAN (737117) ENGINE = InnoDB,
 PARTITION p20180228 VALUES LESS THAN (737118) ENGINE = InnoDB,
 PARTITION p20180301 VALUES LESS THAN (737119) ENGINE = InnoDB,
 PARTITION p20180302 VALUES LESS THAN (737120) ENGINE = InnoDB,
 PARTITION p20180303 VALUES LESS THAN (737121) ENGINE = InnoDB,
 PARTITION p20180304 VALUES LESS THAN (737122) ENGINE = InnoDB,
 PARTITION p20180305 VALUES LESS THAN (737123) ENGINE = InnoDB,
 PARTITION p20180306 VALUES LESS THAN (737124) ENGINE = InnoDB,
 PARTITION p20180307 VALUES LESS THAN (737125) ENGINE = InnoDB,
 PARTITION p20180308 VALUES LESS THAN (737126) ENGINE = InnoDB,
 PARTITION p20180309 VALUES LESS THAN (737127) ENGINE = InnoDB,
 PARTITION p20180310 VALUES LESS THAN (737128) ENGINE = InnoDB,
 PARTITION p20180311 VALUES LESS THAN (737129) ENGINE = InnoDB,
 PARTITION p20180312 VALUES LESS THAN (737130) ENGINE = InnoDB,
 PARTITION p20180313 VALUES LESS THAN (737131) ENGINE = InnoDB,
 PARTITION p20180314 VALUES LESS THAN (737132) ENGINE = InnoDB,
 PARTITION p20180315 VALUES LESS THAN (737133) ENGINE = InnoDB,
 PARTITION p20180316 VALUES LESS THAN (737134) ENGINE = InnoDB,
 PARTITION p20180317 VALUES LESS THAN (737135) ENGINE = InnoDB,
 PARTITION p20180318 VALUES LESS THAN (737136) ENGINE = InnoDB,
 PARTITION p20180319 VALUES LESS THAN (737137) ENGINE = InnoDB,
 PARTITION p20180320 VALUES LESS THAN (737138) ENGINE = InnoDB,
 PARTITION p20180321 VALUES LESS THAN (737139) ENGINE = InnoDB,
 PARTITION p20180322 VALUES LESS THAN (737140) ENGINE = InnoDB,
 PARTITION p20180323 VALUES LESS THAN (737141) ENGINE = InnoDB,
 PARTITION p20180324 VALUES LESS THAN (737142) ENGINE = InnoDB,
 PARTITION p20180325 VALUES LESS THAN (737143) ENGINE = InnoDB,
 PARTITION p20180326 VALUES LESS THAN (737144) ENGINE = InnoDB,
 PARTITION p20180327 VALUES LESS THAN (737145) ENGINE = InnoDB,
 PARTITION p20180328 VALUES LESS THAN (737146) ENGINE = InnoDB,
 PARTITION p20180329 VALUES LESS THAN (737147) ENGINE = InnoDB,
 PARTITION p20180330 VALUES LESS THAN (737148) ENGINE = InnoDB,
 PARTITION p20180331 VALUES LESS THAN (737149) ENGINE = InnoDB,
 PARTITION p20180401 VALUES LESS THAN (737150) ENGINE = InnoDB,
 PARTITION p20180402 VALUES LESS THAN (737151) ENGINE = InnoDB,
 PARTITION p20180403 VALUES LESS THAN (737152) ENGINE = InnoDB,
 PARTITION p20180404 VALUES LESS THAN (737153) ENGINE = InnoDB,
 PARTITION p20180405 VALUES LESS THAN (737154) ENGINE = InnoDB,
 PARTITION p20180406 VALUES LESS THAN (737155) ENGINE = InnoDB,
 PARTITION p20180407 VALUES LESS THAN (737156) ENGINE = InnoDB,
 PARTITION p20180408 VALUES LESS THAN (737157) ENGINE = InnoDB,
 PARTITION p20180409 VALUES LESS THAN (737158) ENGINE = InnoDB,
 PARTITION p20180410 VALUES LESS THAN (737159) ENGINE = InnoDB,
 PARTITION p20180411 VALUES LESS THAN (737160) ENGINE = InnoDB,
 PARTITION p20180412 VALUES LESS THAN (737161) ENGINE = InnoDB,
 PARTITION p20180413 VALUES LESS THAN (737162) ENGINE = InnoDB,
 PARTITION p20180414 VALUES LESS THAN (737163) ENGINE = InnoDB,
 PARTITION p20180415 VALUES LESS THAN (737164) ENGINE = InnoDB,
 PARTITION p20180416 VALUES LESS THAN (737165) ENGINE = InnoDB,
 PARTITION p20180417 VALUES LESS THAN (737166) ENGINE = InnoDB,
 PARTITION p20180418 VALUES LESS THAN (737167) ENGINE = InnoDB,
 PARTITION p20180419 VALUES LESS THAN (737168) ENGINE = InnoDB,
 PARTITION p20180420 VALUES LESS THAN (737169) ENGINE = InnoDB,
 PARTITION p20180421 VALUES LESS THAN (737170) ENGINE = InnoDB,
 PARTITION p20180422 VALUES LESS THAN (737171) ENGINE = InnoDB,
 PARTITION p20180423 VALUES LESS THAN (737172) ENGINE = InnoDB,
 PARTITION p20180424 VALUES LESS THAN (737173) ENGINE = InnoDB,
 PARTITION p20180425 VALUES LESS THAN (737174) ENGINE = InnoDB,
 PARTITION p20180426 VALUES LESS THAN (737175) ENGINE = InnoDB,
 PARTITION p20180427 VALUES LESS THAN (737176) ENGINE = InnoDB,
 PARTITION p20180428 VALUES LESS THAN (737177) ENGINE = InnoDB,
 PARTITION p20180429 VALUES LESS THAN (737178) ENGINE = InnoDB,
 PARTITION p20180430 VALUES LESS THAN (737179) ENGINE = InnoDB,
 PARTITION p20180501 VALUES LESS THAN (737180) ENGINE = InnoDB,
 PARTITION p20180502 VALUES LESS THAN (737181) ENGINE = InnoDB,
 PARTITION p20180503 VALUES LESS THAN (737182) ENGINE = InnoDB,
 PARTITION p20180504 VALUES LESS THAN (737183) ENGINE = InnoDB,
 PARTITION p20180505 VALUES LESS THAN (737184) ENGINE = InnoDB,
 PARTITION p20180506 VALUES LESS THAN (737185) ENGINE = InnoDB,
 PARTITION p20180507 VALUES LESS THAN (737186) ENGINE = InnoDB,
 PARTITION p20180508 VALUES LESS THAN (737187) ENGINE = InnoDB,
 PARTITION p20180509 VALUES LESS THAN (737188) ENGINE = InnoDB,
 PARTITION p20180510 VALUES LESS THAN (737189) ENGINE = InnoDB,
 PARTITION p20180511 VALUES LESS THAN (737190) ENGINE = InnoDB,
 PARTITION p20180512 VALUES LESS THAN (737191) ENGINE = InnoDB,
 PARTITION p20180513 VALUES LESS THAN (737192) ENGINE = InnoDB,
 PARTITION p20180514 VALUES LESS THAN (737193) ENGINE = InnoDB,
 PARTITION p20180515 VALUES LESS THAN (737194) ENGINE = InnoDB,
 PARTITION p20180516 VALUES LESS THAN (737195) ENGINE = InnoDB,
 PARTITION p20180517 VALUES LESS THAN (737196) ENGINE = InnoDB,
 PARTITION p20180518 VALUES LESS THAN (737197) ENGINE = InnoDB,
 PARTITION p20180519 VALUES LESS THAN (737198) ENGINE = InnoDB,
 PARTITION p20180520 VALUES LESS THAN (737199) ENGINE = InnoDB,
 PARTITION p20180521 VALUES LESS THAN (737200) ENGINE = InnoDB,
 PARTITION p20180522 VALUES LESS THAN (737201) ENGINE = InnoDB,
 PARTITION p20180523 VALUES LESS THAN (737202) ENGINE = InnoDB,
 PARTITION p20180524 VALUES LESS THAN (737203) ENGINE = InnoDB,
 PARTITION p20180525 VALUES LESS THAN (737204) ENGINE = InnoDB,
 PARTITION p20180526 VALUES LESS THAN (737205) ENGINE = InnoDB,
 PARTITION p20180527 VALUES LESS THAN (737206) ENGINE = InnoDB,
 PARTITION p20180528 VALUES LESS THAN (737207) ENGINE = InnoDB,
 PARTITION p20180529 VALUES LESS THAN (737208) ENGINE = InnoDB,
 PARTITION p20180530 VALUES LESS THAN (737209) ENGINE = InnoDB,
 PARTITION p20180531 VALUES LESS THAN (737210) ENGINE = InnoDB,
 PARTITION p20180601 VALUES LESS THAN (737211) ENGINE = InnoDB,
 PARTITION p20180602 VALUES LESS THAN (737212) ENGINE = InnoDB,
 PARTITION p20180603 VALUES LESS THAN (737213) ENGINE = InnoDB,
 PARTITION p20180604 VALUES LESS THAN (737214) ENGINE = InnoDB,
 PARTITION p20180605 VALUES LESS THAN (737215) ENGINE = InnoDB,
 PARTITION p20180606 VALUES LESS THAN (737216) ENGINE = InnoDB,
 PARTITION p20180607 VALUES LESS THAN (737217) ENGINE = InnoDB,
 PARTITION p20180608 VALUES LESS THAN (737218) ENGINE = InnoDB,
 PARTITION p20180609 VALUES LESS THAN (737219) ENGINE = InnoDB,
 PARTITION p20180610 VALUES LESS THAN (737220) ENGINE = InnoDB,
 PARTITION p20180611 VALUES LESS THAN (737221) ENGINE = InnoDB,
 PARTITION p20180612 VALUES LESS THAN (737222) ENGINE = InnoDB,
 PARTITION p20180613 VALUES LESS THAN (737223) ENGINE = InnoDB,
 PARTITION p20180614 VALUES LESS THAN (737224) ENGINE = InnoDB,
 PARTITION p20180615 VALUES LESS THAN (737225) ENGINE = InnoDB,
 PARTITION p20180616 VALUES LESS THAN (737226) ENGINE = InnoDB,
 PARTITION p20180617 VALUES LESS THAN (737227) ENGINE = InnoDB,
 PARTITION p20180618 VALUES LESS THAN (737228) ENGINE = InnoDB,
 PARTITION p20180619 VALUES LESS THAN (737229) ENGINE = InnoDB,
 PARTITION p20180620 VALUES LESS THAN (737230) ENGINE = InnoDB,
 PARTITION p20180621 VALUES LESS THAN (737231) ENGINE = InnoDB,
 PARTITION p20180622 VALUES LESS THAN (737232) ENGINE = InnoDB,
 PARTITION p20180623 VALUES LESS THAN (737233) ENGINE = InnoDB,
 PARTITION p20180624 VALUES LESS THAN (737234) ENGINE = InnoDB,
 PARTITION p20180625 VALUES LESS THAN (737235) ENGINE = InnoDB,
 PARTITION p20180626 VALUES LESS THAN (737236) ENGINE = InnoDB,
 PARTITION p20180627 VALUES LESS THAN (737237) ENGINE = InnoDB,
 PARTITION p20180628 VALUES LESS THAN (737238) ENGINE = InnoDB,
 PARTITION p20180629 VALUES LESS THAN (737239) ENGINE = InnoDB,
 PARTITION p20180630 VALUES LESS THAN (737240) ENGINE = InnoDB,
 PARTITION p20180701 VALUES LESS THAN (737241) ENGINE = InnoDB,
 PARTITION p20180702 VALUES LESS THAN (737242) ENGINE = InnoDB,
 PARTITION p20180703 VALUES LESS THAN (737243) ENGINE = InnoDB,
 PARTITION p20180704 VALUES LESS THAN (737244) ENGINE = InnoDB,
 PARTITION p20180705 VALUES LESS THAN (737245) ENGINE = InnoDB,
 PARTITION p20180706 VALUES LESS THAN (737246) ENGINE = InnoDB,
 PARTITION p20180707 VALUES LESS THAN (737247) ENGINE = InnoDB,
 PARTITION p20180708 VALUES LESS THAN (737248) ENGINE = InnoDB,
 PARTITION p20180709 VALUES LESS THAN (737249) ENGINE = InnoDB,
 PARTITION p20180710 VALUES LESS THAN (737250) ENGINE = InnoDB,
 PARTITION p20180711 VALUES LESS THAN (737251) ENGINE = InnoDB,
 PARTITION p20180712 VALUES LESS THAN (737252) ENGINE = InnoDB,
 PARTITION p20180713 VALUES LESS THAN (737253) ENGINE = InnoDB,
 PARTITION p20180714 VALUES LESS THAN (737254) ENGINE = InnoDB,
 PARTITION p20180715 VALUES LESS THAN (737255) ENGINE = InnoDB,
 PARTITION p20180716 VALUES LESS THAN (737256) ENGINE = InnoDB,
 PARTITION p20180717 VALUES LESS THAN (737257) ENGINE = InnoDB,
 PARTITION p20180718 VALUES LESS THAN (737258) ENGINE = InnoDB,
 PARTITION p20180719 VALUES LESS THAN (737259) ENGINE = InnoDB,
 PARTITION p20180720 VALUES LESS THAN (737260) ENGINE = InnoDB,
 PARTITION p20180721 VALUES LESS THAN (737261) ENGINE = InnoDB,
 PARTITION p20180722 VALUES LESS THAN (737262) ENGINE = InnoDB,
 PARTITION p20180723 VALUES LESS THAN (737263) ENGINE = InnoDB,
 PARTITION p20180724 VALUES LESS THAN (737264) ENGINE = InnoDB,
 PARTITION p20180725 VALUES LESS THAN (737265) ENGINE = InnoDB,
 PARTITION p20180726 VALUES LESS THAN (737266) ENGINE = InnoDB,
 PARTITION p20180727 VALUES LESS THAN (737267) ENGINE = InnoDB,
 PARTITION p20180728 VALUES LESS THAN (737268) ENGINE = InnoDB,
 PARTITION p20180729 VALUES LESS THAN (737269) ENGINE = InnoDB,
 PARTITION p20180730 VALUES LESS THAN (737270) ENGINE = InnoDB,
 PARTITION p20180731 VALUES LESS THAN (737271) ENGINE = InnoDB,
 PARTITION p20180801 VALUES LESS THAN (737272) ENGINE = InnoDB,
 PARTITION p20180802 VALUES LESS THAN (737273) ENGINE = InnoDB,
 PARTITION p20180803 VALUES LESS THAN (737274) ENGINE = InnoDB,
 PARTITION p20180804 VALUES LESS THAN (737275) ENGINE = InnoDB,
 PARTITION p20180805 VALUES LESS THAN (737276) ENGINE = InnoDB,
 PARTITION p20180806 VALUES LESS THAN (737277) ENGINE = InnoDB,
 PARTITION p20180807 VALUES LESS THAN (737278) ENGINE = InnoDB,
 PARTITION p20180808 VALUES LESS THAN (737279) ENGINE = InnoDB,
 PARTITION p20180809 VALUES LESS THAN (737280) ENGINE = InnoDB,
 PARTITION p20180810 VALUES LESS THAN (737281) ENGINE = InnoDB,
 PARTITION p20180811 VALUES LESS THAN (737282) ENGINE = InnoDB,
 PARTITION p20180812 VALUES LESS THAN (737283) ENGINE = InnoDB,
 PARTITION p20180813 VALUES LESS THAN (737284) ENGINE = InnoDB,
 PARTITION p20180814 VALUES LESS THAN (737285) ENGINE = InnoDB,
 PARTITION p20180815 VALUES LESS THAN (737286) ENGINE = InnoDB,
 PARTITION p20180816 VALUES LESS THAN (737287) ENGINE = InnoDB,
 PARTITION p20180817 VALUES LESS THAN (737288) ENGINE = InnoDB,
 PARTITION p20180818 VALUES LESS THAN (737289) ENGINE = InnoDB,
 PARTITION p20180819 VALUES LESS THAN (737290) ENGINE = InnoDB,
 PARTITION p20180820 VALUES LESS THAN (737291) ENGINE = InnoDB,
 PARTITION p20180821 VALUES LESS THAN (737292) ENGINE = InnoDB,
 PARTITION p20180822 VALUES LESS THAN (737293) ENGINE = InnoDB,
 PARTITION p20180823 VALUES LESS THAN (737294) ENGINE = InnoDB,
 PARTITION p20180824 VALUES LESS THAN (737295) ENGINE = InnoDB,
 PARTITION p20180825 VALUES LESS THAN (737296) ENGINE = InnoDB,
 PARTITION p20180826 VALUES LESS THAN (737297) ENGINE = InnoDB,
 PARTITION p20180827 VALUES LESS THAN (737298) ENGINE = InnoDB,
 PARTITION p20180828 VALUES LESS THAN (737299) ENGINE = InnoDB,
 PARTITION p20180829 VALUES LESS THAN (737300) ENGINE = InnoDB,
 PARTITION p20180830 VALUES LESS THAN (737301) ENGINE = InnoDB,
 PARTITION p20180831 VALUES LESS THAN (737302) ENGINE = InnoDB,
 PARTITION p20180901 VALUES LESS THAN (737303) ENGINE = InnoDB,
 PARTITION p20180902 VALUES LESS THAN (737304) ENGINE = InnoDB,
 PARTITION p20180903 VALUES LESS THAN (737305) ENGINE = InnoDB,
 PARTITION p20180904 VALUES LESS THAN (737306) ENGINE = InnoDB,
 PARTITION p20180905 VALUES LESS THAN (737307) ENGINE = InnoDB,
 PARTITION p20180906 VALUES LESS THAN (737308) ENGINE = InnoDB,
 PARTITION p20180907 VALUES LESS THAN (737309) ENGINE = InnoDB,
 PARTITION p20180908 VALUES LESS THAN (737310) ENGINE = InnoDB,
 PARTITION p20180909 VALUES LESS THAN (737311) ENGINE = InnoDB,
 PARTITION p20180910 VALUES LESS THAN (737312) ENGINE = InnoDB,
 PARTITION p20180911 VALUES LESS THAN (737313) ENGINE = InnoDB,
 PARTITION p20180912 VALUES LESS THAN (737314) ENGINE = InnoDB,
 PARTITION p20180913 VALUES LESS THAN (737315) ENGINE = InnoDB,
 PARTITION p20180914 VALUES LESS THAN (737316) ENGINE = InnoDB,
 PARTITION p20180915 VALUES LESS THAN (737317) ENGINE = InnoDB,
 PARTITION p20180916 VALUES LESS THAN (737318) ENGINE = InnoDB,
 PARTITION p20180917 VALUES LESS THAN (737319) ENGINE = InnoDB,
 PARTITION p20180918 VALUES LESS THAN (737320) ENGINE = InnoDB,
 PARTITION p20180919 VALUES LESS THAN (737321) ENGINE = InnoDB,
 PARTITION p20180920 VALUES LESS THAN (737322) ENGINE = InnoDB,
 PARTITION p20180921 VALUES LESS THAN (737323) ENGINE = InnoDB,
 PARTITION p20180922 VALUES LESS THAN (737324) ENGINE = InnoDB,
 PARTITION p20180923 VALUES LESS THAN (737325) ENGINE = InnoDB,
 PARTITION p20180924 VALUES LESS THAN (737326) ENGINE = InnoDB,
 PARTITION p20180925 VALUES LESS THAN (737327) ENGINE = InnoDB,
 PARTITION p20180926 VALUES LESS THAN (737328) ENGINE = InnoDB,
 PARTITION p20180927 VALUES LESS THAN (737329) ENGINE = InnoDB,
 PARTITION p20180928 VALUES LESS THAN (737330) ENGINE = InnoDB,
 PARTITION p20180929 VALUES LESS THAN (737331) ENGINE = InnoDB,
 PARTITION p20180930 VALUES LESS THAN (737332) ENGINE = InnoDB,
 PARTITION p20181001 VALUES LESS THAN (737333) ENGINE = InnoDB,
 PARTITION p20181002 VALUES LESS THAN (737334) ENGINE = InnoDB,
 PARTITION p20181003 VALUES LESS THAN (737335) ENGINE = InnoDB,
 PARTITION p20181004 VALUES LESS THAN (737336) ENGINE = InnoDB,
 PARTITION p20181005 VALUES LESS THAN (737337) ENGINE = InnoDB,
 PARTITION p20181006 VALUES LESS THAN (737338) ENGINE = InnoDB,
 PARTITION p20181007 VALUES LESS THAN (737339) ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN (737340) ENGINE = InnoDB,
 PARTITION p20181009 VALUES LESS THAN (737341) ENGINE = InnoDB,
 PARTITION p20181010 VALUES LESS THAN (737342) ENGINE = InnoDB,
 PARTITION p20181011 VALUES LESS THAN (737343) ENGINE = InnoDB,
 PARTITION p20181012 VALUES LESS THAN (737344) ENGINE = InnoDB,
 PARTITION p20181013 VALUES LESS THAN (737345) ENGINE = InnoDB,
 PARTITION p20181014 VALUES LESS THAN (737346) ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN (737347) ENGINE = InnoDB,
 PARTITION p20181016 VALUES LESS THAN (737348) ENGINE = InnoDB,
 PARTITION p20181017 VALUES LESS THAN (737349) ENGINE = InnoDB,
 PARTITION p20181018 VALUES LESS THAN (737350) ENGINE = InnoDB,
 PARTITION p20181019 VALUES LESS THAN (737351) ENGINE = InnoDB,
 PARTITION p20181020 VALUES LESS THAN (737352) ENGINE = InnoDB,
 PARTITION p20181021 VALUES LESS THAN (737353) ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN (737354) ENGINE = InnoDB,
 PARTITION p20181023 VALUES LESS THAN (737355) ENGINE = InnoDB,
 PARTITION p20181024 VALUES LESS THAN (737356) ENGINE = InnoDB,
 PARTITION p20181025 VALUES LESS THAN (737357) ENGINE = InnoDB,
 PARTITION p20181026 VALUES LESS THAN (737358) ENGINE = InnoDB,
 PARTITION p20181027 VALUES LESS THAN (737359) ENGINE = InnoDB,
 PARTITION p20181028 VALUES LESS THAN (737360) ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN (737361) ENGINE = InnoDB,
 PARTITION p20181030 VALUES LESS THAN (737362) ENGINE = InnoDB,
 PARTITION p20181031 VALUES LESS THAN (737363) ENGINE = InnoDB,
 PARTITION p20181101 VALUES LESS THAN (737364) ENGINE = InnoDB,
 PARTITION p20181102 VALUES LESS THAN (737365) ENGINE = InnoDB,
 PARTITION p20181103 VALUES LESS THAN (737366) ENGINE = InnoDB,
 PARTITION p20181104 VALUES LESS THAN (737367) ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN (737368) ENGINE = InnoDB,
 PARTITION p20181106 VALUES LESS THAN (737369) ENGINE = InnoDB,
 PARTITION p20181107 VALUES LESS THAN (737370) ENGINE = InnoDB,
 PARTITION p20181108 VALUES LESS THAN (737371) ENGINE = InnoDB,
 PARTITION p20181109 VALUES LESS THAN (737372) ENGINE = InnoDB,
 PARTITION p20181110 VALUES LESS THAN (737373) ENGINE = InnoDB,
 PARTITION p20181111 VALUES LESS THAN (737374) ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN (737375) ENGINE = InnoDB,
 PARTITION p20181113 VALUES LESS THAN (737376) ENGINE = InnoDB,
 PARTITION p20181114 VALUES LESS THAN (737377) ENGINE = InnoDB,
 PARTITION p20181115 VALUES LESS THAN (737378) ENGINE = InnoDB,
 PARTITION p20181116 VALUES LESS THAN (737379) ENGINE = InnoDB,
 PARTITION p20181117 VALUES LESS THAN (737380) ENGINE = InnoDB,
 PARTITION p20181118 VALUES LESS THAN (737381) ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN (737382) ENGINE = InnoDB,
 PARTITION p20181120 VALUES LESS THAN (737383) ENGINE = InnoDB,
 PARTITION p20181121 VALUES LESS THAN (737384) ENGINE = InnoDB,
 PARTITION p20181122 VALUES LESS THAN (737385) ENGINE = InnoDB,
 PARTITION p20181123 VALUES LESS THAN (737386) ENGINE = InnoDB,
 PARTITION p20181124 VALUES LESS THAN (737387) ENGINE = InnoDB,
 PARTITION p20181125 VALUES LESS THAN (737388) ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN (737389) ENGINE = InnoDB,
 PARTITION p20181127 VALUES LESS THAN (737390) ENGINE = InnoDB,
 PARTITION p20181128 VALUES LESS THAN (737391) ENGINE = InnoDB,
 PARTITION p20181129 VALUES LESS THAN (737392) ENGINE = InnoDB,
 PARTITION p20181130 VALUES LESS THAN (737393) ENGINE = InnoDB,
 PARTITION p20181201 VALUES LESS THAN (737394) ENGINE = InnoDB,
 PARTITION p20181202 VALUES LESS THAN (737395) ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN (737396) ENGINE = InnoDB,
 PARTITION p20181204 VALUES LESS THAN (737397) ENGINE = InnoDB,
 PARTITION p20181205 VALUES LESS THAN (737398) ENGINE = InnoDB,
 PARTITION p20181206 VALUES LESS THAN (737399) ENGINE = InnoDB,
 PARTITION p20181207 VALUES LESS THAN (737400) ENGINE = InnoDB,
 PARTITION p20181208 VALUES LESS THAN (737401) ENGINE = InnoDB,
 PARTITION p20181209 VALUES LESS THAN (737402) ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN (737403) ENGINE = InnoDB,
 PARTITION p20181211 VALUES LESS THAN (737404) ENGINE = InnoDB,
 PARTITION p20181212 VALUES LESS THAN (737405) ENGINE = InnoDB,
 PARTITION p20181213 VALUES LESS THAN (737406) ENGINE = InnoDB,
 PARTITION p20181214 VALUES LESS THAN (737407) ENGINE = InnoDB,
 PARTITION p20181215 VALUES LESS THAN (737408) ENGINE = InnoDB,
 PARTITION p20181216 VALUES LESS THAN (737409) ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN (737410) ENGINE = InnoDB,
 PARTITION p20181218 VALUES LESS THAN (737411) ENGINE = InnoDB,
 PARTITION p20181219 VALUES LESS THAN (737412) ENGINE = InnoDB,
 PARTITION p20181220 VALUES LESS THAN (737413) ENGINE = InnoDB,
 PARTITION p20181221 VALUES LESS THAN (737414) ENGINE = InnoDB,
 PARTITION p20181222 VALUES LESS THAN (737415) ENGINE = InnoDB,
 PARTITION p20181223 VALUES LESS THAN (737416) ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN (737417) ENGINE = InnoDB,
 PARTITION p20181225 VALUES LESS THAN (737418) ENGINE = InnoDB,
 PARTITION p20181226 VALUES LESS THAN (737419) ENGINE = InnoDB,
 PARTITION p20181227 VALUES LESS THAN (737420) ENGINE = InnoDB,
 PARTITION p20181228 VALUES LESS THAN (737421) ENGINE = InnoDB,
 PARTITION p20181229 VALUES LESS THAN (737422) ENGINE = InnoDB,
 PARTITION p20181230 VALUES LESS THAN (737423) ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN (737424) ENGINE = InnoDB,
 PARTITION p20190101 VALUES LESS THAN (737425) ENGINE = InnoDB,
 PARTITION p20190102 VALUES LESS THAN (737426) ENGINE = InnoDB,
 PARTITION p20190103 VALUES LESS THAN (737427) ENGINE = InnoDB,
 PARTITION p20190104 VALUES LESS THAN (737428) ENGINE = InnoDB,
 PARTITION p20190105 VALUES LESS THAN (737429) ENGINE = InnoDB,
 PARTITION p20190106 VALUES LESS THAN (737430) ENGINE = InnoDB,
 PARTITION p20190107 VALUES LESS THAN (737431) ENGINE = InnoDB,
 PARTITION p20190108 VALUES LESS THAN (737432) ENGINE = InnoDB,
 PARTITION p20190109 VALUES LESS THAN (737433) ENGINE = InnoDB,
 PARTITION p20190110 VALUES LESS THAN (737434) ENGINE = InnoDB,
 PARTITION p20190111 VALUES LESS THAN (737435) ENGINE = InnoDB,
 PARTITION p20190112 VALUES LESS THAN (737436) ENGINE = InnoDB,
 PARTITION p20190113 VALUES LESS THAN (737437) ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN (737438) ENGINE = InnoDB,
 PARTITION p20190115 VALUES LESS THAN (737439) ENGINE = InnoDB,
 PARTITION p20190116 VALUES LESS THAN (737440) ENGINE = InnoDB,
 PARTITION p20190117 VALUES LESS THAN (737441) ENGINE = InnoDB,
 PARTITION p20190118 VALUES LESS THAN (737442) ENGINE = InnoDB,
 PARTITION p20190119 VALUES LESS THAN (737443) ENGINE = InnoDB,
 PARTITION p20190120 VALUES LESS THAN (737444) ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN (737445) ENGINE = InnoDB,
 PARTITION p20190122 VALUES LESS THAN (737446) ENGINE = InnoDB,
 PARTITION p20190123 VALUES LESS THAN (737447) ENGINE = InnoDB,
 PARTITION p20190124 VALUES LESS THAN (737448) ENGINE = InnoDB,
 PARTITION p20190125 VALUES LESS THAN (737449) ENGINE = InnoDB,
 PARTITION p20190126 VALUES LESS THAN (737450) ENGINE = InnoDB,
 PARTITION p20190127 VALUES LESS THAN (737451) ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN (737452) ENGINE = InnoDB,
 PARTITION p20190129 VALUES LESS THAN (737453) ENGINE = InnoDB,
 PARTITION p20190130 VALUES LESS THAN (737454) ENGINE = InnoDB,
 PARTITION p20190131 VALUES LESS THAN (737455) ENGINE = InnoDB,
 PARTITION p20190201 VALUES LESS THAN (737456) ENGINE = InnoDB,
 PARTITION p20190202 VALUES LESS THAN (737457) ENGINE = InnoDB,
 PARTITION p20190203 VALUES LESS THAN (737458) ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN (737459) ENGINE = InnoDB,
 PARTITION p20190205 VALUES LESS THAN (737460) ENGINE = InnoDB,
 PARTITION p20190206 VALUES LESS THAN (737461) ENGINE = InnoDB,
 PARTITION p20190207 VALUES LESS THAN (737462) ENGINE = InnoDB,
 PARTITION p20190208 VALUES LESS THAN (737463) ENGINE = InnoDB,
 PARTITION p20190209 VALUES LESS THAN (737464) ENGINE = InnoDB,
 PARTITION p20190210 VALUES LESS THAN (737465) ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN (737466) ENGINE = InnoDB,
 PARTITION p20190212 VALUES LESS THAN (737467) ENGINE = InnoDB,
 PARTITION p20190213 VALUES LESS THAN (737468) ENGINE = InnoDB,
 PARTITION p20190214 VALUES LESS THAN (737469) ENGINE = InnoDB,
 PARTITION p20190215 VALUES LESS THAN (737470) ENGINE = InnoDB,
 PARTITION p20190216 VALUES LESS THAN (737471) ENGINE = InnoDB,
 PARTITION p20190217 VALUES LESS THAN (737472) ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN (737473) ENGINE = InnoDB,
 PARTITION p20190219 VALUES LESS THAN (737474) ENGINE = InnoDB,
 PARTITION p20190220 VALUES LESS THAN (737475) ENGINE = InnoDB,
 PARTITION p20190221 VALUES LESS THAN (737476) ENGINE = InnoDB,
 PARTITION p20190222 VALUES LESS THAN (737477) ENGINE = InnoDB,
 PARTITION p20190223 VALUES LESS THAN (737478) ENGINE = InnoDB,
 PARTITION p20190224 VALUES LESS THAN (737479) ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN (737480) ENGINE = InnoDB,
 PARTITION p20190226 VALUES LESS THAN (737481) ENGINE = InnoDB,
 PARTITION p20190227 VALUES LESS THAN (737482) ENGINE = InnoDB,
 PARTITION p20190228 VALUES LESS THAN (737483) ENGINE = InnoDB,
 PARTITION p20190301 VALUES LESS THAN (737484) ENGINE = InnoDB,
 PARTITION p20190302 VALUES LESS THAN (737485) ENGINE = InnoDB,
 PARTITION p20190303 VALUES LESS THAN (737486) ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN (737487) ENGINE = InnoDB,
 PARTITION p20190305 VALUES LESS THAN (737488) ENGINE = InnoDB,
 PARTITION p20190306 VALUES LESS THAN (737489) ENGINE = InnoDB,
 PARTITION p20190307 VALUES LESS THAN (737490) ENGINE = InnoDB,
 PARTITION p20190308 VALUES LESS THAN (737491) ENGINE = InnoDB,
 PARTITION p20190309 VALUES LESS THAN (737492) ENGINE = InnoDB,
 PARTITION p20190310 VALUES LESS THAN (737493) ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN (737494) ENGINE = InnoDB,
 PARTITION p20190312 VALUES LESS THAN (737495) ENGINE = InnoDB,
 PARTITION p20190313 VALUES LESS THAN (737496) ENGINE = InnoDB,
 PARTITION p20190314 VALUES LESS THAN MAXVALUE ENGINE = InnoDB) */;

/*Table structure for table `stms_track_bak1227` */

DROP TABLE IF EXISTS `stms_track_bak1227`;

CREATE TABLE `stms_track_bak1227` (
  `id` bigint(30) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `stms_insert_time` datetime NOT NULL COMMENT 'STMS后台系统插入数据库的时间',
  `mainWaybillNo` varchar(50) NOT NULL COMMENT '运单号',
  `waybillNo` varchar(50) DEFAULT NULL COMMENT '操作对象号码',
  `barScanTm` datetime NOT NULL COMMENT '巴枪扫描时间',
  `opCode` varchar(150) NOT NULL COMMENT '操作码',
  `status` int(8) DEFAULT NULL COMMENT '推断状态，0 推断可信，1 推断新增，2 推断可疑，3 推断临时，4 推断整车可信，5 推断单件可信，6 过程可疑，7 广播可疑，8 升格可信，9 升格新增',
  `dataStatus` int(8) DEFAULT NULL COMMENT '1 有效,2 无效',
  `ordinal` bigint(18) DEFAULT NULL COMMENT '序号',
  `createTm` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间timestamp',
  `barRecordId` varchar(50) DEFAULT NULL COMMENT '数据的唯一编码',
  `zoneCode` varchar(100) DEFAULT NULL COMMENT '操作网点',
  `opAttachInfo` varchar(250) DEFAULT NULL COMMENT '操作附加信息',
  `courierCode` varchar(150) DEFAULT NULL COMMENT '收派员工号',
  `barOprCode` varchar(150) DEFAULT NULL COMMENT '操作员工号',
  `barUploadTm` datetime DEFAULT NULL COMMENT '巴枪上传时间',
  `objTypeCode` varchar(150) DEFAULT NULL COMMENT '操作对象类型',
  `contnrCode` varchar(150) DEFAULT NULL COMMENT '容器号',
  `payFlg` int(11) DEFAULT NULL COMMENT '是否已付款标识',
  `stayWhyCode` varchar(200) DEFAULT NULL COMMENT '滞留原因代码',
  `subbillPieceQty` int(11) DEFAULT NULL COMMENT '件数（字母件中的子件数量）',
  `barUploadTypeCode` int(11) DEFAULT NULL COMMENT '巴枪输入方法',
  `weightQty` decimal(10,4) DEFAULT NULL COMMENT '计费重量',
  `feeAmt` decimal(20,8) DEFAULT NULL COMMENT '运费',
  `accountantCode` varchar(200) DEFAULT NULL COMMENT '月结账号',
  `otherInfo` varchar(250) DEFAULT NULL COMMENT '其他信息',
  `opName` varchar(250) DEFAULT NULL COMMENT '操作名称',
  `zoneTypeCode` int(11) DEFAULT NULL COMMENT '所在地区类型',
  `encryptString` varchar(250) DEFAULT NULL COMMENT '加密串',
  `barSn` varchar(250) DEFAULT NULL COMMENT '设备号码，巴枪设备号',
  `scheduleCode` varchar(250) DEFAULT NULL COMMENT '班次',
  `signTypeCode` varchar(250) DEFAULT NULL COMMENT '未知作用',
  `srcContnrCode` varchar(250) DEFAULT NULL COMMENT '源车标号',
  `phoneZone` varchar(100) DEFAULT NULL COMMENT '电话区号',
  `phone` varchar(100) DEFAULT NULL COMMENT '电话号码',
  `stopOverFlg` int(11) DEFAULT NULL COMMENT '二程接驳:1 享受,0 不享受',
  `batchCode` varchar(200) DEFAULT NULL COMMENT '班次：中转班次、航空班次、报关批次、办事处班次',
  `destZoneCode` varchar(200) DEFAULT NULL COMMENT '目的地代码',
  `autoloading` varchar(200) DEFAULT NULL COMMENT '巴枪来源:1 DT900,2 DTX5,3 HHT,其他未知',
  `barScanDt` date NOT NULL COMMENT '巴枪扫描日期',
  `barUploadOprCode` varchar(200) DEFAULT NULL COMMENT '巴枪上传操作员工号',
  `extendAttach1` varchar(250) DEFAULT NULL COMMENT '扩展附加信息1',
  `extendAttach2` varchar(250) DEFAULT NULL COMMENT '扩展附加信息2',
  `extendAttach3` varchar(250) DEFAULT NULL COMMENT '扩展附加信息3',
  `extendAttach4` varchar(250) DEFAULT NULL COMMENT '扩展附加信息4',
  `extendAttach5` varchar(250) DEFAULT NULL COMMENT '扩展附加信息5',
  `extendAttach6` varchar(250) DEFAULT NULL COMMENT '扩展附加信息6',
  `extendAttach7` varchar(250) DEFAULT NULL COMMENT '扩展附加信息7',
  `barUploadTmStd` datetime DEFAULT NULL COMMENT '巴枪上传标准时间',
  `barScanTmStd` datetime DEFAULT NULL COMMENT '巴枪操作标准时间',
  `ext` varchar(300) DEFAULT NULL COMMENT '扩展字段存放 exts',
  `source` int(8) DEFAULT NULL,
  `originalBarcode` int(1) DEFAULT NULL COMMENT '是否解递归后的原始巴枪轨迹（是否是原始数据） 1:是,0:否',
  PRIMARY KEY (`id`,`barScanDt`),
  UNIQUE KEY `idx_mainWaybillNo_opCode_barScanTm_barScanDt` (`mainWaybillNo`,`opCode`,`barScanTm`,`barScanDt`) USING HASH,
  KEY `track_barScanTm_index` (`barScanTm`),
  KEY `track_waybill_index` (`mainWaybillNo`) USING HASH,
  KEY `track_opAttachInfo_index` (`opAttachInfo`) USING BTREE,
  KEY `track_contnrCode_index` (`contnrCode`) USING BTREE,
  KEY `track_comba_index` (`zoneCode`,`opCode`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=212176867 DEFAULT CHARSET=utf8 COMMENT='全量路由表'
/*!50100 PARTITION BY LIST (DAYOFYEAR(barScanDt))
(PARTITION p1 VALUES IN (1,2,3,4,5,6,7,91,92,93,94,95,96,97,182,183,184,185,186,187,188,274,275,276,277,278,279,280) ENGINE = MyISAM,
 PARTITION p2 VALUES IN (8,9,10,11,12,13,14,98,99,100,101,102,103,104,189,190,191,192,193,194,195,281,282,283,284,285,286,287) ENGINE = MyISAM,
 PARTITION p3 VALUES IN (15,16,17,18,19,20,21,105,106,107,108,109,110,111,196,197,198,199,200,201,202,288,289,290,291,292,293,294) ENGINE = MyISAM,
 PARTITION p4 VALUES IN (22,23,24,25,26,27,28,112,113,114,115,116,117,118,203,204,205,206,207,208,209,295,296,297,298,299,300,301) ENGINE = MyISAM,
 PARTITION p5 VALUES IN (29,30,31,119,120,210,211,212,302,303,304) ENGINE = MyISAM,
 PARTITION p6 VALUES IN (32,33,34,35,36,37,38,121,122,123,124,125,126,127,213,214,215,216,217,218,219,305,306,307,308,309,310,311) ENGINE = MyISAM,
 PARTITION p7 VALUES IN (39,40,41,42,43,44,45,128,129,130,131,132,133,134,220,221,222,223,224,225,226,312,313,314,315,316,317,318) ENGINE = MyISAM,
 PARTITION p8 VALUES IN (46,47,48,49,50,51,52,135,136,137,138,139,140,141,227,228,229,230,231,232,233,319,320,321,322,323,324,325) ENGINE = MyISAM,
 PARTITION p9 VALUES IN (53,54,55,56,57,58,59,142,143,144,145,146,147,148,234,235,236,237,238,239,240,326,327,328,329,330,331,332) ENGINE = MyISAM,
 PARTITION p10 VALUES IN (149,150,151,241,242,243,333,334) ENGINE = MyISAM,
 PARTITION p11 VALUES IN (60,61,62,63,64,65,66,152,153,154,155,156,157,158,244,245,246,247,248,249,250,335,336,337,338,339,340,341) ENGINE = MyISAM,
 PARTITION p12 VALUES IN (67,68,69,70,71,72,73,159,160,161,162,163,164,165,251,252,253,254,255,256,257,342,343,344,345,346,347,348) ENGINE = MyISAM,
 PARTITION p13 VALUES IN (74,75,76,77,78,79,80,166,167,168,169,170,171,172,258,259,260,261,262,263,264,349,350,351,352,353,354,355) ENGINE = MyISAM,
 PARTITION p14 VALUES IN (81,82,83,84,85,86,87,173,174,175,176,177,178,179,265,266,267,268,269,270,271,356,357,358,359,360,361,362) ENGINE = MyISAM,
 PARTITION p15 VALUES IN (88,89,90,180,181,272,273,363,364,365) ENGINE = MyISAM) */;

/*Table structure for table `stms_uupm_out_user_data_role` */

DROP TABLE IF EXISTS `stms_uupm_out_user_data_role`;

CREATE TABLE `stms_uupm_out_user_data_role` (
  `msg_id` bigint(18) unsigned NOT NULL AUTO_INCREMENT COMMENT '消息ID',
  `system_code` varchar(32) NOT NULL COMMENT '系统编码',
  `username` varchar(16) NOT NULL COMMENT '用户名',
  `data_role_id` bigint(18) unsigned NOT NULL COMMENT '数据角色ID',
  `oper_type` char(1) NOT NULL COMMENT '操作类型',
  `param` varchar(4000) DEFAULT NULL COMMENT '角色参数',
  `create_tm` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `net_code` varchar(150) DEFAULT NULL COMMENT '所属网点代码',
  PRIMARY KEY (`msg_id`),
  UNIQUE KEY `msg_id` (`msg_id`),
  KEY `idx_ta_out_user_data_role_1` (`system_code`,`create_tm`)
) ENGINE=InnoDB AUTO_INCREMENT=1774884 DEFAULT CHARSET=utf8 COMMENT='UUPM的下发用户数据角色';

/*Table structure for table `stms_uupm_out_user_role` */

DROP TABLE IF EXISTS `stms_uupm_out_user_role`;

CREATE TABLE `stms_uupm_out_user_role` (
  `msg_id` bigint(18) unsigned NOT NULL AUTO_INCREMENT COMMENT '消息ID',
  `system_code` varchar(32) NOT NULL COMMENT '系统编码',
  `username` varchar(16) NOT NULL COMMENT '用户名',
  `role_id` bigint(18) NOT NULL COMMENT '角色ID',
  `oper_type` char(1) NOT NULL COMMENT '操作类型',
  `create_tm` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`msg_id`),
  KEY `idx_ta_out_user_role_1` (`system_code`,`create_tm`),
  KEY `idx_role_Id` (`role_id`),
  KEY `idx_createTm` (`create_tm`)
) ENGINE=InnoDB AUTO_INCREMENT=1871635969 DEFAULT CHARSET=utf8 COMMENT='UUPM的下发用户功能角色';

/*Table structure for table `suspected_exception_reno` */

DROP TABLE IF EXISTS `suspected_exception_reno`;

CREATE TABLE `suspected_exception_reno` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `reported_id` bigint(11) DEFAULT NULL COMMENT '异常上报的id',
  `master_air_waybill_no` varchar(50) DEFAULT NULL COMMENT '主提单号',
  `main_waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `create_time` datetime DEFAULT NULL COMMENT '表的创建时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `reported_way_uni` (`reported_id`,`main_waybill_no`) USING HASH,
  KEY `idx_waybill_no` (`main_waybill_no`) USING HASH COMMENT '运单号普通索引'
) ENGINE=InnoDB AUTO_INCREMENT=2581 DEFAULT CHARSET=utf8 COMMENT='异常上报和单号联系';

/*Table structure for table `suspected_exception_reported` */

DROP TABLE IF EXISTS `suspected_exception_reported`;

CREATE TABLE `suspected_exception_reported` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `report_area` varchar(50) DEFAULT NULL COMMENT '上报地区',
  `report_ministry_area` varchar(50) DEFAULT NULL COMMENT '上报分点部',
  `report_perpson` varchar(50) DEFAULT NULL COMMENT '上报人',
  `contact_information` varchar(50) DEFAULT NULL COMMENT '联系方式',
  `occurrence_time` datetime DEFAULT NULL COMMENT '发生时间(当地时间)',
  `report_time` datetime DEFAULT NULL COMMENT '上报时间(当地时间)',
  `exception_category` int(5) NOT NULL DEFAULT '0' COMMENT '异常类别 :  0  是非营运  1 是营运',
  `exception_type` varchar(50) DEFAULT '0' COMMENT '异常类型 ： 0 是天气事故 ,1 是交通事故 ,2 是',
  `exception_decription` varchar(1000) DEFAULT NULL COMMENT '异常描述',
  `influence_range` varchar(200) DEFAULT NULL COMMENT '影响范围 ',
  `influence_aging` double(10,0) DEFAULT '0' COMMENT '受影响时效',
  `influence_poll` int(11) DEFAULT '0' COMMENT '受影响票数(统计运单号数量)',
  `follow_up_stuation` varchar(1000) DEFAULT NULL COMMENT '跟进情况',
  `estimated_recovery_duration` datetime DEFAULT '0000-00-00 00:00:00' COMMENT '预计恢复时间',
  `event_begin_area` varchar(50) DEFAULT NULL COMMENT '始发地的网点',
  `event_destination` varchar(50) DEFAULT NULL COMMENT '目的地网点',
  `master_air_waybill_st` int(5) DEFAULT '0' COMMENT '主提单号  0 未导入 ，1已导入 ',
  `main_waybill_st` int(5) DEFAULT '0' COMMENT '运单号  0 是未导入  1 是已导入',
  `create_time` datetime DEFAULT NULL COMMENT '表的创建时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=380 DEFAULT CHARSET=utf8 COMMENT='异常上报表';

/*Table structure for table `suspected_missed_detailed` */

DROP TABLE IF EXISTS `suspected_missed_detailed`;

CREATE TABLE `suspected_missed_detailed` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '序号',
  `stms_insert_time` datetime DEFAULT NULL COMMENT 'STMS入库时间',
  `stms_update_time` datetime DEFAULT NULL COMMENT 'STMS更新时间',
  `main_waybill_no` varchar(150) NOT NULL COMMENT '实际运单号（若是子母件中的母件，填母件的。若是子母件中的子件，填子件的）',
  `last_bar_scan_time_china` datetime DEFAULT NULL COMMENT '最后一个巴枪时间（北京时间）',
  `last_bar_scan_time` datetime DEFAULT NULL COMMENT '最后一个巴枪扫描时间（当地时间）',
  `suspected_missed_time` double(10,1) DEFAULT NULL COMMENT '疑似遗失时长（h）（当前时间-最后操作时间）',
  `warning_standard` varchar(100) DEFAULT NULL COMMENT '预警标准（BLUE-YELLOW-RED）',
  `warning_status` varchar(50) DEFAULT NULL COMMENT '预警状态（蓝BLUE,黄YELLOW,红RED,关闭CLOSED）',
  `handler_status` varchar(50) DEFAULT NULL COMMENT '处理状态（未处理、进行中、遗失、关闭）',
  `last_op_name` varchar(50) DEFAULT NULL COMMENT '最后操作名称',
  `last_op_code` varchar(50) DEFAULT NULL COMMENT '快件路由状态（最后操作节点，最后的操作码）',
  `last_zone_code` varchar(50) DEFAULT NULL COMMENT '最后一个网点代码',
  `check_network_code` varchar(50) DEFAULT NULL COMMENT '最新网点代码',
  `check_result` varchar(50) DEFAULT NULL COMMENT '最新核查结果',
  `check_detailed` text COMMENT '最后一次核查详情',
  `check_account` varchar(150) DEFAULT NULL COMMENT '最新核查人工号（自动关联登录账户）',
  `check_time` datetime DEFAULT NULL COMMENT '最新一次核查时间',
  `product_type` varchar(50) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(50) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_country` varchar(50) DEFAULT NULL COMMENT '原寄地国家',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_city` varchar(50) DEFAULT NULL COMMENT '原寄地城市',
  `dest_country_abb` varchar(50) DEFAULT NULL COMMENT '目的地国家简写',
  `dest_country` varchar(50) DEFAULT NULL COMMENT '目的地国家',
  `dest_city_code` varchar(50) DEFAULT NULL COMMENT '目的地城市代码',
  `dest_city` varchar(50) DEFAULT NULL COMMENT '目的地城市',
  `consign_content` text,
  `contnr_code` varchar(50) DEFAULT NULL COMMENT '车标号（容器号，30、31时为车标号）',
  `master_air_waybill_no` varchar(100) DEFAULT NULL COMMENT '主提单号（航空主提单号，航空运单号）',
  `proxy_waybill_no` varchar(100) DEFAULT NULL COMMENT '代理单号（海外代理派送自己生成的单号）',
  `mother_waybill_no` varchar(100) DEFAULT NULL COMMENT '母单号（若非子母件为null，若为子母件则填母件的运单号）',
  `suspected_missed_code` varchar(100) DEFAULT NULL COMMENT '疑似遗失代码（唯一标识）',
  `notice_emails` varchar(200) DEFAULT NULL COMMENT '通知人员邮件',
  `extend1` varchar(150) DEFAULT NULL COMMENT '扩展字段1',
  `extend2` varchar(150) DEFAULT NULL COMMENT '扩展字段2',
  `extend3` varchar(150) DEFAULT NULL COMMENT '扩展字段3',
  `extend4` varchar(150) DEFAULT NULL COMMENT '扩展字段4',
  `extend5` varchar(150) DEFAULT NULL COMMENT '扩展字段5',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_waybillNo_barScanTm_OpCode` (`main_waybill_no`,`last_bar_scan_time`,`last_op_code`) USING HASH,
  KEY `main_waybill_no` (`main_waybill_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1743249 DEFAULT CHARSET=utf8 COMMENT='疑似遗失明细表';

/*Table structure for table `suspected_missed_exception_message` */

DROP TABLE IF EXISTS `suspected_missed_exception_message`;

CREATE TABLE `suspected_missed_exception_message` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `main_waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `exception_message` varchar(21790) DEFAULT NULL COMMENT '异常消息',
  `stms_insert_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '插入时间（系统时间）',
  PRIMARY KEY (`id`,`stms_insert_time`),
  KEY `main_waybill_no` (`main_waybill_no`) USING BTREE,
  KEY `stms_insert_time` (`stms_insert_time`) USING BTREE,
  KEY `stms_insert_time_main_waybill_no` (`stms_insert_time`,`main_waybill_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=311566 DEFAULT CHARSET=utf8 COMMENT='异常信息表'
/*!50500 PARTITION BY RANGE  COLUMNS(stms_insert_time)
(PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `suspected_missed_re` */

DROP TABLE IF EXISTS `suspected_missed_re`;

CREATE TABLE `suspected_missed_re` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `missed_id` bigint(11) DEFAULT NULL COMMENT '疑似遗失的id',
  `check_zone_code` varchar(50) DEFAULT NULL COMMENT '核查网点代码',
  `check_result` varchar(50) DEFAULT NULL COMMENT '核查结果',
  `check_detailed` text COMMENT '核查详情',
  `check_account` varchar(50) DEFAULT NULL COMMENT '核查人工号',
  `create_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=121 DEFAULT CHARSET=utf8 COMMENT='核查详情表';

/*Table structure for table `take_over_exception` */

DROP TABLE IF EXISTS `take_over_exception`;

CREATE TABLE `take_over_exception` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `exception_date` datetime NOT NULL COMMENT '异常产生日期',
  `flight` varchar(25) DEFAULT NULL COMMENT '航班号',
  `origin` varchar(25) DEFAULT NULL COMMENT '原寄地',
  `destination` varchar(25) DEFAULT NULL COMMENT '目的地',
  `vehicle_id` varchar(25) DEFAULT NULL COMMENT '车标',
  `main_waybill` varchar(25) DEFAULT NULL COMMENT '航空主运单',
  `category` varchar(25) DEFAULT NULL COMMENT '异常类别',
  `amount` varchar(25) DEFAULT NULL COMMENT '异常票数(含子件)',
  `pending_detail` varchar(25) DEFAULT NULL COMMENT '未到快件明细',
  `exception_detail` varchar(250) DEFAULT NULL COMMENT '异常反馈(异常原因/快件状态/预计提货时间)',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `temp_overseas_aging_warning_detailed_b` */

DROP TABLE IF EXISTS `temp_overseas_aging_warning_detailed_b`;

CREATE TABLE `temp_overseas_aging_warning_detailed_b` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id主键',
  `source_country_code` varchar(10) DEFAULT NULL COMMENT '原寄地国家代码',
  `source_net_code` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `flight_arrival_time` date DEFAULT NULL COMMENT '航班落地日期(不包含时间)',
  `consignor_monthly_account_number` varchar(50) DEFAULT NULL COMMENT '寄件客户月结账号',
  `dest_country_abb` varchar(50) DEFAULT NULL COMMENT '目的地国家简码',
  `arrived_shipments` bigint(20) DEFAULT NULL COMMENT '抵达票数',
  `real_weight_qty` decimal(10,4) DEFAULT NULL COMMENT '实际重量(kg)',
  `meterage_weight_qty` decimal(10,4) DEFAULT NULL COMMENT '计费重量(kg)',
  `last_port_code` varchar(50) DEFAULT NULL COMMENT '出口清关口岸网点',
  `import_customs_code` varchar(50) DEFAULT NULL COMMENT '进口清关口岸网点',
  `customs_clearance_pattern` varchar(20) DEFAULT NULL COMMENT '清关模式 0:ECCF 1:CFS',
  `is_customs` varchar(20) DEFAULT NULL COMMENT '报关模式 0:正式报关 1：非正式报关',
  `product_code` varchar(20) DEFAULT NULL COMMENT '产品类型',
  `port_on_time` bigint(20) DEFAULT NULL COMMENT '口岸环节准点票数',
  `port_not_over_time` bigint(20) DEFAULT NULL COMMENT '口岸环节未超时票数',
  `port_node_overtime` bigint(20) DEFAULT NULL COMMENT '口岸环节有节点超时票数',
  `port_no_node_overtime` bigint(20) DEFAULT NULL COMMENT '口岸环节无节点超时票数',
  `transfer_on_time` bigint(20) DEFAULT NULL COMMENT '中转环节准点票数',
  `transfer_not_over_time` bigint(20) DEFAULT NULL COMMENT '中转环节未超时票数',
  `transfer_node_overtime` bigint(20) DEFAULT NULL COMMENT '中转环节有节点超时票数',
  `transfer_no_node_overtime` bigint(20) DEFAULT NULL COMMENT '中转环节无节点超时票数',
  PRIMARY KEY (`id`),
  KEY `index_consignor_monthly_account_number` (`consignor_monthly_account_number`) USING HASH,
  KEY `index_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `index_last_port_code` (`last_port_code`) USING HASH,
  KEY `index_import_customs_code` (`import_customs_code`) USING HASH,
  KEY `index_flight_arrival_time` (`flight_arrival_time`) USING BTREE,
  KEY `index_source_net_code` (`source_net_code`) USING HASH,
  KEY `index_source_country_code` (`source_country_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=367525 DEFAULT CHARSET=utf8 COMMENT='海外时效预警明细表_B线对应临时表';

/*Table structure for table `time_zone` */

DROP TABLE IF EXISTS `time_zone`;

CREATE TABLE `time_zone` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `country` varchar(50) DEFAULT NULL COMMENT '国家',
  `country_abb` varchar(50) DEFAULT NULL COMMENT '国家的简写',
  `province` varchar(50) DEFAULT NULL COMMENT '省',
  `province_code` varchar(50) DEFAULT NULL COMMENT '省代码',
  `city` varchar(50) DEFAULT NULL COMMENT '城市',
  `city_code` varchar(50) DEFAULT NULL COMMENT '城市代码',
  `time_zone` int(11) DEFAULT NULL COMMENT '时区',
  `insert_time` datetime DEFAULT NULL COMMENT '创建的时间',
  PRIMARY KEY (`id`),
  KEY `country_key` (`country`) USING BTREE,
  KEY `country_abb_key` (`country_abb`) USING BTREE,
  KEY `city_key` (`city`) USING BTREE,
  KEY `city_code_key` (`city_code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5493159174 DEFAULT CHARSET=utf8 COMMENT='时区表';

/*Table structure for table `timeline_monitor_standard` */

DROP TABLE IF EXISTS `timeline_monitor_standard`;

CREATE TABLE `timeline_monitor_standard` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键自增ID',
  `source_hq_code` varchar(50) DEFAULT NULL COMMENT '原寄地经营本部代码',
  `source_hq` varchar(100) DEFAULT NULL COMMENT '原寄地经营本部',
  `source_business_area_code` varchar(50) DEFAULT NULL COMMENT '原寄地业务区代码',
  `source_business_brea_name` varchar(100) DEFAULT NULL COMMENT '原寄地业务区名称',
  `source_city_code` varchar(50) DEFAULT NULL COMMENT '原寄地城市代码',
  `source_city_name` varchar(100) DEFAULT NULL COMMENT '原寄地城市名称',
  `source_net` varchar(50) DEFAULT NULL COMMENT '原寄地网点代码',
  `source_net_name` varchar(100) DEFAULT NULL COMMENT '原寄地网点名称',
  `product_type` varchar(25) DEFAULT NULL COMMENT '产品类型',
  `source_export_port` varchar(50) DEFAULT NULL COMMENT '原寄地出口口岸',
  `dest_country` varchar(50) DEFAULT NULL COMMENT '目的地国家',
  `mainland_receiv_standard` double(6,2) DEFAULT NULL COMMENT '大陆收件环节标准',
  `mainland_transfer_standard` double(6,2) DEFAULT NULL COMMENT '大陆中转环节标准',
  `mainland_port_standard` double(6,2) DEFAULT NULL COMMENT '大陆口岸环节标准',
  `mainland_to_take_off_standard` double(6,2) DEFAULT NULL COMMENT '大陆待起飞环节标准',
  `mainland_to_abroad_standard` double(6,2) DEFAULT NULL COMMENT '大陆至海外飞行环节标准',
  `mainland_full_standard` double(6,2) DEFAULT NULL COMMENT '大陆端整体时效',
  `abroad_port_standard` double(6,2) DEFAULT NULL COMMENT '海外口岸时效标准',
  `abroad_transfer_standard` double(6,2) DEFAULT NULL COMMENT '海外中转时效标准',
  `abroad_send_standard` double(6,2) DEFAULT NULL COMMENT '海外派送时效标准',
  `abroad_all_standard` double(6,2) DEFAULT NULL COMMENT '海外端整体时效标准',
  `abroad_hand_over_standard` double(6,2) DEFAULT NULL COMMENT '海外交接时效标准',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `source_net_dese_key` (`source_net`,`dest_country`,`product_type`) USING BTREE,
  KEY `source_hq_code_key` (`source_hq_code`) USING BTREE,
  KEY `source_hq_key` (`source_hq`) USING BTREE,
  KEY `source_business_area_code_key` (`source_business_area_code`) USING BTREE,
  KEY `source_business_brea_name_key` (`source_business_brea_name`) USING BTREE,
  KEY `source_city_code_key` (`source_city_code`) USING BTREE,
  KEY `source_city_name_key` (`source_city_name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=180552 DEFAULT CHARSET=utf8 COMMENT='时效监控标准';

/*Table structure for table `tm_department` */

DROP TABLE IF EXISTS `tm_department`;

CREATE TABLE `tm_department` (
  `dept_id` decimal(20,0) NOT NULL COMMENT '机构ID',
  `division_code` varchar(30) DEFAULT NULL COMMENT '所属分部编码',
  `area_code` varchar(30) DEFAULT NULL COMMENT '所属区部编码',
  `hq_code` varchar(30) DEFAULT NULL COMMENT '所属经营本部编码',
  `type_code` varchar(30) DEFAULT NULL COMMENT '机构类型ID',
  `dept_name` varchar(100) DEFAULT NULL COMMENT '机构名称',
  `dept_code` varchar(30) DEFAULT NULL COMMENT '机构编码-网络网点编号，例如：755A',
  `dept_desc` varchar(600) DEFAULT NULL COMMENT '描述',
  `created_emp_code` varchar(30) DEFAULT NULL COMMENT '创建人',
  `created_tm` date DEFAULT NULL COMMENT '创建时间',
  `modified_emp_code` varchar(30) DEFAULT NULL COMMENT '修改人',
  `modified_tm` date DEFAULT NULL COMMENT '修改时间',
  `valid_dt` date DEFAULT NULL COMMENT '启用日期',
  `currency_code` varchar(30) DEFAULT NULL COMMENT '币别编码',
  `dist_code` varchar(30) DEFAULT NULL COMMENT '行政区部编码',
  `phone_no` varchar(30) DEFAULT NULL COMMENT '电话',
  `fax_no` varchar(30) DEFAULT NULL COMMENT '传真',
  `contactor_name` varchar(100) DEFAULT NULL COMMENT '联系人名称',
  `delete_flg` decimal(1,0) DEFAULT '0' COMMENT '是否已删除',
  `invalid_tm` date DEFAULT NULL COMMENT '失效日期',
  `server_flg` decimal(1,0) DEFAULT '0' COMMENT '是否配置服务器',
  `parent_dept_code` varchar(30) DEFAULT NULL COMMENT '上级部门编码',
  `type_level` decimal(4,0) DEFAULT NULL COMMENT '类型层次',
  `account_code` varchar(30) DEFAULT NULL COMMENT '所属账套编号',
  `outside_name` varchar(200) DEFAULT NULL COMMENT '官网名称（对外名称）',
  `deldate` date DEFAULT NULL COMMENT '删除日期',
  `city_code` varchar(30) DEFAULT NULL COMMENT '城市代码',
  `dept_addr` varchar(300) DEFAULT NULL COMMENT '机构地址',
  `postal_code` varchar(30) DEFAULT NULL COMMENT '邮编',
  `outside_name_en` varchar(200) DEFAULT NULL COMMENT '对外英文名称',
  `email_addr` varchar(200) DEFAULT NULL COMMENT '对账邮箱地址',
  `belong_county` varchar(1000) DEFAULT NULL COMMENT '所属区/县/镇',
  `belong_village` varchar(1000) DEFAULT NULL COMMENT '所属乡/镇',
  `dept_gmt` decimal(2,0) DEFAULT NULL COMMENT '时区:GMT+-12',
  `shop_code` varchar(6) DEFAULT NULL COMMENT '顺丰店序列号',
  `longitude` bigint(15) DEFAULT NULL,
  `latitude` bigint(15) DEFAULT NULL,
  PRIMARY KEY (`dept_id`),
  KEY `parent_dept_code` (`parent_dept_code`),
  KEY `dept_code` (`dept_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='机构及网络网点表';

/*Table structure for table `track_link_config` */

DROP TABLE IF EXISTS `track_link_config`;

CREATE TABLE `track_link_config` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `track_link_name` varchar(100) DEFAULT NULL COMMENT '路由环节名称（中文）',
  `track_link_name_en` varchar(255) DEFAULT NULL COMMENT '路由环节名称（英文）',
  `remarks` varchar(500) DEFAULT NULL COMMENT '备注',
  `enable_status` int(1) DEFAULT NULL COMMENT '是否有效（0：是，1：否）',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `insert_time` datetime DEFAULT NULL COMMENT '插入时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `index_track_link_name` (`track_link_name`) USING BTREE COMMENT '路由环节名称（中文）唯一索引',
  KEY `index_track_link_name_en` (`track_link_name_en`) USING HASH COMMENT '路由环节名称（英文）普通索引'
) ENGINE=InnoDB AUTO_INCREMENT=80 DEFAULT CHARSET=utf8 COMMENT='路由环节配置表';

/*Table structure for table `transfer_dispach` */

DROP TABLE IF EXISTS `transfer_dispach`;

CREATE TABLE `transfer_dispach` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `dispach_code` varchar(50) DEFAULT NULL COMMENT '班次编码',
  `dispach_name` varchar(50) DEFAULT NULL COMMENT '班次名称',
  `dispach_level` varchar(20) DEFAULT NULL COMMENT '班次等级 0：一级中转，1：二级中转，2：三级中转',
  `gather_distribute_type` varchar(50) DEFAULT NULL COMMENT '集散类型 : 0:集散货，1：集货，2：散货',
  `opt_network` varchar(50) DEFAULT NULL COMMENT '操作网点',
  `goods_collection_label` varchar(50) DEFAULT NULL COMMENT '集货标签',
  `bulk_cargo_label` varchar(50) DEFAULT NULL COMMENT '散货标签',
  `schedule_start_time` time DEFAULT NULL COMMENT '规定开始时间',
  `last_time_arrival` time DEFAULT NULL COMMENT '最晚到达时间',
  `schedule_end_time` time DEFAULT NULL COMMENT '规定结束时间',
  `work_day` varchar(20) DEFAULT NULL COMMENT '适用工作日',
  PRIMARY KEY (`id`),
  KEY `idx_comb` (`opt_network`,`dispach_code`,`work_day`) USING HASH,
  KEY `inx_opt_network` (`opt_network`) USING HASH,
  KEY `idx_dispach_code` (`dispach_code`) USING HASH,
  KEY `idx_work_day` (`work_day`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=297 DEFAULT CHARSET=utf8 COMMENT='中转班次';

/*Table structure for table `transfer_warning_detail` */

DROP TABLE IF EXISTS `transfer_warning_detail`;

CREATE TABLE `transfer_warning_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `transfer_date` date DEFAULT NULL COMMENT '中转日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_city` varchar(10) DEFAULT NULL COMMENT '原寄地城市',
  `transfer_dept` varchar(30) DEFAULT NULL COMMENT '中转经营本部',
  `transfer_area` varchar(30) DEFAULT NULL COMMENT '中转地区',
  `transfer_network` varchar(30) DEFAULT NULL COMMENT '中转网点',
  `transfer_batch` varchar(30) DEFAULT NULL COMMENT '中转班次',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `dest_city` varchar(10) DEFAULT NULL COMMENT '目的地城市',
  `set_start_time` varchar(30) DEFAULT NULL COMMENT '规定开始时间',
  `latest_arrival_time` varchar(30) DEFAULT NULL COMMENT '最晚到达时间',
  `set_end_time` varchar(30) DEFAULT NULL COMMENT '规定结束时间',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `unload_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `unload_vehicle_logo` varchar(30) DEFAULT NULL COMMENT '卸车车标',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `load_vehicle_logo` varchar(30) DEFAULT NULL COMMENT '装车车标',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_reason` varchar(200) DEFAULT NULL COMMENT '滞留原因',
  `is_cross_day` int(1) DEFAULT NULL COMMENT '是否跨天，1：是，0：否',
  `actual_send_batch_date` date DEFAULT NULL COMMENT '实际发出班次日期',
  `actual_send_batch` varchar(30) DEFAULT NULL COMMENT '实际发出班次',
  `timeout_warning` varchar(30) DEFAULT NULL COMMENT '超时预警',
  `timeout` varchar(30) DEFAULT NULL COMMENT '超时',
  `last_link_network` varchar(30) DEFAULT NULL COMMENT '上环节网点',
  `last_link_network_batch` varchar(30) DEFAULT NULL COMMENT '上环节网点班次',
  `next_link_network` varchar(30) DEFAULT NULL COMMENT '下环节网点',
  `next_link_network_batch` varchar(30) DEFAULT NULL COMMENT '下环节网点班次',
  `is_present` int(1) DEFAULT '0' COMMENT '是否在场，0：其它，1：在场',
  `is_actual_to` int(1) DEFAULT '0' COMMENT '是否实到，0：其它，1：已到',
  `is_should_send` int(1) DEFAULT '0' COMMENT '是否应发，0：其它，1：已发',
  `is_timeout` int(1) DEFAULT '0' COMMENT '是否超时，0：其它，1：超时',
  `is_actual_send` int(1) DEFAULT '0' COMMENT '是否实发，0：其它，1：已发',
  `is_no_send` int(1) DEFAULT NULL COMMENT '是否未发，0:其它，1：未发',
  `is_multi_send` int(1) DEFAULT '0' COMMENT '是否多发，0：其它，1：是',
  `is_late_send` int(1) DEFAULT '0' COMMENT '是否晚发，0：其它，1：是',
  `is_retention` int(1) DEFAULT '0' COMMENT '是否滞留，0：其它，1：是',
  `is_capacity_match` int(1) DEFAULT '0' COMMENT '是否运力匹配，0：其它，1：是',
  `is_capacity_exception` int(1) DEFAULT '0' COMMENT '是否运力异常，0：其它，1：是',
  `is_total_sent` int(1) DEFAULT '0' COMMENT '是否累计已发，0：其它，1：是已发',
  `is_total_no_send` int(1) DEFAULT '0' COMMENT '是否累计未发，0：其它，1：是未发',
  `network_type` int(1) DEFAULT NULL COMMENT '网点类型，0：关务网点，1：中转网点',
  `transfer_to_job_days` int(5) DEFAULT '0' COMMENT '中转日期跟Job日期相差的天数',
  `transfer_sort` int(3) DEFAULT NULL COMMENT '中转顺序',
  `transfer_total` int(3) DEFAULT NULL COMMENT '中转总次数',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_comb_uq` (`main_waybill_no`,`transfer_network`,`transfer_batch`) USING BTREE,
  KEY `idx_transfer_date` (`transfer_date`) USING BTREE,
  KEY `idx_transfer_dept` (`transfer_dept`) USING HASH,
  KEY `idx_transfer_area` (`transfer_area`) USING HASH,
  KEY `idx_transfer_network` (`transfer_network`) USING HASH,
  KEY `idx_transfer_batch` (`transfer_batch`) USING HASH,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_network_type` (`network_type`) USING HASH,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_comb_batch_date` (`actual_send_batch_date`,`actual_send_batch`) USING HASH,
  KEY `idx_source_city` (`source_city`) USING HASH,
  KEY `idx_dest_city` (`dest_city`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=169 DEFAULT CHARSET=utf8 COMMENT='中转端预警明细表';

/*Table structure for table `transfer_warning_detail_bak` */

DROP TABLE IF EXISTS `transfer_warning_detail_bak`;

CREATE TABLE `transfer_warning_detail_bak` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `transfer_date` date DEFAULT NULL COMMENT '中转日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `transfer_dept` varchar(30) DEFAULT NULL COMMENT '中转经营本部',
  `transfer_area` varchar(30) DEFAULT NULL COMMENT '中转地区',
  `transfer_network` varchar(30) DEFAULT NULL COMMENT '中转网点',
  `transfer_batch` varchar(30) DEFAULT NULL COMMENT '中转班次',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `set_start_time` varchar(30) DEFAULT NULL COMMENT '规定开始时间',
  `latest_arrival_time` varchar(30) DEFAULT NULL COMMENT '最晚到达时间',
  `set_end_time` varchar(30) DEFAULT NULL COMMENT '规定结束时间',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `unload_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `unload_vehicle_logo` varchar(30) DEFAULT NULL COMMENT '卸车车标',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `load_vehicle_logo` varchar(30) DEFAULT NULL COMMENT '装车车标',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_reason` varchar(200) DEFAULT NULL COMMENT '滞留原因',
  `is_cross_day` int(1) DEFAULT NULL COMMENT '是否跨天，1：是，0：否',
  `actual_send_batch_date` date DEFAULT NULL COMMENT '实际发出班次日期',
  `actual_send_batch` varchar(30) DEFAULT NULL COMMENT '实际发出班次',
  `timeout_warning` varchar(30) DEFAULT NULL COMMENT '超时预警',
  `timeout` varchar(30) DEFAULT NULL COMMENT '超时',
  `last_link_network` varchar(30) DEFAULT NULL COMMENT '上环节网点',
  `last_link_network_batch` varchar(30) DEFAULT NULL COMMENT '上环节网点班次',
  `next_link_network` varchar(30) DEFAULT NULL COMMENT '下环节网点',
  `next_link_network_batch` varchar(30) DEFAULT NULL COMMENT '下环节网点班次',
  `is_present` int(1) DEFAULT '0' COMMENT '是否在场，0：其它，1：在场',
  `is_actual_to` int(1) DEFAULT '0' COMMENT '是否实到，0：其它，1：已到',
  `is_should_send` int(1) DEFAULT '0' COMMENT '是否应发，0：其它，1：已发',
  `is_timeout` int(1) DEFAULT '0' COMMENT '是否超时，0：其它，1：超时',
  `is_actual_send` int(1) DEFAULT '0' COMMENT '是否实发，0：其它，1：已发',
  `is_no_send` int(1) DEFAULT NULL COMMENT '是否未发，0:其它，1：未发',
  `is_multi_send` int(1) DEFAULT '0' COMMENT '是否多发，0：其它，1：是',
  `is_late_send` int(1) DEFAULT '0' COMMENT '是否晚发，0：其它，1：是',
  `is_retention` int(1) DEFAULT '0' COMMENT '是否滞留，0：其它，1：是',
  `is_capacity_match` int(1) DEFAULT '0' COMMENT '是否运力匹配，0：其它，1：是',
  `is_capacity_exception` int(1) DEFAULT '0' COMMENT '是否运力异常，0：其它，1：是',
  `is_total_sent` int(1) DEFAULT '0' COMMENT '是否累计已发，0：其它，1：是已发',
  `is_total_no_send` int(1) DEFAULT '0' COMMENT '是否累计未发，0：其它，1：是未发',
  `network_type` int(1) DEFAULT NULL COMMENT '网点类型，0：关务网点，1：中转网点',
  `transfer_to_job_days` int(5) DEFAULT '0' COMMENT '中转日期跟Job日期相差的天数',
  `transfer_sort` int(3) DEFAULT NULL COMMENT '中转顺序',
  `transfer_total` int(3) DEFAULT NULL COMMENT '中转总次数',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_comb_uq` (`main_waybill_no`,`transfer_network`,`unload_time`) USING HASH,
  KEY `idx_transfer_date` (`transfer_date`) USING BTREE,
  KEY `idx_transfer_dept` (`transfer_dept`) USING HASH,
  KEY `idx_transfer_area` (`transfer_area`) USING HASH,
  KEY `idx_transfer_network` (`transfer_network`) USING HASH,
  KEY `idx_transfer_batch` (`transfer_batch`) USING HASH,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_network_type` (`network_type`) USING HASH,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_comb_batch_date` (`actual_send_batch_date`,`actual_send_batch`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=3092399 DEFAULT CHARSET=utf8 COMMENT='中转端预警明细表';

/*Table structure for table `transfer_warning_detail_temp` */

DROP TABLE IF EXISTS `transfer_warning_detail_temp`;

CREATE TABLE `transfer_warning_detail_temp` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `transfer_date` date DEFAULT NULL COMMENT '中转日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `transfer_dept` varchar(30) DEFAULT NULL COMMENT '中转经营本部',
  `transfer_area` varchar(30) DEFAULT NULL COMMENT '中转地区',
  `transfer_network` varchar(30) DEFAULT NULL COMMENT '中转网点',
  `transfer_batch` varchar(30) DEFAULT NULL COMMENT '中转班次',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `set_start_time` varchar(30) DEFAULT NULL COMMENT '规定开始时间',
  `latest_arrival_time` varchar(30) DEFAULT NULL COMMENT '最晚到达时间',
  `set_end_time` varchar(30) DEFAULT NULL COMMENT '规定结束时间',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `unload_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `unload_vehicle_logo` varchar(30) DEFAULT NULL COMMENT '卸车车标',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `load_vehicle_logo` varchar(30) DEFAULT NULL COMMENT '装车车标',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_reason` varchar(200) DEFAULT NULL COMMENT '滞留原因',
  `is_cross_day` int(1) DEFAULT NULL COMMENT '是否跨天，1：是，0：否',
  `actual_send_batch_date` date DEFAULT NULL COMMENT '实际发出班次日期',
  `actual_send_batch` varchar(30) DEFAULT NULL COMMENT '实际发出班次',
  `timeout_warning` varchar(30) DEFAULT NULL COMMENT '超时预警',
  `timeout` varchar(30) DEFAULT NULL COMMENT '超时',
  `last_link_network` varchar(30) DEFAULT NULL COMMENT '上环节网点',
  `last_link_network_batch` varchar(30) DEFAULT NULL COMMENT '上环节网点班次',
  `next_link_network` varchar(30) DEFAULT NULL COMMENT '下环节网点',
  `next_link_network_batch` varchar(30) DEFAULT NULL COMMENT '下环节网点班次',
  `is_present` int(1) DEFAULT '0' COMMENT '是否在场，0：其它，1：在场',
  `is_actual_to` int(1) DEFAULT '0' COMMENT '是否实到，0：其它，1：已到',
  `is_should_send` int(1) DEFAULT '0' COMMENT '是否应发，0：其它，1：已发',
  `is_timeout` int(1) DEFAULT '0' COMMENT '是否超时，0：其它，1：超时',
  `is_actual_send` int(1) DEFAULT '0' COMMENT '是否实发，0：其它，1：已发',
  `is_no_send` int(1) DEFAULT NULL COMMENT '是否未发，0:其它，1：未发',
  `is_multi_send` int(1) DEFAULT '0' COMMENT '是否多发，0：其它，1：是',
  `is_late_send` int(1) DEFAULT '0' COMMENT '是否晚发，0：其它，1：是',
  `is_retention` int(1) DEFAULT '0' COMMENT '是否滞留，0：其它，1：是',
  `is_capacity_match` int(1) DEFAULT '0' COMMENT '是否运力匹配，0：其它，1：是',
  `is_capacity_exception` int(1) DEFAULT '0' COMMENT '是否运力异常，0：其它，1：是',
  `is_total_sent` int(1) DEFAULT '0' COMMENT '是否累计已发，0：其它，1：是已发',
  `is_total_no_send` int(1) DEFAULT '0' COMMENT '是否累计未发，0：其它，1：是未发',
  `network_type` int(1) DEFAULT NULL COMMENT '网点类型，0：关务网点，1：中转网点',
  `transfer_to_job_days` int(5) DEFAULT '0' COMMENT '中转日期跟Job日期相差的天数',
  `transfer_sort` int(3) DEFAULT NULL COMMENT '中转顺序',
  `transfer_total` int(3) DEFAULT NULL COMMENT '中转总次数',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_comb_uq` (`main_waybill_no`,`transfer_network`,`unload_time`) USING HASH,
  KEY `idx_transfer_date` (`transfer_date`) USING BTREE,
  KEY `idx_transfer_dept` (`transfer_dept`) USING HASH,
  KEY `idx_transfer_area` (`transfer_area`) USING HASH,
  KEY `idx_transfer_network` (`transfer_network`) USING HASH,
  KEY `idx_transfer_batch` (`transfer_batch`) USING HASH,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_network_type` (`network_type`) USING HASH,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_comb_batch_date` (`actual_send_batch_date`,`actual_send_batch`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=3092399 DEFAULT CHARSET=utf8 COMMENT='中转端预警明细临时表';

/*Table structure for table `transfer_warning_detail_tmp` */

DROP TABLE IF EXISTS `transfer_warning_detail_tmp`;

CREATE TABLE `transfer_warning_detail_tmp` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `transfer_date` date DEFAULT NULL COMMENT '中转日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `transfer_dept` varchar(30) DEFAULT NULL COMMENT '中转经营本部',
  `transfer_area` varchar(30) DEFAULT NULL COMMENT '中转地区',
  `transfer_network` varchar(30) DEFAULT NULL COMMENT '中转网点',
  `transfer_batch` varchar(30) DEFAULT NULL COMMENT '中转班次',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `set_start_time` varchar(30) DEFAULT NULL COMMENT '规定开始时间',
  `latest_arrival_time` varchar(30) DEFAULT NULL COMMENT '最晚到达时间',
  `set_end_time` varchar(30) DEFAULT NULL COMMENT '规定结束时间',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `unload_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `unload_vehicle_logo` varchar(30) DEFAULT NULL COMMENT '卸车车标',
  `load_time` datetime DEFAULT NULL COMMENT '装车时间',
  `load_vehicle_logo` varchar(30) DEFAULT NULL COMMENT '装车车标',
  `retention_time` datetime DEFAULT NULL COMMENT '滞留时间',
  `retention_reason` varchar(200) DEFAULT NULL COMMENT '滞留原因',
  `is_cross_day` int(1) DEFAULT NULL COMMENT '是否跨天，1：是，0：否',
  `actual_send_batch_date` date DEFAULT NULL COMMENT '实际发出班次日期',
  `actual_send_batch` varchar(30) DEFAULT NULL COMMENT '实际发出班次',
  `timeout_warning` varchar(30) DEFAULT NULL COMMENT '超时预警',
  `timeout` varchar(30) DEFAULT NULL COMMENT '超时',
  `last_link_network` varchar(30) DEFAULT NULL COMMENT '上环节网点',
  `last_link_network_batch` varchar(30) DEFAULT NULL COMMENT '上环节网点班次',
  `next_link_network` varchar(30) DEFAULT NULL COMMENT '下环节网点',
  `next_link_network_batch` varchar(30) DEFAULT NULL COMMENT '下环节网点班次',
  `is_present` int(1) DEFAULT '0' COMMENT '是否在场，0：其它，1：在场',
  `is_actual_to` int(1) DEFAULT '0' COMMENT '是否实到，0：其它，1：已到',
  `is_should_send` int(1) DEFAULT '0' COMMENT '是否应发，0：其它，1：已发',
  `is_timeout` int(1) DEFAULT '0' COMMENT '是否超时，0：其它，1：超时',
  `is_actual_send` int(1) DEFAULT '0' COMMENT '是否实发，0：其它，1：已发',
  `is_no_send` int(1) DEFAULT NULL COMMENT '是否未发，0:其它，1：未发',
  `is_multi_send` int(1) DEFAULT '0' COMMENT '是否多发，0：其它，1：是',
  `is_late_send` int(1) DEFAULT '0' COMMENT '是否晚发，0：其它，1：是',
  `is_retention` int(1) DEFAULT '0' COMMENT '是否滞留，0：其它，1：是',
  `is_capacity_match` int(1) DEFAULT '0' COMMENT '是否运力匹配，0：其它，1：是',
  `is_capacity_exception` int(1) DEFAULT '0' COMMENT '是否运力异常，0：其它，1：是',
  `is_total_sent` int(1) DEFAULT '0' COMMENT '是否累计已发，0：其它，1：是已发',
  `is_total_no_send` int(1) DEFAULT '0' COMMENT '是否累计未发，0：其它，1：是未发',
  `network_type` int(1) DEFAULT NULL COMMENT '网点类型，0：关务网点，1：中转网点',
  `transfer_to_job_days` int(5) DEFAULT '0' COMMENT '中转日期跟Job日期相差的天数',
  `transfer_sort` int(3) DEFAULT NULL COMMENT '中转顺序',
  `transfer_total` int(3) DEFAULT NULL COMMENT '中转总次数',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `wrong_reason_note` varchar(200) DEFAULT NULL COMMENT '错误原因备注',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_transfer_date` (`transfer_date`) USING BTREE,
  KEY `idx_transfer_dept` (`transfer_dept`) USING HASH,
  KEY `idx_transfer_area` (`transfer_area`) USING HASH,
  KEY `idx_transfer_network` (`transfer_network`) USING HASH,
  KEY `idx_transfer_batch` (`transfer_batch`) USING HASH,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_network_type` (`network_type`) USING HASH,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_comb_batch_date` (`actual_send_batch_date`,`actual_send_batch`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=86 DEFAULT CHARSET=utf8 COMMENT='中转端预警明细表';

/*Table structure for table `transfer_warning_monitor` */

DROP TABLE IF EXISTS `transfer_warning_monitor`;

CREATE TABLE `transfer_warning_monitor` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `transfer_date` date NOT NULL DEFAULT '0000-00-00' COMMENT '中转日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `transfer_dept` varchar(30) DEFAULT NULL COMMENT '中转经营本部',
  `transfer_area` varchar(30) DEFAULT NULL COMMENT '中转地区',
  `transfer_network` varchar(30) DEFAULT NULL COMMENT '中转网点',
  `transfer_batch` varchar(30) DEFAULT NULL COMMENT '中转班次',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `present_count` int(10) DEFAULT NULL COMMENT '在场票数',
  `present_weight` double(17,3) DEFAULT NULL COMMENT '在场计费重量',
  `actual_to_count` int(10) DEFAULT NULL COMMENT '实到票数',
  `actual_to_weight` double(17,3) DEFAULT NULL COMMENT '实到计费重量',
  `should_send_count` int(10) DEFAULT NULL COMMENT '应发票数',
  `timeout_warning_count` int(10) DEFAULT NULL COMMENT '超时预警票数',
  `timeout_count` int(10) DEFAULT NULL COMMENT '超时票数',
  `actual_send_count` int(10) DEFAULT NULL COMMENT '实发票数',
  `actual_send_weight` double(17,3) DEFAULT NULL COMMENT '实发计费重量',
  `no_send_count` int(10) DEFAULT NULL COMMENT '未发票数',
  `multi_send_count` int(10) DEFAULT NULL COMMENT '多发票数',
  `late_send_count` int(10) DEFAULT NULL COMMENT '晚发票数',
  `retention_count` int(10) DEFAULT NULL COMMENT '滞留票数',
  `capacity_match_count` int(10) DEFAULT NULL COMMENT '运力匹配票数',
  `capacity_exception_count` int(10) DEFAULT NULL COMMENT '运力异常票数',
  `total_sent_count` int(10) DEFAULT NULL COMMENT '累计已发票数',
  `total_no_send_count` int(10) DEFAULT NULL COMMENT '累计未发票数',
  `network_type` int(1) DEFAULT NULL COMMENT '网点类型，0：关务网点，1：中转网点',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `source_city` varchar(10) DEFAULT NULL COMMENT '原寄地城市',
  `dest_city` varchar(10) DEFAULT NULL COMMENT '目的地城市',
  PRIMARY KEY (`id`,`transfer_date`),
  KEY `idx_transfer_date` (`transfer_date`) USING BTREE,
  KEY `idx_transfer_dept` (`transfer_dept`) USING HASH,
  KEY `idx_transfer_area` (`transfer_area`) USING HASH,
  KEY `idx_transfer_network` (`transfer_network`) USING HASH,
  KEY `idx_transfer_batch` (`transfer_batch`) USING HASH,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_network_type` (`network_type`) USING HASH,
  KEY `idx_source_city` (`source_city`) USING HASH,
  KEY `idx_dest_city` (`dest_city`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=80094 DEFAULT CHARSET=utf8 COMMENT='中转端预警汇总表'
/*!50500 PARTITION BY RANGE  COLUMNS(transfer_date)
(PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `transfer_warning_monitor_backup20181205` */

DROP TABLE IF EXISTS `transfer_warning_monitor_backup20181205`;

CREATE TABLE `transfer_warning_monitor_backup20181205` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `transfer_date` date DEFAULT NULL COMMENT '中转日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `transfer_dept` varchar(30) DEFAULT NULL COMMENT '中转经营本部',
  `transfer_area` varchar(30) DEFAULT NULL COMMENT '中转地区',
  `transfer_network` varchar(30) DEFAULT NULL COMMENT '中转网点',
  `transfer_batch` varchar(30) DEFAULT NULL COMMENT '中转班次',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `present_count` int(10) DEFAULT NULL COMMENT '在场票数',
  `present_weight` double(17,3) DEFAULT NULL COMMENT '在场计费重量',
  `actual_to_count` int(10) DEFAULT NULL COMMENT '实到票数',
  `actual_to_weight` double(17,3) DEFAULT NULL COMMENT '实到计费重量',
  `should_send_count` int(10) DEFAULT NULL COMMENT '应发票数',
  `timeout_warning_count` int(10) DEFAULT NULL COMMENT '超时预警票数',
  `timeout_count` int(10) DEFAULT NULL COMMENT '超时票数',
  `actual_send_count` int(10) DEFAULT NULL COMMENT '实发票数',
  `actual_send_weight` double(17,3) DEFAULT NULL COMMENT '实发计费重量',
  `no_send_count` int(10) DEFAULT NULL COMMENT '未发票数',
  `multi_send_count` int(10) DEFAULT NULL COMMENT '多发票数',
  `late_send_count` int(10) DEFAULT NULL COMMENT '晚发票数',
  `retention_count` int(10) DEFAULT NULL COMMENT '滞留票数',
  `capacity_match_count` int(10) DEFAULT NULL COMMENT '运力匹配票数',
  `capacity_exception_count` int(10) DEFAULT NULL COMMENT '运力异常票数',
  `total_sent_count` int(10) DEFAULT NULL COMMENT '累计已发票数',
  `total_no_send_count` int(10) DEFAULT NULL COMMENT '累计未发票数',
  `network_type` int(1) DEFAULT NULL COMMENT '网点类型，0：关务网点，1：中转网点',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `source_city` varchar(10) DEFAULT NULL COMMENT '原寄地城市',
  `dest_city` varchar(10) DEFAULT NULL COMMENT '目的地城市',
  PRIMARY KEY (`id`),
  KEY `idx_transfer_date` (`transfer_date`) USING BTREE,
  KEY `idx_transfer_dept` (`transfer_dept`) USING HASH,
  KEY `idx_transfer_area` (`transfer_area`) USING HASH,
  KEY `idx_transfer_network` (`transfer_network`) USING HASH,
  KEY `idx_transfer_batch` (`transfer_batch`) USING HASH,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_network_type` (`network_type`) USING HASH,
  KEY `idx_source_city` (`source_city`) USING HASH,
  KEY `idx_dest_city` (`dest_city`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=43933469 DEFAULT CHARSET=utf8 COMMENT='中转端预警表';

/*Table structure for table `ts_datadict` */

DROP TABLE IF EXISTS `ts_datadict`;

CREATE TABLE `ts_datadict` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `dt_name` varchar(100) DEFAULT NULL COMMENT '数据名称',
  `dt_key` varchar(100) DEFAULT NULL COMMENT '数据key',
  `dt_value` varchar(512) DEFAULT NULL COMMENT '数据value',
  `dt_language` varchar(10) DEFAULT NULL COMMENT '数据语言（中文:zh_CN，英文:en）',
  `dt_remarks` varchar(512) DEFAULT NULL COMMENT '备注',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=982 DEFAULT CHARSET=utf8 COMMENT='数据字典表';

/*Table structure for table `ts_module` */

DROP TABLE IF EXISTS `ts_module`;

CREATE TABLE `ts_module` (
  `MODULE_ID` bigint(18) unsigned NOT NULL COMMENT '功能模块ID',
  `PARENT_ID` bigint(18) unsigned DEFAULT NULL COMMENT '父功能模块ID，没有父模块时为空',
  `MODULE_NAME` varchar(120) DEFAULT NULL COMMENT '名称，默认用于展示的文字',
  `SYS_CODE` varchar(100) NOT NULL COMMENT '系统编码，英文数字下划线组成',
  `MODULE_CODE` varchar(100) NOT NULL COMMENT '模块代码，英文数字下划线组成',
  `MODULE_DESC` varchar(600) DEFAULT NULL COMMENT '描述文字',
  `MODULE_ICON` varchar(300) DEFAULT NULL COMMENT '图标，相对根路径的地址，或者外链',
  `MODULE_TYPE` tinyint(3) unsigned NOT NULL COMMENT '类型 1项目根类型 2子系统  3菜单目录 4页面按钮，权限等',
  `APP_TYPE` tinyint(3) unsigned NOT NULL COMMENT '功能类型 1.PC WEB 2.手机WEB',
  `ACTION_URL` varchar(300) DEFAULT NULL COMMENT '功能请求链接，相对根路径的地址',
  `SORT` tinyint(3) unsigned NOT NULL COMMENT '排序序号',
  `HELP_URL` varchar(300) DEFAULT NULL COMMENT '帮助链接，相对根路径的地址，或者外链',
  PRIMARY KEY (`MODULE_ID`),
  UNIQUE KEY `IDX_MODULE` (`SYS_CODE`(30),`MODULE_CODE`(30)),
  KEY `PARENT_ID` (`PARENT_ID`),
  CONSTRAINT `ts_module_ibfk_1` FOREIGN KEY (`PARENT_ID`) REFERENCES `ts_module` (`MODULE_ID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='功能模块表';

/*Table structure for table `ts_parameter_config` */

DROP TABLE IF EXISTS `ts_parameter_config`;

CREATE TABLE `ts_parameter_config` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(100) DEFAULT NULL COMMENT '名称',
  `sys_key` varchar(100) DEFAULT NULL COMMENT 'key值',
  `sys_value` varchar(2000) DEFAULT NULL COMMENT '键值',
  `remark` varchar(300) DEFAULT NULL COMMENT '备注',
  `is_encrypt` int(1) NOT NULL DEFAULT '0' COMMENT '是否加密,0-不加，1，加',
  `operator` varchar(50) DEFAULT NULL COMMENT '操作人',
  `operation_time` datetime DEFAULT NULL COMMENT '操作时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `index_sys_key` (`sys_key`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8 COMMENT='参数配置表';

/*Table structure for table `ts_role` */

DROP TABLE IF EXISTS `ts_role`;

CREATE TABLE `ts_role` (
  `ROLE_ID` bigint(18) unsigned NOT NULL AUTO_INCREMENT COMMENT '角色ID',
  `ROLE_CODE` varchar(100) NOT NULL COMMENT '代码，英文数字下划线组成',
  `ROLE_NAME` varchar(300) DEFAULT NULL COMMENT '名称，默认用于展示的文字',
  `ROLE_DESC` varchar(1200) DEFAULT NULL COMMENT '描述文字',
  `ROLE_TYPE` tinyint(3) unsigned NOT NULL COMMENT '角色类型：1.ADMIN角色，2.子管理员角色 ，3.普通角色；',
  `SYS_FLAG` tinyint(1) unsigned DEFAULT '0' COMMENT '是否内置角色：0否，1是 ',
  `MODIFIER_USER` varchar(30) DEFAULT NULL COMMENT '更新者用户账号',
  `MODIFY_TM` datetime DEFAULT NULL COMMENT '更新时间',
  `CREATOR_USER` varchar(30) DEFAULT NULL COMMENT '创建者用户账号',
  `CREATE_TM` datetime DEFAULT NULL COMMENT '创建时间',
  `STATUS` tinyint(1) unsigned NOT NULL COMMENT '状态：无效0，有效1',
  PRIMARY KEY (`ROLE_ID`),
  UNIQUE KEY `ROLE_CODE` (`ROLE_CODE`)
) ENGINE=InnoDB AUTO_INCREMENT=50 DEFAULT CHARSET=utf8 COMMENT='角色表';

/*Table structure for table `ts_role_module` */

DROP TABLE IF EXISTS `ts_role_module`;

CREATE TABLE `ts_role_module` (
  `ROLE_ID` bigint(18) unsigned NOT NULL COMMENT '角色ID',
  `MODULE_ID` bigint(18) unsigned NOT NULL COMMENT '功能模块ID',
  `MODIFIER_USER` varchar(30) DEFAULT NULL COMMENT '更新者用户账号',
  `MODIFY_TM` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`ROLE_ID`,`MODULE_ID`),
  KEY `ROLE_ID` (`ROLE_ID`),
  KEY `MODULE_ID` (`MODULE_ID`),
  CONSTRAINT `ts_role_module_ibfk_1` FOREIGN KEY (`ROLE_ID`) REFERENCES `ts_role` (`ROLE_ID`) ON DELETE CASCADE,
  CONSTRAINT `ts_role_module_ibfk_2` FOREIGN KEY (`MODULE_ID`) REFERENCES `ts_module` (`MODULE_ID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='角色功能关联表';

/*Table structure for table `ts_sync_lock` */

DROP TABLE IF EXISTS `ts_sync_lock`;

CREATE TABLE `ts_sync_lock` (
  `LOCK_CODE` varchar(30) NOT NULL COMMENT '锁名称，英文、数字、下划线组成',
  `INSTANCE_ID` varchar(100) DEFAULT NULL COMMENT '获取锁的节点运行实例ID',
  `LAST_ALIVE_TM` datetime DEFAULT NULL COMMENT '最后活跃时间',
  `LOCK_TM` datetime DEFAULT NULL COMMENT '获取锁时间',
  `LOCK_STATE` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '锁定状态：1锁定 0未锁定',
  PRIMARY KEY (`LOCK_CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='多节点同步锁表';

/*Table structure for table `ts_user` */

DROP TABLE IF EXISTS `ts_user`;

CREATE TABLE `ts_user` (
  `USER_ID` bigint(18) unsigned NOT NULL AUTO_INCREMENT COMMENT '用户ID',
  `USERNAME` varchar(100) NOT NULL COMMENT '登录名/账号',
  `TYPE_CODE` tinyint(1) NOT NULL COMMENT '用户类型编码 1-域用户账号 0-非域用户账号',
  `PWD` varchar(500) DEFAULT NULL COMMENT '密码，仅在自己校验是保存密码',
  `PWD_MODIFY_TM` date DEFAULT NULL COMMENT '密码修改时间',
  `STATUS` tinyint(1) unsigned NOT NULL COMMENT '状态：无效0，有效1',
  `ACTIVE_TM` date DEFAULT NULL COMMENT '启用时间',
  `DEACTIVE_TM` date DEFAULT NULL COMMENT '停用时间',
  `MODIFIER_USER` varchar(100) DEFAULT NULL COMMENT '更新者用户账号',
  `MODIFY_TM` datetime DEFAULT NULL COMMENT '更新时间',
  `CREATOR_USER` varchar(30) DEFAULT NULL COMMENT '创建者用户账号',
  `CREATE_TM` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`USER_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=24838 DEFAULT CHARSET=utf8 COMMENT='用户表';

/*Table structure for table `ts_user_role` */

DROP TABLE IF EXISTS `ts_user_role`;

CREATE TABLE `ts_user_role` (
  `USER_ID` bigint(18) unsigned NOT NULL COMMENT '用户ID',
  `ROLE_ID` bigint(18) unsigned NOT NULL COMMENT '角色ID',
  `IS_DEFAULT` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否默认角色：1是 0否',
  `EXP_DATE` date DEFAULT NULL COMMENT '过期日期，有效期至',
  `MODIFIER_USER` varchar(30) DEFAULT NULL COMMENT '更新者用户账号',
  `MODIFY_TM` datetime DEFAULT NULL COMMENT '更新时间',
  `SYS_CODE` varchar(100) NOT NULL DEFAULT '*' COMMENT '系统编码，当是默认角色时，可指定系统编码',
  PRIMARY KEY (`USER_ID`,`ROLE_ID`,`SYS_CODE`),
  KEY `USER_ID` (`USER_ID`),
  KEY `ROLE_ID` (`ROLE_ID`),
  CONSTRAINT `ts_user_role_ibfk_1` FOREIGN KEY (`USER_ID`) REFERENCES `ts_user` (`USER_ID`) ON DELETE CASCADE,
  CONSTRAINT `ts_user_role_ibfk_2` FOREIGN KEY (`ROLE_ID`) REFERENCES `ts_role` (`ROLE_ID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='用户角色关联表';

/*Table structure for table `tsf_warning_load_detail` */

DROP TABLE IF EXISTS `tsf_warning_load_detail`;

CREATE TABLE `tsf_warning_load_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `actual_send_batch_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '实际发出班次日期',
  `actual_send_batch` varchar(30) DEFAULT NULL COMMENT '实际发出班次',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `load_tm` datetime DEFAULT NULL COMMENT '装车时间',
  `load_vehicle_logo` varchar(30) DEFAULT NULL COMMENT '装车车标',
  `unique_str` varchar(100) DEFAULT NULL COMMENT '跟卸车明细表关联的字段',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`,`actual_send_batch_dt`),
  KEY `idx_unique_str` (`unique_str`) USING HASH,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_comb_batch_date` (`actual_send_batch_dt`,`actual_send_batch`) USING HASH,
  KEY `idx_load_vehicle_logo` (`load_vehicle_logo`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=136 DEFAULT CHARSET=utf8 COMMENT='中转端预警装车明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(actual_send_batch_dt)
(PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `tsf_warning_unload_detail` */

DROP TABLE IF EXISTS `tsf_warning_unload_detail`;

CREATE TABLE `tsf_warning_unload_detail` (
  `id` bigint(18) NOT NULL AUTO_INCREMENT COMMENT 'ID主键',
  `main_waybill_no` varchar(50) NOT NULL COMMENT '运单号',
  `transfer_dt` date NOT NULL DEFAULT '0000-00-00' COMMENT '中转日期',
  `product_code` varchar(10) DEFAULT NULL COMMENT '产品类型',
  `source_country_abb` varchar(30) DEFAULT NULL COMMENT '原寄地国家简写',
  `source_city` varchar(10) DEFAULT NULL COMMENT '原寄地城市',
  `transfer_dept` varchar(30) DEFAULT NULL COMMENT '中转经营本部',
  `transfer_area` varchar(30) DEFAULT NULL COMMENT '中转地区',
  `transfer_network` varchar(30) DEFAULT NULL COMMENT '中转网点',
  `transfer_batch` varchar(30) DEFAULT NULL COMMENT '中转班次',
  `dest_country_abb` varchar(10) DEFAULT NULL COMMENT '目的地国家简写',
  `dest_city` varchar(10) DEFAULT NULL COMMENT '目的地城市',
  `unique_str` varchar(100) DEFAULT NULL COMMENT '跟装车明细表关联的字段',
  `set_start_time` varchar(30) DEFAULT NULL COMMENT '规定开始时间',
  `latest_arrival_time` varchar(30) DEFAULT NULL COMMENT '最晚到达时间',
  `set_end_time` varchar(30) DEFAULT NULL COMMENT '规定结束时间',
  `cons_qty` int(10) DEFAULT NULL COMMENT '件数',
  `actual_weight` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `meterage_weight` double(17,3) DEFAULT NULL COMMENT '计费重量',
  `is_cross_day` int(1) DEFAULT NULL COMMENT '是否跨天，0：是，1：否',
  `timeout_warning` varchar(30) DEFAULT NULL COMMENT '超时预警',
  `timeout` varchar(30) DEFAULT NULL COMMENT '超时',
  `is_timeout` int(1) DEFAULT '0' COMMENT '是否超时，0：其它，1：超时',
  `is_timeout_warning` int(1) DEFAULT '0' COMMENT '是否超时预警，0：其它，1：超时预警',
  `is_actual_send` int(1) DEFAULT '0' COMMENT '是否实发，0：其它，1：已发',
  `is_multi_send` int(1) DEFAULT '0' COMMENT '是否多发，0：其它，1：是',
  `unload_time` datetime DEFAULT NULL COMMENT '卸车时间',
  `unload_vehicle_logo` varchar(30) DEFAULT NULL COMMENT '卸车车标',
  `retention_reason` varchar(200) DEFAULT NULL COMMENT '滞留原因',
  `last_link_network` varchar(30) DEFAULT NULL COMMENT '上环节网点',
  `next_link_network` varchar(30) DEFAULT NULL COMMENT '下环节网点',
  `is_actual_to` int(1) DEFAULT '0' COMMENT '是否实到，0：其它，1：已到',
  `is_should_send` int(1) DEFAULT '0' COMMENT '是否应发，0：其它，1：已发',
  `is_no_send` int(1) DEFAULT NULL COMMENT '是否未发，0:其它，1：未发',
  `is_late_send` int(1) DEFAULT '0' COMMENT '是否晚发，0：其它，1：是',
  `is_retention` int(1) DEFAULT '0' COMMENT '是否滞留，0：其它，1：是',
  `is_capacity_match` int(1) DEFAULT '0' COMMENT '是否运力匹配，0：其它，1：是',
  `is_capacity_exception` int(1) DEFAULT '0' COMMENT '是否运力异常，0：其它，1：是',
  `is_total_sent` int(1) DEFAULT '0' COMMENT '是否累计已发，0：其它，1：是已发',
  `is_total_no_send` int(1) DEFAULT '0' COMMENT '是否累计未发，0：其它，1：是未发',
  `is_present` int(1) DEFAULT '0' COMMENT '是否在场，0：其它，1：在场',
  `network_type` int(1) DEFAULT NULL COMMENT '网点类型，0：关务网点，1：中转网点',
  `server_ip` varchar(50) DEFAULT NULL COMMENT '服务器运行IP',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `retention_time` varchar(300) DEFAULT NULL COMMENT '滞留时间',
  PRIMARY KEY (`id`,`transfer_dt`),
  KEY `idx_comb_waybill_no_network` (`main_waybill_no`,`transfer_network`) USING HASH,
  KEY `idx_unique_str` (`unique_str`) USING HASH,
  KEY `idx_transfer_dept` (`transfer_dept`) USING HASH,
  KEY `idx_transfer_area` (`transfer_area`) USING HASH,
  KEY `idx_transfer_network` (`transfer_network`) USING HASH,
  KEY `idx_transfer_batch` (`transfer_batch`) USING HASH,
  KEY `idx_dest_country_abb` (`dest_country_abb`) USING HASH,
  KEY `idx_product_code` (`product_code`) USING HASH,
  KEY `idx_network_type` (`network_type`) USING HASH,
  KEY `idx_main_waybill_no` (`main_waybill_no`) USING HASH,
  KEY `idx_source_city` (`source_city`) USING HASH,
  KEY `idx_dest_city` (`dest_city`) USING HASH,
  KEY `idx_unload_tm` (`unload_time`) USING BTREE,
  KEY `idx_unload_vehicle_logo` (`unload_vehicle_logo`) USING HASH,
  KEY `idx_transfer_dt` (`transfer_dt`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=500 DEFAULT CHARSET=utf8 COMMENT='中转端预警卸车明细表'
/*!50500 PARTITION BY RANGE  COLUMNS(transfer_dt)
(PARTITION p20181001 VALUES LESS THAN ('2018-10-01') ENGINE = InnoDB,
 PARTITION p20181008 VALUES LESS THAN ('2018-10-08') ENGINE = InnoDB,
 PARTITION p20181015 VALUES LESS THAN ('2018-10-15') ENGINE = InnoDB,
 PARTITION p20181022 VALUES LESS THAN ('2018-10-22') ENGINE = InnoDB,
 PARTITION p20181029 VALUES LESS THAN ('2018-10-29') ENGINE = InnoDB,
 PARTITION p20181105 VALUES LESS THAN ('2018-11-05') ENGINE = InnoDB,
 PARTITION p20181112 VALUES LESS THAN ('2018-11-12') ENGINE = InnoDB,
 PARTITION p20181119 VALUES LESS THAN ('2018-11-19') ENGINE = InnoDB,
 PARTITION p20181126 VALUES LESS THAN ('2018-11-26') ENGINE = InnoDB,
 PARTITION p20181203 VALUES LESS THAN ('2018-12-03') ENGINE = InnoDB,
 PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `tt_user_baseinfo` */

DROP TABLE IF EXISTS `tt_user_baseinfo`;

CREATE TABLE `tt_user_baseinfo` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `pk_userid` bigint(20) NOT NULL COMMENT '跟ts_user表id关联',
  `pk_customerid` int(11) DEFAULT NULL COMMENT '跟tt_custid_info表的id关联',
  `user_type` int(11) NOT NULL COMMENT '用户类型1 域账户 2 vip大客户 3 散客',
  `first_name` varchar(50) DEFAULT NULL COMMENT '姓',
  `last_name` varchar(50) DEFAULT NULL COMMENT '名',
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `country` varchar(50) DEFAULT NULL COMMENT '国家/地区',
  `mobile` varchar(20) DEFAULT NULL COMMENT '手机号码',
  PRIMARY KEY (`id`),
  KEY `pk_userid` (`pk_userid`),
  KEY `pk_customerid` (`pk_customerid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='用户基本信息表';

/*Table structure for table `user_operation_detail` */

DROP TABLE IF EXISTS `user_operation_detail`;

CREATE TABLE `user_operation_detail` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `insert_date` date DEFAULT NULL COMMENT '日期',
  `insert_month` varchar(10) DEFAULT NULL,
  `use_module` varchar(200) DEFAULT NULL COMMENT '使用模块',
  `operation_content` varchar(200) DEFAULT NULL COMMENT '操作内容',
  `operate_dept` varchar(50) DEFAULT NULL COMMENT '经营本部',
  `operate_area` varchar(100) DEFAULT NULL COMMENT '地区',
  `operate_net` varchar(100) DEFAULT NULL COMMENT '部门（网点）',
  `operater` varchar(200) DEFAULT NULL COMMENT '用户',
  `session_token` varchar(500) DEFAULT NULL COMMENT 'session的token值',
  `remarks` varchar(200) DEFAULT NULL COMMENT '备注',
  `status` smallint(6) DEFAULT NULL COMMENT '访问状态码',
  `insert_time` datetime NOT NULL COMMENT '操作时间',
  PRIMARY KEY (`id`,`insert_time`),
  KEY `insert_date` (`insert_date`),
  KEY `use_module` (`use_module`) USING HASH,
  KEY `operation_content` (`operation_content`) USING HASH,
  KEY `month_key` (`insert_month`) USING BTREE,
  KEY `operater_key` (`operater`) USING BTREE,
  KEY `operate_key` (`operate_dept`,`operate_area`,`operate_net`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=327929 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='用户使用明细'
/*!50500 PARTITION BY RANGE  COLUMNS(insert_time)
(PARTITION p20181210 VALUES LESS THAN ('2018-12-10') ENGINE = InnoDB,
 PARTITION p20181217 VALUES LESS THAN ('2018-12-17') ENGINE = InnoDB,
 PARTITION p20181224 VALUES LESS THAN ('2018-12-24') ENGINE = InnoDB,
 PARTITION p20181231 VALUES LESS THAN ('2018-12-31') ENGINE = InnoDB,
 PARTITION pmax VALUES LESS THAN ('2019-01-07') ENGINE = InnoDB,
 PARTITION p20190114 VALUES LESS THAN ('2019-01-14') ENGINE = InnoDB,
 PARTITION p20190121 VALUES LESS THAN ('2019-01-21') ENGINE = InnoDB,
 PARTITION p20190128 VALUES LESS THAN ('2019-01-28') ENGINE = InnoDB,
 PARTITION p20190204 VALUES LESS THAN ('2019-02-04') ENGINE = InnoDB,
 PARTITION p20190211 VALUES LESS THAN ('2019-02-11') ENGINE = InnoDB,
 PARTITION p20190218 VALUES LESS THAN ('2019-02-18') ENGINE = InnoDB,
 PARTITION p20190225 VALUES LESS THAN ('2019-02-25') ENGINE = InnoDB,
 PARTITION p20190304 VALUES LESS THAN ('2019-03-04') ENGINE = InnoDB,
 PARTITION p20190311 VALUES LESS THAN ('2019-03-11') ENGINE = InnoDB,
 PARTITION p20190318 VALUES LESS THAN ('2019-03-18') ENGINE = InnoDB,
 PARTITION p20190325 VALUES LESS THAN ('2019-03-25') ENGINE = InnoDB,
 PARTITION p20190401 VALUES LESS THAN ('2019-04-01') ENGINE = InnoDB,
 PARTITION p20190408 VALUES LESS THAN ('2019-04-08') ENGINE = InnoDB,
 PARTITION p20190415 VALUES LESS THAN ('2019-04-15') ENGINE = InnoDB,
 PARTITION p20190422 VALUES LESS THAN ('2019-04-22') ENGINE = InnoDB,
 PARTITION p20190429 VALUES LESS THAN ('2019-04-29') ENGINE = InnoDB,
 PARTITION p20190506 VALUES LESS THAN ('2019-05-06') ENGINE = InnoDB,
 PARTITION p20190513 VALUES LESS THAN ('2019-05-13') ENGINE = InnoDB,
 PARTITION p20190520 VALUES LESS THAN ('2019-05-20') ENGINE = InnoDB,
 PARTITION p20190527 VALUES LESS THAN ('2019-05-27') ENGINE = InnoDB,
 PARTITION p20190603 VALUES LESS THAN ('2019-06-03') ENGINE = InnoDB,
 PARTITION p20190610 VALUES LESS THAN ('2019-06-10') ENGINE = InnoDB,
 PARTITION p20190617 VALUES LESS THAN ('2019-06-17') ENGINE = InnoDB,
 PARTITION p20190624 VALUES LESS THAN ('2019-06-24') ENGINE = InnoDB,
 PARTITION p20190701 VALUES LESS THAN ('2019-07-01') ENGINE = InnoDB,
 PARTITION p20190708 VALUES LESS THAN ('2019-07-08') ENGINE = InnoDB,
 PARTITION p20190715 VALUES LESS THAN ('2019-07-15') ENGINE = InnoDB,
 PARTITION p20190722 VALUES LESS THAN ('2019-07-22') ENGINE = InnoDB,
 PARTITION p20190729 VALUES LESS THAN ('2019-07-29') ENGINE = InnoDB,
 PARTITION p20190805 VALUES LESS THAN ('2019-08-05') ENGINE = InnoDB,
 PARTITION p20190812 VALUES LESS THAN ('2019-08-12') ENGINE = InnoDB,
 PARTITION p20190819 VALUES LESS THAN ('2019-08-19') ENGINE = InnoDB,
 PARTITION p20190826 VALUES LESS THAN ('2019-08-26') ENGINE = InnoDB,
 PARTITION p20190902 VALUES LESS THAN ('2019-09-02') ENGINE = InnoDB,
 PARTITION p20190909 VALUES LESS THAN ('2019-09-09') ENGINE = InnoDB,
 PARTITION p20190916 VALUES LESS THAN ('2019-09-16') ENGINE = InnoDB,
 PARTITION p20190923 VALUES LESS THAN ('2019-09-23') ENGINE = InnoDB,
 PARTITION p20190930 VALUES LESS THAN ('2019-09-30') ENGINE = InnoDB,
 PARTITION p20191007 VALUES LESS THAN ('2019-10-07') ENGINE = InnoDB,
 PARTITION p20191014 VALUES LESS THAN ('2019-10-14') ENGINE = InnoDB,
 PARTITION p20191021 VALUES LESS THAN ('2019-10-21') ENGINE = InnoDB,
 PARTITION p20191028 VALUES LESS THAN ('2019-10-28') ENGINE = InnoDB,
 PARTITION p20191104 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB) */;

/*Table structure for table `waybill_addition` */

DROP TABLE IF EXISTS `waybill_addition`;

CREATE TABLE `waybill_addition` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `waybill_id` varchar(50) DEFAULT NULL COMMENT '运单ID',
  `additional_id` varchar(50) DEFAULT NULL COMMENT '主键ID',
  `additional_key` varchar(50) DEFAULT NULL COMMENT '运单业务附加信息key值 ',
  `additional_values` varchar(1000) DEFAULT NULL COMMENT '运单业务附加信息值',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `order_no` varchar(50) DEFAULT NULL COMMENT '顺丰订单号',
  `input_tm` timestamp NULL DEFAULT NULL COMMENT '创建日期 ',
  `ext_attr` varchar(1000) DEFAULT NULL COMMENT '其他属性',
  `stms_insert_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_waybill_no` (`waybill_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=12575890 DEFAULT CHARSET=utf8 COMMENT='运单业务附加信息表';

/*Table structure for table `waybill_additional_ext` */

DROP TABLE IF EXISTS `waybill_additional_ext`;

CREATE TABLE `waybill_additional_ext` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `ext_id` varchar(50) DEFAULT NULL COMMENT '主键ID',
  `waybill_id` varchar(50) DEFAULT NULL COMMENT '运单主键',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `order_no` varchar(50) DEFAULT NULL COMMENT '顺丰订单号',
  `create_time` timestamp NULL DEFAULT NULL COMMENT '创建时间',
  `ext_attr` mediumtext COMMENT '其他属性',
  `attr001` mediumtext,
  `attr002` mediumtext,
  `attr003` mediumtext,
  `attr004` mediumtext,
  `attr005` mediumtext,
  `attr006` mediumtext,
  `attr007` mediumtext,
  `attr008` mediumtext,
  `attr009` mediumtext,
  `attr010` mediumtext,
  `attr011` mediumtext,
  `attr012` mediumtext,
  `attr013` mediumtext,
  `attr014` mediumtext,
  `attr015` mediumtext,
  `attr016` mediumtext,
  `attr017` mediumtext,
  `attr018` mediumtext,
  `attr019` mediumtext,
  `attr020` mediumtext,
  `attr021` mediumtext,
  `attr022` mediumtext,
  `attr023` mediumtext,
  `attr024` mediumtext,
  `attr025` mediumtext,
  `attr026` mediumtext,
  `attr027` mediumtext,
  `attr028` mediumtext,
  `attr029` mediumtext,
  `attr030` mediumtext,
  `attr031` mediumtext,
  `attr032` mediumtext,
  `attr033` mediumtext,
  `attr034` mediumtext,
  `attr035` mediumtext,
  `attr036` mediumtext,
  `attr037` mediumtext,
  `attr038` mediumtext,
  `attr039` mediumtext,
  `attr040` mediumtext,
  `attr041` mediumtext,
  `attr042` mediumtext,
  `attr043` mediumtext,
  `attr044` mediumtext,
  `attr045` mediumtext,
  `attr046` mediumtext,
  `attr047` mediumtext,
  `attr048` mediumtext,
  `attr049` mediumtext,
  `attr050` mediumtext,
  `stms_insert_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_waybill_no` (`waybill_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2875312 DEFAULT CHARSET=utf8 COMMENT='运单附加扩展';

/*Table structure for table `waybill_addr_cons` */

DROP TABLE IF EXISTS `waybill_addr_cons`;

CREATE TABLE `waybill_addr_cons` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `waybill_id` varchar(50) DEFAULT NULL COMMENT '订单ID',
  `contacts_id` varchar(50) DEFAULT NULL COMMENT '主键ID',
  `consignor_comp_name` varchar(500) DEFAULT NULL COMMENT '收件地址',
  `consignor_addr` varchar(1000) DEFAULT NULL COMMENT '寄件地址',
  `consignor_phone` varchar(50) DEFAULT NULL COMMENT '寄件电话',
  `consignor_cont_name` varchar(200) DEFAULT NULL COMMENT '寄件联系人',
  `consignor_mobile` varchar(25) DEFAULT NULL COMMENT '寄件手机',
  `addressee_comp_name` varchar(500) DEFAULT NULL COMMENT '收件公司',
  `addressee_addr` varchar(1000) DEFAULT NULL COMMENT '收件地址',
  `addressee_phone` varchar(25) DEFAULT NULL COMMENT '收件电话 ',
  `addressee_cont_name` varchar(200) DEFAULT NULL COMMENT '收件联系人',
  `addressee_mobile` varchar(25) DEFAULT NULL COMMENT '收件手机',
  `consignor_addr_native` varchar(100) DEFAULT NULL COMMENT '寄方客户编码',
  `addressee_addr_native` varchar(100) DEFAULT NULL COMMENT '收方客户编码 ',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `order_no` varchar(50) DEFAULT NULL COMMENT '顺丰订单号',
  `input_tm` timestamp NULL DEFAULT NULL COMMENT '创建日期 ',
  `ext_attr` varchar(1000) DEFAULT NULL COMMENT '其他属性',
  `consignor_city_code` varchar(200) DEFAULT NULL COMMENT '寄件城市代码',
  `consignor_dept_code` varchar(200) DEFAULT NULL COMMENT '寄件网点代码',
  `consignor_transit_code` varchar(32) DEFAULT NULL COMMENT '寄件中转场代码',
  `addressee_dept_code` varchar(32) DEFAULT NULL COMMENT '收件网点代码',
  `addressee_transit_code` varchar(32) DEFAULT NULL COMMENT '收件中转场代码',
  `addressee_team_code` varchar(32) DEFAULT NULL COMMENT '收件单元区域',
  `route_label` varchar(100) DEFAULT NULL COMMENT '路由标签',
  `stms_insert_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_waybill_no` (`waybill_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3850443 DEFAULT CHARSET=utf8 COMMENT='运单收寄件人信息表';

/*Table structure for table `waybill_consign` */

DROP TABLE IF EXISTS `waybill_consign`;

CREATE TABLE `waybill_consign` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `package_id` varchar(50) DEFAULT NULL COMMENT '包裹ID',
  `waybill_id` varchar(50) DEFAULT NULL COMMENT '运单ID',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `cons_id` varchar(50) DEFAULT NULL COMMENT '主键ID',
  `cons_name` varchar(600) DEFAULT NULL COMMENT '物品名称',
  `cons_qty` varchar(600) DEFAULT NULL COMMENT '数量',
  `weight_qty` double(16,2) DEFAULT NULL COMMENT '重量',
  `cons_value` double(24,10) DEFAULT NULL COMMENT '价值',
  `qty_unit` varchar(32) DEFAULT NULL COMMENT '数量单位',
  `product_record_no` varchar(50) DEFAULT NULL COMMENT '产品国检备案编号',
  `package_no` varchar(50) DEFAULT NULL COMMENT '包裹运单号',
  `order_no` varchar(50) DEFAULT NULL COMMENT '顺丰订单号',
  `input_tm` timestamp NULL DEFAULT NULL COMMENT '创建日期',
  `ext_attr` varchar(1000) DEFAULT NULL COMMENT '其他属性',
  `hs_code` varchar(100) DEFAULT NULL COMMENT '海关编码',
  `stms_insert_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_waybill_no` (`waybill_no`) USING BTREE,
  KEY `idx_package_no` (`package_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=9475691 DEFAULT CHARSET=utf8 COMMENT='托寄物信息表';

/*Table structure for table `waybill_customs` */

DROP TABLE IF EXISTS `waybill_customs`;

CREATE TABLE `waybill_customs` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `waybill_id` varchar(50) DEFAULT NULL COMMENT '运单ID',
  `export_id` varchar(50) DEFAULT NULL COMMENT '主键ID',
  `customs_batchs` varchar(255) DEFAULT NULL COMMENT '报关批次 ',
  `customs_type_code` varchar(50) DEFAULT NULL COMMENT '报关类型',
  `pre_customs_dt` timestamp NULL DEFAULT NULL COMMENT '预报关日期 ',
  `source_area` varchar(2000) DEFAULT NULL COMMENT '原产地',
  `consignor_postal_code` varchar(25) DEFAULT NULL COMMENT '寄方邮政编码 ',
  `addressee_postal_code` varchar(25) DEFAULT NULL COMMENT '收方邮政编码',
  `country_code` varchar(10) DEFAULT NULL COMMENT '国家代码',
  `consignor_tax_no` varchar(50) DEFAULT NULL COMMENT '寄件人税号',
  `unified_code` varchar(50) DEFAULT NULL COMMENT '统一编码（收件人税号）',
  `twinvoice_type_code` varchar(10) DEFAULT NULL COMMENT '台湾发票类型',
  `consult_code` varchar(100) DEFAULT NULL COMMENT '参考编码',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `order_no` varchar(50) DEFAULT NULL COMMENT '顺丰订单号',
  `input_tm` timestamp NULL DEFAULT NULL COMMENT '创建日期',
  `ext_attr` varchar(1000) DEFAULT NULL COMMENT '其他属性',
  `stms_insert_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_waybill_no` (`waybill_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3860045 DEFAULT CHARSET=utf8 COMMENT='出口件相关信息表';

/*Table structure for table `waybill_fee` */

DROP TABLE IF EXISTS `waybill_fee`;

CREATE TABLE `waybill_fee` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `waybill_id` varchar(50) DEFAULT NULL COMMENT '运单ID',
  `fee_id` varchar(50) DEFAULT NULL COMMENT '主键ID',
  `fee_type_code` varchar(32) DEFAULT NULL COMMENT '费用类型代码',
  `fee_amt` double(16,2) DEFAULT NULL COMMENT '费用金额',
  `gather_zone_code` varchar(50) DEFAULT NULL COMMENT '收付款网点',
  `payment_type_code` varchar(32) DEFAULT NULL COMMENT '付款方式',
  `settlement_type_code` varchar(64) DEFAULT NULL COMMENT '结算方式',
  `payment_change_type_code` varchar(32) DEFAULT NULL COMMENT '付款方式变更',
  `customer_acct_code` varchar(50) DEFAULT NULL COMMENT '付款账号',
  `currency_code` varchar(50) DEFAULT NULL COMMENT '币别代码',
  `service_id` varchar(50) DEFAULT NULL COMMENT '服务ID',
  `gather_emp_code` varchar(50) DEFAULT NULL COMMENT '交款人',
  `biz_owner_zone_code` varchar(32) DEFAULT NULL COMMENT '业务所属地区编码',
  `source_code_fee_amt` double(16,2) DEFAULT NULL COMMENT '原寄地货款',
  `exchange_rate` double(20,6) DEFAULT NULL COMMENT '汇率(目的地到原寄地)',
  `dest_currency_code` varchar(32) DEFAULT NULL COMMENT '目的地所在币种',
  `fee_amt_ind` double(16,2) DEFAULT NULL COMMENT '个性化费用',
  `fee_ind_type` varchar(10) DEFAULT NULL COMMENT '个性化类型',
  `valution_acct_code` varchar(50) DEFAULT NULL COMMENT '计价卡号',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `order_no` varchar(50) DEFAULT NULL COMMENT '顺丰订单号',
  `input_tm` timestamp NULL DEFAULT NULL COMMENT '创建日期',
  `ext_attr` varchar(1000) DEFAULT NULL COMMENT '其他属性',
  `stms_insert_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_waybill_no` (`waybill_no`) USING BTREE,
  KEY `idx_customer_acct_code` (`customer_acct_code`) USING BTREE COMMENT '月结账号索引'
) ENGINE=InnoDB AUTO_INCREMENT=5102912 DEFAULT CHARSET=utf8 COMMENT='运单费用信息表';

/*Table structure for table `waybill_image` */

DROP TABLE IF EXISTS `waybill_image`;

CREATE TABLE `waybill_image` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `waybill_id` varchar(50) DEFAULT NULL COMMENT '运单ID',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `bill_code` varchar(50) DEFAULT NULL COMMENT '运单号',
  `waybill_type` varchar(10) DEFAULT NULL COMMENT '运单类型',
  `file_url` varchar(225) DEFAULT NULL COMMENT '文件路径',
  `upload_time` timestamp NULL DEFAULT NULL COMMENT '上传时间',
  `scan_zone_code` varchar(50) DEFAULT NULL COMMENT '扫描网点代码',
  `scan_time` timestamp NULL DEFAULT NULL COMMENT '扫描时间',
  `scaner` varchar(25) DEFAULT NULL COMMENT '扫描员',
  `customs_batch` varchar(50) DEFAULT NULL COMMENT '报关批次',
  `pre_customs_date` timestamp NULL DEFAULT NULL COMMENT '报关时间',
  `consigned_time` timestamp NULL DEFAULT NULL COMMENT '寄件日期',
  `scan_dtm` timestamp NULL DEFAULT NULL COMMENT 'SCANTIME 保留字段',
  `error_flag` varchar(255) DEFAULT NULL COMMENT '错误信息',
  `error_awb` varchar(50) DEFAULT NULL,
  `partition` varchar(50) DEFAULT NULL COMMENT 'PARTITION 保留字段',
  `bill_style` int(5) DEFAULT NULL COMMENT '出口类型,0为非出口,1为出口,为1时必须存在报关批次',
  `is_sub` int(5) DEFAULT NULL COMMENT 'ISSUB 是否有子单',
  `bill_service_type` varchar(50) DEFAULT NULL COMMENT 'BILLSERVICETYPE,服务类型,保留字段',
  `audit_time` timestamp NULL DEFAULT NULL COMMENT '审核时间',
  `re_upload_time` timestamp NULL DEFAULT NULL COMMENT '重新上传总部时间REUPLOADTIME',
  `is_cod_flag` int(5) DEFAULT NULL COMMENT ' 是否代收货款，或保留字段,1为代收货款',
  `clor_code` varchar(50) DEFAULT NULL COMMENT '色块COLOR_CODE',
  `is_hand` int(5) DEFAULT NULL COMMENT '是否手工输入',
  `ext_attr` varchar(1000) DEFAULT NULL COMMENT '其他属性',
  `stms_insert_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_waybill_no` (`waybill_no`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='图片信息表';

/*Table structure for table `waybill_package` */

DROP TABLE IF EXISTS `waybill_package`;

CREATE TABLE `waybill_package` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `waybill_id` varchar(50) DEFAULT NULL COMMENT '运单ID',
  `package_id` varchar(50) DEFAULT NULL COMMENT '包裹ID',
  `package_no` varchar(50) DEFAULT NULL COMMENT '包裹运单号',
  `package_long` double(16,4) DEFAULT NULL COMMENT '包裹长',
  `package_width` double(16,4) DEFAULT NULL COMMENT '包裹宽',
  `package_high` double(16,4) DEFAULT NULL COMMENT '包裹高',
  `package_volume` double(16,2) DEFAULT NULL COMMENT '体积',
  `package_unit_weight` varchar(20) DEFAULT NULL COMMENT '体积单位',
  `package_weight` double(17,3) DEFAULT NULL COMMENT '包裹重量',
  `package_status` varchar(10) DEFAULT NULL COMMENT '包裹状态',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `order_no` varchar(50) DEFAULT NULL COMMENT '顺丰订单号',
  `input_tm` timestamp NULL DEFAULT NULL COMMENT '创建日期',
  `ext_attr` varchar(1000) DEFAULT NULL COMMENT '其他属性',
  `stms_insert_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_waybill_no` (`waybill_no`) USING BTREE,
  KEY `packageNo_key` (`package_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4431790 DEFAULT CHARSET=utf8 COMMENT='包裹信息表';

/*Table structure for table `waybill_remark` */

DROP TABLE IF EXISTS `waybill_remark`;

CREATE TABLE `waybill_remark` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `waybill_id` varchar(50) DEFAULT NULL COMMENT '运单ID',
  `labelling_id` varchar(50) DEFAULT NULL COMMENT '主键ID',
  `labelling_pattern` varchar(50) DEFAULT NULL COMMENT '标记类型',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `order_no` varchar(50) DEFAULT NULL COMMENT '顺丰订单号',
  `input_tm` timestamp NULL DEFAULT NULL COMMENT '创建日期',
  `ext_attr` varchar(1000) DEFAULT NULL COMMENT '其他属性',
  `stms_insert_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_waybill_no` (`waybill_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2103508 DEFAULT CHARSET=utf8 COMMENT='标记关系信息表';

/*Table structure for table `waybill_service` */

DROP TABLE IF EXISTS `waybill_service`;

CREATE TABLE `waybill_service` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `waybill_id` varchar(50) DEFAULT NULL COMMENT '运单ID',
  `service_id` varchar(50) DEFAULT NULL COMMENT '服务ID',
  `service_prod_code` varchar(50) DEFAULT NULL COMMENT '增值服务代码',
  `attribute1` varchar(256) DEFAULT NULL COMMENT '属性1',
  `attribute2` varchar(256) DEFAULT NULL COMMENT '属性2',
  `attribute3` varchar(256) DEFAULT NULL COMMENT '属性3',
  `attribute4` varchar(256) DEFAULT NULL COMMENT '属性4',
  `attribute5` varchar(256) DEFAULT NULL COMMENT '属性5',
  `waybill_no` varchar(50) DEFAULT NULL COMMENT '运单号',
  `order_no` varchar(50) DEFAULT NULL COMMENT '顺丰订单号',
  `input_tm` timestamp NULL DEFAULT NULL COMMENT '创建日期',
  `ext_attr` varchar(1000) DEFAULT NULL COMMENT '其他属性',
  `stms_insert_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_waybill_no` (`waybill_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=541650 DEFAULT CHARSET=utf8 COMMENT=' 运单增值服务信息表';

/*Table structure for table `waybill_special_handler` */

DROP TABLE IF EXISTS `waybill_special_handler`;

CREATE TABLE `waybill_special_handler` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `osh_id` varchar(32) DEFAULT NULL COMMENT 'oms id',
  `order_no` varchar(32) DEFAULT NULL COMMENT '内部订单号',
  `type` varchar(20) DEFAULT NULL COMMENT '类型',
  `code` varchar(20) DEFAULT NULL COMMENT '编码',
  `operation` varchar(200) DEFAULT NULL COMMENT '操作',
  `create_tm` datetime DEFAULT NULL COMMENT '创建时间',
  `update_tm` datetime DEFAULT NULL,
  `ext_json` longtext COMMENT '扩展json',
  `waybill_id` varchar(32) DEFAULT NULL COMMENT '运单主键',
  `waybill_no` varchar(32) DEFAULT NULL COMMENT '运单号',
  `insert_time` datetime DEFAULT NULL COMMENT '系统入库时间',
  PRIMARY KEY (`id`),
  KEY `idx_waybill_no` (`waybill_no`) USING HASH,
  KEY `idx_insert_time` (`insert_time`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=25846 DEFAULT CHARSET=utf8 COMMENT='特殊操作信息';

/*Table structure for table `waybill_taxbill_info` */

DROP TABLE IF EXISTS `waybill_taxbill_info`;

CREATE TABLE `waybill_taxbill_info` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `taxbill_id` varchar(32) DEFAULT NULL COMMENT '上游系统ID',
  `sn` varchar(18) DEFAULT NULL COMMENT '序号',
  `in_date` date DEFAULT NULL COMMENT '进口抵达日期',
  `customs_date` date DEFAULT NULL COMMENT '报关日期',
  `mainb_no` varchar(150) DEFAULT NULL COMMENT '海关提单号',
  `waybill_no` varchar(32) DEFAULT NULL COMMENT '运单号',
  `order_no` varchar(32) DEFAULT NULL COMMENT '订单号',
  `dec_code` varchar(150) DEFAULT NULL COMMENT '申报编号',
  `tax_per_no` varchar(150) DEFAULT NULL COMMENT '纳税人编号',
  `src_company` varchar(300) DEFAULT NULL COMMENT '寄方公司名称',
  `src_person_name` varchar(150) DEFAULT NULL COMMENT '寄方联系人',
  `des_company` varchar(300) DEFAULT NULL COMMENT '收方公司名称',
  `des_person_name` varchar(150) DEFAULT NULL COMMENT '收方联系人',
  `dec_value` double(13,5) DEFAULT NULL COMMENT '申报价值',
  `cus_currency_symbol` varchar(3) DEFAULT NULL COMMENT '申报币种',
  `dec_type` varchar(150) DEFAULT NULL COMMENT '申报类型',
  `custom_duty` double(12,5) DEFAULT NULL COMMENT '关税',
  `gst_value` double(12,5) DEFAULT NULL COMMENT '消费税',
  `vat_value` double(12,5) DEFAULT NULL COMMENT '增值税',
  `excise_duty` double(12,5) DEFAULT NULL COMMENT '货物税',
  `other_duty_amount` double(12,5) DEFAULT NULL COMMENT '其他税',
  `total_value` double(12,5) DEFAULT NULL COMMENT '税金合计',
  `ware_house_fee` double(12,5) DEFAULT NULL COMMENT '报关仓储费',
  `handling_fee` double(12,5) DEFAULT NULL COMMENT '报关服务费',
  `quarantine_fee` double(12,5) DEFAULT NULL COMMENT '检验检疫费',
  `other_fee` double(12,5) DEFAULT NULL COMMENT '其他费用',
  `total_fee_amount` double(12,5) DEFAULT NULL COMMENT '费用合计',
  `total_fee_val` double(20,5) DEFAULT NULL COMMENT '税费合计',
  `currency` varchar(3) DEFAULT NULL COMMENT '税金币种',
  `cus_dept_code` varchar(30) DEFAULT NULL COMMENT '口岸代码',
  `cus_net_code` varchar(10) DEFAULT NULL COMMENT '口岸网点代码',
  `interdna` varchar(2) DEFAULT NULL COMMENT '口岸国家',
  `tax_account` varchar(300) DEFAULT NULL COMMENT '税金结算账号',
  `tax_payment_type` varchar(60) DEFAULT NULL COMMENT '税金付款方式',
  `is_audit` char(1) DEFAULT NULL COMMENT '是否需要审核',
  `pay_zone_code` varchar(30) DEFAULT NULL COMMENT '税金付款网点',
  `payment_currency` varchar(30) DEFAULT NULL COMMENT '付款币种，根据付款网点自动带出',
  `gather_emp_code` varchar(30) DEFAULT NULL COMMENT '交款的收派员工号',
  `payment_time` datetime DEFAULT NULL COMMENT '交款时间，业务实际发生时间(YYYY-MM-DD HH24:MI:SS)',
  `input_time` datetime DEFAULT NULL COMMENT 'CMSP传入时间(YYYY-MM-DD HH24:MI:SS)',
  `version` int(2) DEFAULT NULL COMMENT '版本号',
  `source_zone_code` varchar(30) DEFAULT NULL COMMENT '原寄地代码',
  `dest_zone_code` varchar(30) DEFAULT NULL COMMENT '目的地代码',
  `cargo_type_code` varchar(30) DEFAULT NULL COMMENT '快件内容',
  `limit_type_code` varchar(30) DEFAULT NULL COMMENT '时效类型',
  `distance_type_code` varchar(30) DEFAULT NULL COMMENT '区域类型',
  `transport_type_code` varchar(30) DEFAULT NULL COMMENT '运输方式',
  `express_type_code` varchar(30) DEFAULT NULL COMMENT '业务类型',
  `addressee_addr` varchar(200) DEFAULT NULL COMMENT '清单收件地址',
  `addressee_phone` varchar(100) DEFAULT NULL COMMENT '清单收件人联系电话',
  `quantity` double(16,2) DEFAULT NULL COMMENT '件数',
  `real_weight_qty` double(17,3) DEFAULT NULL COMMENT '实际重量',
  `cons_name` text COMMENT '托寄物名称',
  `waybill_id` varchar(32) DEFAULT NULL COMMENT '运单主键',
  `update_tm` datetime DEFAULT NULL COMMENT '修改时间',
  `create_tm` datetime DEFAULT NULL COMMENT '创建时间',
  `ext_json` longtext COMMENT '扩展json',
  `insert_time` datetime DEFAULT NULL COMMENT '系统入库时间',
  PRIMARY KEY (`id`),
  KEY `idx_waybill_no` (`waybill_no`) USING HASH,
  KEY `idx_insert_time` (`insert_time`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=20032 DEFAULT CHARSET=utf8 COMMENT='税金信息';

/*Table structure for table `ws_customer` */

DROP TABLE IF EXISTS `ws_customer`;

CREATE TABLE `ws_customer` (
  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `code` varchar(50) DEFAULT NULL COMMENT '接入码',
  `valid_code` varchar(50) DEFAULT NULL COMMENT '接入秘钥',
  `status` int(2) DEFAULT NULL COMMENT '状态(1:有效，0:无效)',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`ID`),
  UNIQUE KEY `code_uq_key` (`code`,`valid_code`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=187 DEFAULT CHARSET=utf8 COMMENT='STMS接口接入用户表';

/*Table structure for table `ws_goods_list` */

DROP TABLE IF EXISTS `ws_goods_list`;

CREATE TABLE `ws_goods_list` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `bno` varchar(50) DEFAULT NULL COMMENT '运单号',
  `cusbatch` varchar(50) DEFAULT NULL COMMENT '报关批次',
  `customs_dep` varchar(50) DEFAULT NULL COMMENT '报关部门',
  `customs_date` date DEFAULT NULL COMMENT '报关日期',
  `velist` varchar(50) DEFAULT NULL COMMENT '车次',
  `gate_type` varchar(5) DEFAULT NULL COMMENT '报关类型',
  `flightno` varchar(300) DEFAULT NULL COMMENT '车牌/航班号',
  `mawb` varchar(33) DEFAULT NULL COMMENT '主提单号',
  `pcs` int(50) DEFAULT NULL COMMENT '件数',
  `aweight` decimal(50,5) DEFAULT NULL COMMENT '实际重量',
  `gdesc` varchar(3000) DEFAULT NULL COMMENT '托寄物内容',
  `cusvalue` decimal(17,6) DEFAULT NULL COMMENT '申报价值',
  `payment_type` varchar(90) DEFAULT NULL COMMENT '付款方式',
  `des_postal_code` varchar(50) DEFAULT NULL COMMENT '收件地址邮政编码',
  `dls_acct_num` varchar(50) DEFAULT NULL,
  `srccompany` varchar(300) DEFAULT NULL COMMENT '寄件公司',
  `srcpname` varchar(150) DEFAULT NULL COMMENT '寄件联络人',
  `srcaddr` varchar(600) DEFAULT NULL COMMENT '寄件地址',
  `src_city_name` varchar(300) DEFAULT NULL COMMENT '寄件城市名称',
  `src_state` varchar(100) DEFAULT NULL COMMENT '寄件人州省',
  `srctel` varchar(100) DEFAULT NULL,
  `despname` varchar(150) DEFAULT NULL COMMENT '收件联络人',
  `descompany` varchar(300) DEFAULT NULL COMMENT '收件公司',
  `desaddr` varchar(600) DEFAULT NULL COMMENT '收件地址',
  `des_city` varchar(200) DEFAULT NULL COMMENT '收件城市',
  `des_state` varchar(50) DEFAULT NULL,
  `descountry` varchar(50) DEFAULT NULL COMMENT '收件国家地区代码',
  `destel` varchar(100) DEFAULT NULL,
  `subWaybillNo` varchar(4000) DEFAULT NULL COMMENT '子运单号',
  `create_date` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '创建时间',
  `quantity` varchar(4000) DEFAULT NULL COMMENT '数量/单位',
  `express_type` varchar(50) DEFAULT NULL COMMENT '快件类型',
  `CARGO_TYPE_CODE` varchar(100) DEFAULT '' COMMENT '快件内容',
  `ORIORDER_ID` varchar(100) DEFAULT '' COMMENT '原始订单号',
  `HSCODE` varchar(1000) DEFAULT NULL COMMENT '商品编码',
  `SRCCOUNTRY` varchar(50) DEFAULT NULL COMMENT '寄件人国别地区代码',
  `SRCCODE` varchar(50) DEFAULT NULL COMMENT '原寄地代码',
  `DESCODE` varchar(50) DEFAULT NULL COMMENT '目的地代码',
  `WEIGHT` decimal(50,6) DEFAULT NULL COMMENT '计费重量',
  `CUSTOMER_ACCTCODE` varchar(100) DEFAULT NULL COMMENT '月结卡号',
  `insert_time` datetime DEFAULT NULL COMMENT '入库时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `index_bno` (`bno`) USING BTREE,
  KEY `index_mawb` (`mawb`),
  KEY `index_insert_time` (`insert_time`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1131177 DEFAULT CHARSET=utf8 COMMENT='货物清单数据原始数据表';

/*Table structure for table `zthr_etl_hr_emp` */

DROP TABLE IF EXISTS `zthr_etl_hr_emp`;

CREATE TABLE `zthr_etl_hr_emp` (
  `SERNO` varchar(50) NOT NULL COMMENT '序列号',
  `EMP_NUM` varchar(80) NOT NULL COMMENT '工号',
  `NET_CODE` varchar(50) NOT NULL COMMENT '网点代码',
  `POSITION_NAME` varchar(100) NOT NULL COMMENT '职位名称',
  `ZHRZZQC` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`SERNO`,`EMP_NUM`),
  KEY `NET_CODE` (`NET_CODE`) USING BTREE,
  KEY `EMP_NUM` (`EMP_NUM`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Table structure for table `zthr_etl_log` */

DROP TABLE IF EXISTS `zthr_etl_log`;

CREATE TABLE `zthr_etl_log` (
  `MANDT` varchar(100) NOT NULL COMMENT '客户端',
  `INSTANCE` varchar(80) NOT NULL COMMENT '处理实例 (值)',
  `SERNO_ETL` varchar(80) NOT NULL COMMENT 'etl 批次号,根据SERNO_ETL做为唯一KEY去主题表去匹配字段SERNO得到数据',
  `THEME` varchar(80) NOT NULL COMMENT 'ESB主题',
  `JOB_NAME` varchar(600) NOT NULL COMMENT '作业名',
  `SEND_TO` varchar(200) NOT NULL COMMENT '接收系统',
  `COUNTER` int(4) NOT NULL COMMENT '计数器',
  `STATUS` varchar(2) NOT NULL COMMENT '状态," ‘’ ：表示SAP生成数据‘S’：DS处理完状态"',
  `MODIFY_TM_DS` varchar(50) NOT NULL COMMENT '修改时间戳',
  `CREATE_TM` varchar(50) NOT NULL COMMENT '创建时间戳',
  `LOGDATE` date NOT NULL COMMENT '日期状态创建',
  `LOGTIME` time NOT NULL COMMENT '时间状态创建',
  PRIMARY KEY (`SERNO_ETL`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
